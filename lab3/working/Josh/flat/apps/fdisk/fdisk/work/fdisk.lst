 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 61440
    3                      ; Data size: 37356
    4                      ; Text size: 5580
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.global _diskblocksize
   80  000010d4          	.data
   81  00003000          	.align 2
   82  00003000          	_diskblocksize:
   83  00003000  00000000	.word 0
   84  00003004          	.global _disksize
   85  00003004          	.align 2
   86  00003004          	_disksize:
   87  00003004  00000000	.word 0
   88  00003008          	.global _num_filesystem_blocks
   89  00003008          	.align 2
   90  00003008          	_num_filesystem_blocks:
   91  00003008  00000000	.word 0
   92  0000300c          	.align 2
   93  0000300c          	LC0_LF0:
   94  0000300c  66646973	.ascii "fdisk -- Disk Size in bytes: %d\n\000"
   94  00003010  6b202d2d	
   94  00003014  20446973	
   94  00003018  6b205369	
   94  0000301c  7a652069	
   94  00003020  6e206279	
   94  00003024  7465733a	
   94  00003028  2025640a	
   94  0000302c  00      	
   95  0000302d          	.align 2
   96  00003030          	LC1_LF0:
   97  00003030  66646973	.ascii "fdisk -- Logical Disk Block Size in bytes: %d\n\000"
   97  00003034  6b202d2d	
   97  00003038  204c6f67	
   97  0000303c  6963616c	
   97  00003040  20446973	
   97  00003044  6b20426c	
   97  00003048  6f636b20	
   97  0000304c  53697a65	
   97  00003050  20696e20	
   97  00003054  62797465	
   97  00003058  733a2025	
   97  0000305c  640a00  	
   98  0000305f          	.align 2
   99  00003060          	LC2_LF0:
  100  00003060  66646973	.ascii "fdisk -- Number of File System Blocks: %d\n\000"
  100  00003064  6b202d2d	
  100  00003068  204e756d	
  100  0000306c  62657220	
  100  00003070  6f662046	
  100  00003074  696c6520	
  100  00003078  53797374	
  100  0000307c  656d2042	
  100  00003080  6c6f636b	
  100  00003084  733a2025	
  100  00003088  640a00  	
  101  0000308b          	.align 2
  102  0000308c          	LC3_LF0:
  103  0000308c  66646973	.ascii "fdisk -- Size of inode: %d\n\000"
  103  00003090  6b202d2d	
  103  00003094  2053697a	
  103  00003098  65206f66	
  103  0000309c  20696e6f	
  103  000030a0  64653a20	
  103  000030a4  25640a00	
  104  000030a8          	.align 2
  105  000030a8          	LC4_LF0:
  106  000030a8  66646973	.ascii "fdisk -- 1 file system block used for MBR/Superblock\n\000"
  106  000030ac  6b202d2d	
  106  000030b0  20312066	
  106  000030b4  696c6520	
  106  000030b8  73797374	
  106  000030bc  656d2062	
  106  000030c0  6c6f636b	
  106  000030c4  20757365	
  106  000030c8  6420666f	
  106  000030cc  72204d42	
  106  000030d0  522f5375	
  106  000030d4  70657262	
  106  000030d8  6c6f636b	
  106  000030dc  0a00    	
  107  000030de          	.align 2
  108  000030e0          	LC5_LF0:
  109  000030e0  66646973	.ascii "fdisk -- %d file system blocks used for inodes\n\000"
  109  000030e4  6b202d2d	
  109  000030e8  20256420	
  109  000030ec  66696c65	
  109  000030f0  20737973	
  109  000030f4  74656d20	
  109  000030f8  626c6f63	
  109  000030fc  6b732075	
  109  00003100  73656420	
  109  00003104  666f7220	
  109  00003108  696e6f64	
  109  0000310c  65730a00	
  110  00003110          	.align 2
  111  00003110          	LC6_LF0:
  112  00003110  66646973	.ascii "fdisk -- %d file system blocks used for free block vector\n\000"
  112  00003114  6b202d2d	
  112  00003118  20256420	
  112  0000311c  66696c65	
  112  00003120  20737973	
  112  00003124  74656d20	
  112  00003128  626c6f63	
  112  0000312c  6b732075	
  112  00003130  73656420	
  112  00003134  666f7220	
  112  00003138  66726565	
  112  0000313c  20626c6f	
  112  00003140  636b2076	
  112  00003144  6563746f	
  112  00003148  720a00  	
  113  0000314b          	.align 2
  114  0000314c          	LC7_LF0:
  115  0000314c  66646973	.ascii "fdisk -- fdisk (%d): Formatted DFS disk for %d bytes.\n\000"
  115  00003150  6b202d2d	
  115  00003154  20666469	
  115  00003158  736b2028	
  115  0000315c  2564293a	
  115  00003160  20466f72	
  115  00003164  6d617474	
  115  00003168  65642044	
  115  0000316c  46532064	
  115  00003170  69736b20	
  115  00003174  666f7220	
  115  00003178  25642062	
  115  0000317c  79746573	
  115  00003180  2e0a00  	
  116  00003183          	.text
  117  000010d4          	.align 2
  118  000010d4          	.proc _main
  119  000010d4          	.global _main
  120  000010d4          	_main:
  121                      ;  Function 'main'; 2048 bytes of locals, 0 regs to save.
  122  000010d4  afbefffc	sw	-4(r29),r30; push fp
  123  000010d8  001df020	add	r30,r0,r29; fp = sp
  124  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  125  000010e0  2fbd0808	subui	r29,r29,#2056; alloc local storage
  126  000010e4  0c0014dc	jal	___main
  127  000010e8  54000000	nop; not filled.
  128  000010ec  0c000698	jal	_dfs_invalidate
  129  000010f0  54000000	nop; not filled.
  130  000010f4  0c00066c	jal	_disk_size
  131  000010f8  54000000	nop; not filled.
  132  000010fc  3c030000	lhi	r3,((_disksize)>>16)&0xffff
  133  00001100  24633004	addui	r3,r3,(_disksize)&0xffff
  134  00001104  ac610000	sw	(r3),r1
  135  00001108  23bdfff8	addi	r29,r29,#-8
  136  0000110c  3c080000	lhi	r8,((LC0_LF0)>>16)&0xffff
  137  00001110  2508300c	addui	r8,r8,(LC0_LF0)&0xffff
  138  00001114  afa80000	sw	(r29),r8
  139  00001118  8c610000	lw	r1,(r3)
  140  0000111c  afa10004	sw	4(r29),r1
  141  00001120  0c00052c	jal	_Printf
  142  00001124  54000000	nop; not filled.
  143  00001128  0c000644	jal	_disk_blocksize
  144  0000112c  54000000	nop; not filled.
  145  00001130  3c020000	lhi	r2,((_diskblocksize)>>16)&0xffff
  146  00001134  24423000	addui	r2,r2,(_diskblocksize)&0xffff
  147  00001138  ac410000	sw	(r2),r1
  148  0000113c  3c080000	lhi	r8,((LC1_LF0)>>16)&0xffff
  149  00001140  25083030	addui	r8,r8,(LC1_LF0)&0xffff
  150  00001144  afa80000	sw	(r29),r8
  151  00001148  8c410000	lw	r1,(r2)
  152  0000114c  afa10004	sw	4(r29),r1
  153  00001150  0c0004fc	jal	_Printf
  154  00001154  54000000	nop; not filled.
  155  00001158  3c020000	lhi	r2,((_num_filesystem_blocks)>>16)&0xffff
  156  0000115c  24423008	addui	r2,r2,(_num_filesystem_blocks)&0xffff
  157  00001160  8c630000	lw	r3,(r3)
  158  00001164  74610000	sgei	r1,r3,#0
  159  00001168  14200008	bnez	r1,L14_LF0
  160  0000116c  54000000	nop; not filled.
  161  00001170  206303ff	addi	r3,r3,#1023
  162  00001174          	L14_LF0:
  163  00001174  5c61000a	srai	r1,r3,#0xa
  164  00001178  ac410000	sw	(r2),r1
  165  0000117c  3c080000	lhi	r8,((LC2_LF0)>>16)&0xffff
  166  00001180  25083060	addui	r8,r8,(LC2_LF0)&0xffff
  167  00001184  afa80000	sw	(r29),r8
  168  00001188  8c410000	lw	r1,(r2)
  169  0000118c  afa10004	sw	4(r29),r1
  170  00001190  0c0004bc	jal	_Printf
  171  00001194  54000000	nop; not filled.
  172  00001198  3c080000	lhi	r8,((LC3_LF0)>>16)&0xffff
  173  0000119c  2508308c	addui	r8,r8,(LC3_LF0)&0xffff
  174  000011a0  afa80000	sw	(r29),r8
  175  000011a4  20080040	addi	r8,r0,#64
  176  000011a8  afa80004	sw	4(r29),r8
  177  000011ac  0c0004a0	jal	_Printf
  178  000011b0  54000000	nop; not filled.
  179  000011b4  0c0005c4	jal	_disk_create
  180  000011b8  54000000	nop; not filled.
  181  000011bc  3c020000	lhi	r2,((_fbv)>>16)&0xffff
  182  000011c0  2442b1ec	addui	r2,r2,(_fbv)&0xffff
  183  000011c4  afa20000	sw	(r29),r2
  184  000011c8  20081000	addi	r8,r0,#4096
  185  000011cc  afa80004	sw	4(r29),r8
  186  000011d0  0c0012d0	jal	_bzero
  187  000011d4  54000000	nop; not filled.
  188  000011d8  8c410000	lw	r1,(r2)
  189  000011dc  34210001	ori	r1,r1,#1
  190  000011e0  ac410000	sw	(r2),r1
  191  000011e4  20040001	addi	r4,r0,#1
  192  000011e8  3c080000	lhi	r8,((LC4_LF0)>>16)&0xffff
  193  000011ec  250830a8	addui	r8,r8,(LC4_LF0)&0xffff
  194  000011f0  afa80000	sw	(r29),r8
  195  000011f4  0c000458	jal	_Printf
  196  000011f8  54000000	nop; not filled.
  197  000011fc  20050000	addi	r5,r0,#0
  198  00001200  23bd0008	addi	r29,r29,#8
  199  00001204  00023820	add	r7,r0,r2
  200  00001208  20060001	addi	r6,r0,#1
  201  0000120c          	L20_LF0:
  202  0000120c  00041020	add	r2,r0,r4
  203  00001210  74810000	sgei	r1,r4,#0
  204  00001214  14200008	bnez	r1,L21_LF0
  205  00001218  54000000	nop; not filled.
  206  0000121c  2082001f	addi	r2,r4,#31
  207  00001220          	L21_LF0:
  208  00001220  5c420005	srai	r2,r2,#0x5
  209  00001224  50410002	slli	r1,r2,#0x2
  210  00001228  00271820	add	r3,r1,r7
  211  0000122c  50410005	slli	r1,r2,#0x5
  212  00001230  00810822	sub	r1,r4,r1
  213  00001234  00c11004	sll	r2,r6,r1
  214  00001238  8c610000	lw	r1,(r3)
  215  0000123c  00220825	or	r1,r1,r2
  216  00001240  ac610000	sw	(r3),r1
  217  00001244  20840001	addi	r4,r4,#1
  218  00001248  20a50001	addi	r5,r5,#1
  219  0000124c  70a1001f	slei	r1,r5,#31
  220  00001250  1420ffb8	bnez	r1,L20_LF0
  221  00001254  54000000	nop; not filled.
  222  00001258  23bdfff8	addi	r29,r29,#-8
  223  0000125c  3c080000	lhi	r8,((LC5_LF0)>>16)&0xffff
  224  00001260  250830e0	addui	r8,r8,(LC5_LF0)&0xffff
  225  00001264  afa80000	sw	(r29),r8
  226  00001268  20080020	addi	r8,r0,#32
  227  0000126c  afa80004	sw	4(r29),r8
  228  00001270  0c0003dc	jal	_Printf
  229  00001274  54000000	nop; not filled.
  230  00001278  20050000	addi	r5,r0,#0
  231  0000127c  23bd0008	addi	r29,r29,#8
  232  00001280  3c1f0000	lhi	r31,((_num_filesystem_blocks)>>16)&0xffff
  233  00001284  27ff3008	addui	r31,r31,(_num_filesystem_blocks)&0xffff
  234  00001288  3c070000	lhi	r7,((_fbv)>>16)&0xffff
  235  0000128c  24e7b1ec	addui	r7,r7,(_fbv)&0xffff
  236  00001290  20060001	addi	r6,r0,#1
  237  00001294          	L24_LF0:
  238  00001294  8fe20000	lw	r2,(r31)
  239  00001298  74410000	sgei	r1,r2,#0
  240  0000129c  14200008	bnez	r1,L28_LF0
  241  000012a0  54000000	nop; not filled.
  242  000012a4  20421fff	addi	r2,r2,#8191
  243  000012a8          	L28_LF0:
  244  000012a8  5c41000d	srai	r1,r2,#0xd
  245  000012ac  00a1082a	slt	r1,r5,r1
  246  000012b0  1020004c	beqz	r1,L25_LF0
  247  000012b4  54000000	nop; not filled.
  248  000012b8  00041020	add	r2,r0,r4
  249  000012bc  74810000	sgei	r1,r4,#0
  250  000012c0  14200008	bnez	r1,L29_LF0
  251  000012c4  54000000	nop; not filled.
  252  000012c8  2082001f	addi	r2,r4,#31
  253  000012cc          	L29_LF0:
  254  000012cc  5c420005	srai	r2,r2,#0x5
  255  000012d0  50410002	slli	r1,r2,#0x2
  256  000012d4  00271820	add	r3,r1,r7
  257  000012d8  50410005	slli	r1,r2,#0x5
  258  000012dc  00810822	sub	r1,r4,r1
  259  000012e0  00c11004	sll	r2,r6,r1
  260  000012e4  8c610000	lw	r1,(r3)
  261  000012e8  00220825	or	r1,r1,r2
  262  000012ec  ac610000	sw	(r3),r1
  263  000012f0  20840001	addi	r4,r4,#1
  264  000012f4  20a50001	addi	r5,r5,#1
  265  000012f8  0bffff98	j	L24_LF0
  266  000012fc  54000000	nop; not filled.
  267  00001300          	L25_LF0:
  268  00001300  23bdfff8	addi	r29,r29,#-8
  269  00001304  3c080000	lhi	r8,((LC6_LF0)>>16)&0xffff
  270  00001308  25083110	addui	r8,r8,(LC6_LF0)&0xffff
  271  0000130c  afa80000	sw	(r29),r8
  272  00001310  3c030000	lhi	r3,((_num_filesystem_blocks)>>16)&0xffff
  273  00001314  24633008	addui	r3,r3,(_num_filesystem_blocks)&0xffff
  274  00001318  8c620000	lw	r2,(r3)
  275  0000131c  74410000	sgei	r1,r2,#0
  276  00001320  14200008	bnez	r1,L31_LF0
  277  00001324  54000000	nop; not filled.
  278  00001328  20421fff	addi	r2,r2,#8191
  279  0000132c          	L31_LF0:
  280  0000132c  5c41000d	srai	r1,r2,#0xd
  281  00001330  afa10004	sw	4(r29),r1
  282  00001334  0c000318	jal	_Printf
  283  00001338  54000000	nop; not filled.
  284  0000133c  20050000	addi	r5,r0,#0
  285  00001340  23bd0008	addi	r29,r29,#8
  286  00001344  00033820	add	r7,r0,r3
  287  00001348  23c4f7f8	addi	r4,r30,#-2056
  288  0000134c  20060021	addi	r6,r0,#33
  289  00001350  3c030000	lhi	r3,((_fbv)>>16)&0xffff
  290  00001354  2463b1ec	addui	r3,r3,(_fbv)&0xffff
  291  00001358          	L32_LF0:
  292  00001358  8ce20000	lw	r2,(r7)
  293  0000135c  74410000	sgei	r1,r2,#0
  294  00001360  14200008	bnez	r1,L36_LF0
  295  00001364  54000000	nop; not filled.
  296  00001368  20421fff	addi	r2,r2,#8191
  297  0000136c          	L36_LF0:
  298  0000136c  5c41000d	srai	r1,r2,#0xd
  299  00001370  00a1082a	slt	r1,r5,r1
  300  00001374  1020005c	beqz	r1,L33_LF0
  301  00001378  54000000	nop; not filled.
  302  0000137c  23bdfff8	addi	r29,r29,#-8
  303  00001380  afa40000	sw	(r29),r4
  304  00001384  20080400	addi	r8,r0,#1024
  305  00001388  afa80004	sw	4(r29),r8
  306  0000138c  0c001114	jal	_bzero
  307  00001390  54000000	nop; not filled.
  308  00001394  23bdfff8	addi	r29,r29,#-8
  309  00001398  afa30000	sw	(r29),r3
  310  0000139c  afa40004	sw	4(r29),r4
  311  000013a0  afa80008	sw	8(r29),r8
  312  000013a4  0c00107c	jal	_bcopy
  313  000013a8  54000000	nop; not filled.
  314  000013ac  afa60000	sw	(r29),r6
  315  000013b0  afa40004	sw	4(r29),r4
  316  000013b4  0c0000ec	jal	_FdiskWriteBlock
  317  000013b8  54000000	nop; not filled.
  318  000013bc  23bd0010	addi	r29,r29,#16
  319  000013c0  20c60001	addi	r6,r6,#1
  320  000013c4  20630400	addi	r3,r3,#1024
  321  000013c8  20a50001	addi	r5,r5,#1
  322  000013cc  0bffff88	j	L32_LF0
  323  000013d0  54000000	nop; not filled.
  324  000013d4          	L33_LF0:
  325  000013d4  23bdfff8	addi	r29,r29,#-8
  326  000013d8  23c2f7f8	addi	r2,r30,#-2056
  327  000013dc  afa20000	sw	(r29),r2
  328  000013e0  20080400	addi	r8,r0,#1024
  329  000013e4  afa80004	sw	4(r29),r8
  330  000013e8  0c0010b8	jal	_bzero
  331  000013ec  54000000	nop; not filled.
  332  000013f0  3c010000	lhi	r1,((_sb)>>16)&0xffff
  333  000013f4  242131d4	addui	r1,r1,(_sb)&0xffff
  334  000013f8  20080001	addi	r8,r0,#1
  335  000013fc  ac280000	sw	(r1),r8
  336  00001400  20080400	addi	r8,r0,#1024
  337  00001404  ac280004	sw	4(r1),r8
  338  00001408  8ce70000	lw	r7,(r7)
  339  0000140c  ac270008	sw	8(r1),r7
  340  00001410  20080001	addi	r8,r0,#1
  341  00001414  ac28000c	sw	12(r1),r8
  342  00001418  20080200	addi	r8,r0,#512
  343  0000141c  ac280010	sw	16(r1),r8
  344  00001420  20080021	addi	r8,r0,#33
  345  00001424  ac280014	sw	20(r1),r8
  346  00001428  23bdfff8	addi	r29,r29,#-8
  347  0000142c  afa10000	sw	(r29),r1
  348  00001430  3c010000	lhi	r1,((_diskblocksize)>>16)&0xffff
  349  00001434  24213000	addui	r1,r1,(_diskblocksize)&0xffff
  350  00001438  8c210000	lw	r1,(r1)
  351  0000143c  00410820	add	r1,r2,r1
  352  00001440  afa10004	sw	4(r29),r1
  353  00001444  20080018	addi	r8,r0,#24
  354  00001448  afa80008	sw	8(r29),r8
  355  0000144c  0c000fd4	jal	_bcopy
  356  00001450  54000000	nop; not filled.
  357  00001454  20080000	addi	r8,r0,#0
  358  00001458  afa80000	sw	(r29),r8
  359  0000145c  afa20004	sw	4(r29),r2
  360  00001460  0c000040	jal	_FdiskWriteBlock
  361  00001464  54000000	nop; not filled.
  362  00001468  0c0001f0	jal	_getpid
  363  0000146c  54000000	nop; not filled.
  364  00001470  3c080000	lhi	r8,((LC7_LF0)>>16)&0xffff
  365  00001474  2508314c	addui	r8,r8,(LC7_LF0)&0xffff
  366  00001478  afa80000	sw	(r29),r8
  367  0000147c  afa10004	sw	4(r29),r1
  368  00001480  3c010000	lhi	r1,((_disksize)>>16)&0xffff
  369  00001484  24213004	addui	r1,r1,(_disksize)&0xffff
  370  00001488  8c210000	lw	r1,(r1)
  371  0000148c  afa10008	sw	8(r29),r1
  372  00001490  0c0001bc	jal	_Printf
  373  00001494  54000000	nop; not filled.
  374  00001498  23bd0010	addi	r29,r29,#16
  375  0000149c  0c001118	jal	_exit
  376  000014a0  54000000	nop
  377  000014a4          	.endproc _main
  378  000014a4          	.data
  379  00003183          	.align 2
  380  00003184          	LC8_LF0:
  381  00003184  66646973	.ascii "fdiskwriteblock (%d): writing to file system block #%d -- physical blo"
  381  00003188  6b777269	
  381  0000318c  7465626c	
  381  00003190  6f636b20	
  381  00003194  28256429	
  381  00003198  3a207772	
  381  0000319c  6974696e	
  381  000031a0  6720746f	
  381  000031a4  2066696c	
  381  000031a8  65207379	
  381  000031ac  7374656d	
  381  000031b0  20626c6f	
  381  000031b4  636b2023	
  381  000031b8  2564202d	
  381  000031bc  2d207068	
  381  000031c0  79736963	
  381  000031c4  616c2062	
  381  000031c8  6c6f    	
  382  000031ca  636b2023	.ascii "ck #%d\n\000"
  382  000031ce  25640a00	
  383  000031d2          	.text
  384  000014a4          	.align 2
  385  000014a4          	.proc _FdiskWriteBlock
  386  000014a4          	.global _FdiskWriteBlock
  387  000014a4          	_FdiskWriteBlock:
  388                      ;  Function 'FdiskWriteBlock'; 0 bytes of locals, 6 regs to save.
  389  000014a4  afbefffc	sw	-4(r29),r30; push fp
  390  000014a8  001df020	add	r30,r0,r29; fp = sp
  391  000014ac  afbffff8	sw	-8(r29),r31; push ret addr
  392  000014b0  2fbd0020	subui	r29,r29,#32; alloc local storage
  393  000014b4  afa20000	sw	0(r29),r2
  394  000014b8  afa30004	sw	4(r29),r3
  395  000014bc  afa40008	sw	8(r29),r4
  396  000014c0  afa5000c	sw	12(r29),r5
  397  000014c4  afa60010	sw	16(r29),r6
  398  000014c8  afa70014	sw	20(r29),r7
  399  000014cc  8fc50000	lw	r5,(r30)
  400  000014d0  8fc60004	lw	r6,4(r30)
  401  000014d4  20030000	addi	r3,r0,#0
  402  000014d8  3c040000	lhi	r4,((_diskblocksize)>>16)&0xffff
  403  000014dc  24843000	addui	r4,r4,(_diskblocksize)&0xffff
  404  000014e0  8c820000	lw	r2,(r4)
  405  000014e4  20010400	addi	r1,r0,#1024
  406  000014e8  00200035	movi2fp	f0,r1
  407  000014ec  00400835	movi2fp	f1,r2
  408  000014f0  0401000f	div	f0,f0,f1
  409  000014f4  00000834	movfp2i	r1,f0
  410  000014f8  0061082a	slt	r1,r3,r1
  411  000014fc  102000d8	beqz	r1,L45_LF0
  412  00001500  54000000	nop; not filled.
  413  00001504  00041020	add	r2,r0,r4
  414  00001508  20040400	addi	r4,r0,#1024
  415  0000150c          	L47_LF0:
  416  0000150c  0c00014c	jal	_getpid
  417  00001510  54000000	nop; not filled.
  418  00001514  23bdfff0	addi	r29,r29,#-16
  419  00001518  3c070000	lhi	r7,((LC8_LF0)>>16)&0xffff
  420  0000151c  24e73184	addui	r7,r7,(LC8_LF0)&0xffff
  421  00001520  afa70000	sw	(r29),r7
  422  00001524  afa10004	sw	4(r29),r1
  423  00001528  afa50008	sw	8(r29),r5
  424  0000152c  8c410000	lw	r1,(r2)
  425  00001530  00800035	movi2fp	f0,r4
  426  00001534  00200835	movi2fp	f1,r1
  427  00001538  0401000f	div	f0,f0,f1
  428  0000153c  00000834	movfp2i	r1,f0
  429  00001540  00a00035	movi2fp	f0,r5
  430  00001544  00200835	movi2fp	f1,r1
  431  00001548  0401000e	mult	f0,f0,f1
  432  0000154c  00000834	movfp2i	r1,f0
  433  00001550  00230820	add	r1,r1,r3
  434  00001554  afa1000c	sw	12(r29),r1
  435  00001558  0c0000f4	jal	_Printf
  436  0000155c  54000000	nop; not filled.
  437  00001560  8c410000	lw	r1,(r2)
  438  00001564  00800035	movi2fp	f0,r4
  439  00001568  00200835	movi2fp	f1,r1
  440  0000156c  0401000f	div	f0,f0,f1
  441  00001570  00000834	movfp2i	r1,f0
  442  00001574  00a00035	movi2fp	f0,r5
  443  00001578  00200835	movi2fp	f1,r1
  444  0000157c  0401000e	mult	f0,f0,f1
  445  00001580  00000834	movfp2i	r1,f0
  446  00001584  00230820	add	r1,r1,r3
  447  00001588  afa10000	sw	(r29),r1
  448  0000158c  8c410000	lw	r1,(r2)
  449  00001590  00600035	movi2fp	f0,r3
  450  00001594  00200835	movi2fp	f1,r1
  451  00001598  0401000e	mult	f0,f0,f1
  452  0000159c  00000834	movfp2i	r1,f0
  453  000015a0  00c10820	add	r1,r6,r1
  454  000015a4  afa10004	sw	4(r29),r1
  455  000015a8  0c0001ac	jal	_disk_write_block
  456  000015ac  54000000	nop; not filled.
  457  000015b0  23bd0010	addi	r29,r29,#16
  458  000015b4  20630001	addi	r3,r3,#1
  459  000015b8  8c410000	lw	r1,(r2)
  460  000015bc  00800035	movi2fp	f0,r4
  461  000015c0  00200835	movi2fp	f1,r1
  462  000015c4  0401000f	div	f0,f0,f1
  463  000015c8  00000834	movfp2i	r1,f0
  464  000015cc  0061082a	slt	r1,r3,r1
  465  000015d0  1420ff38	bnez	r1,L47_LF0
  466  000015d4  54000000	nop; not filled.
  467  000015d8          	L45_LF0:
  468  000015d8  20010001	addi	r1,r0,#1
  469  000015dc  8fa20000	lw	r2,0(r29)
  470  000015e0  8fa30004	lw	r3,4(r29)
  471  000015e4  8fa40008	lw	r4,8(r29)
  472  000015e8  8fa5000c	lw	r5,12(r29)
  473  000015ec  8fa60010	lw	r6,16(r29)
  474  000015f0  8fa70014	lw	r7,20(r29)
  475  000015f4  8fdffff8	lw	r31,-8(r30)
  476  000015f8  001ee820	add	r29,r0,r30
  477  000015fc  8fdefffc	lw	r30,-4(r30)
  478  00001600  4be00000	jr	r31
  479  00001604  54000000	nop
  480  00001608          	.endproc _FdiskWriteBlock
  481  00001608          	.data
  482  000031d2          	.align 2
  483  000031d4          	.global _sb
  484  000031d4          	_sb:
  485  000031d4          	.space 24
  486  000031ec          	.align 2
  487  000031ec          	.global _inodes
  488  000031ec          	_inodes:
  489  000031ec          	.space 32768
  490  0000b1ec          	.align 2
  491  0000b1ec          	.global _fbv
  492  0000b1ec          	_fbv:
  493  0000b1ec          	.space 4096
  494                      ;;;
  495                      ;;; Stub functions for DLX traps.
  496                      ;;;
  497                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  498                      ;;;
  499                      ;;; The traps such as Open and Close
  500                      ;;; (note the capital letters) are for use by user programs.  The traps
  501                      ;;; with names such as open and close (lower case) are for use by the OS.
  502                      ;;;
  504  0000c1ec          	.text
  505  00001608          	.align 2
  507                      ;;; The following are the traps to be used by user-level programs
  508                      ;;;
  510  00001608          	.align 2
  511  00001608          	.proc _Open
  512  00001608          	.global _Open
  513  00001608          	_Open:
  514                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  515                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  516                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  517  00001608  44000213	trap	#0x213
  518  0000160c  4be00000	jr	r31
  519  00001610  54000000	nop
  520  00001614          	.endproc _Open
  522  00001614          	.proc _Close
  523  00001614          	.global _Close
  524  00001614          	_Close:
  525  00001614  44000214	trap	#0x214
  526  00001618  4be00000	jr	r31
  527  0000161c  54000000	nop
  528  00001620          	.endproc _Close
  530  00001620          	.proc _Read
  531  00001620          	.global _Read
  532  00001620          	_Read:
  533  00001620  44000210	trap	#0x210
  534  00001624  4be00000	jr	r31
  535  00001628  54000000	nop
  536  0000162c          	.endproc _Read
  538  0000162c          	.proc _Write
  539  0000162c          	.global _Write
  540  0000162c          	_Write:
  541  0000162c  44000211	trap	#0x211
  542  00001630  4be00000	jr	r31
  543  00001634  54000000	nop
  544  00001638          	.endproc _Write
  546  00001638          	.proc _Lseek
  547  00001638          	.global _Lseek
  548  00001638          	_Lseek:
  549  00001638  44000212	trap	#0x212
  550  0000163c  4be00000	jr	r31
  551  00001640  54000000	nop
  552  00001644          	.endproc _Lseek
  554  00001644          	.proc _Putchar
  555  00001644          	.global _Putchar
  556  00001644          	_Putchar:
  557  00001644  44000280	trap	#0x280
  558  00001648  4be00000	jr	r31
  559  0000164c  54000000	nop
  560  00001650          	.endproc _Putchar
  562  00001650          	.proc _Printf
  563  00001650          	.global _Printf
  564  00001650          	_Printf:
  565  00001650  44000201	trap	#0x201
  566  00001654  4be00000	jr	r31
  567  00001658  54000000	nop
  568  0000165c          	.endproc _Printf
  570  0000165c          	.proc _getpid
  571  0000165c          	.global _getpid
  572  0000165c          	_getpid:
  573  0000165c  44000431	trap	#0x431
  574  00001660  4be00000	jr	r31
  575  00001664  54000000	nop
  576  00001668          	.endproc _getpid
  578  00001668          	.proc _process_create
  579  00001668          	.global _process_create
  580  00001668          	_process_create:
  581  00001668  44000432	trap	#0x432
  582  0000166c  4be00000	jr	r31
  583  00001670  54000000	nop
  584  00001674          	.endproc _process_create
  586  00001674          	.proc _shmget
  587  00001674          	.global _shmget
  588  00001674          	_shmget:
  589  00001674  44000440	trap	#0x440
  590  00001678  4be00000	jr	r31
  591  0000167c  54000000	nop
  592  00001680          	.endproc _shmget
  594  00001680          	.proc _shmat
  595  00001680          	.global _shmat
  596  00001680          	_shmat:
  597  00001680  44000441	trap	#0x441
  598  00001684  4be00000	jr	r31
  599  00001688  54000000	nop
  600  0000168c          	.endproc _shmat
  602  0000168c          	.proc _sem_create
  603  0000168c          	.global _sem_create
  604  0000168c          	_sem_create:
  605  0000168c  44000450	trap	#0x450
  606  00001690  4be00000	jr	r31
  607  00001694  54000000	nop
  608  00001698          	.endproc _sem_create
  610  00001698          	.proc _sem_wait
  611  00001698          	.global _sem_wait
  612  00001698          	_sem_wait:
  613  00001698  44000451	trap	#0x451
  614  0000169c  4be00000	jr	r31
  615  000016a0  54000000	nop
  616  000016a4          	.endproc _sem_wait
  618  000016a4          	.proc _sem_signal
  619  000016a4          	.global _sem_signal
  620  000016a4          	_sem_signal:
  621  000016a4  44000452	trap	#0x452
  622  000016a8  4be00000	jr	r31
  623  000016ac  54000000	nop
  624  000016b0          	.endproc _sem_signal
  626  000016b0          	.proc _lock_create
  627  000016b0          	.global _lock_create
  628  000016b0          	_lock_create:
  629  000016b0  44000453	trap	#0x453
  630  000016b4  4be00000	jr	r31
  631  000016b8  54000000	nop
  632  000016bc          	.endproc _lock_create
  634  000016bc          	.proc _lock_acquire
  635  000016bc          	.global _lock_acquire
  636  000016bc          	_lock_acquire:
  637  000016bc  44000454	trap	#0x454
  638  000016c0  4be00000	jr	r31
  639  000016c4  54000000	nop
  640  000016c8          	.endproc _lock_acquire
  642  000016c8          	.proc _lock_release
  643  000016c8          	.global _lock_release
  644  000016c8          	_lock_release:
  645  000016c8  44000455	trap	#0x455
  646  000016cc  4be00000	jr	r31
  647  000016d0  54000000	nop
  648  000016d4          	.endproc _lock_release
  650  000016d4          	.proc _cond_create
  651  000016d4          	.global _cond_create
  652  000016d4          	_cond_create:
  653  000016d4  44000456	trap	#0x456
  654  000016d8  4be00000	jr	r31
  655  000016dc  54000000	nop
  656  000016e0          	.endproc _cond_create
  658  000016e0          	.proc _cond_wait
  659  000016e0          	.global _cond_wait
  660  000016e0          	_cond_wait:
  661  000016e0  44000457	trap	#0x457
  662  000016e4  4be00000	jr	r31
  663  000016e8  54000000	nop
  664  000016ec          	.endproc _cond_wait
  666  000016ec          	.proc _cond_signal
  667  000016ec          	.global _cond_signal
  668  000016ec          	_cond_signal:
  669  000016ec  44000458	trap	#0x458
  670  000016f0  4be00000	jr	r31
  671  000016f4  54000000	nop
  672  000016f8          	.endproc _cond_signal
  674  000016f8          	.proc _cond_broadcast
  675  000016f8          	.global _cond_broadcast
  676  000016f8          	_cond_broadcast:
  677  000016f8  44000459	trap	#0x459
  678  000016fc  4be00000	jr	r31
  679  00001700  54000000	nop
  680  00001704          	.endproc _cond_broadcast
  682  00001704          	.proc _mbox_create
  683  00001704          	.global _mbox_create
  684  00001704          	_mbox_create:
  685  00001704  44000460	trap	#0x460
  686  00001708  4be00000	jr	r31
  687  0000170c  54000000	nop
  688  00001710          	.endproc _mbox_create
  690  00001710          	.proc _mbox_open
  691  00001710          	.global _mbox_open
  692  00001710          	_mbox_open:
  693  00001710  44000461	trap	#0x461
  694  00001714  4be00000	jr	r31
  695  00001718  54000000	nop
  696  0000171c          	.endproc _mbox_open
  698  0000171c          	.proc _mbox_close
  699  0000171c          	.global _mbox_close
  700  0000171c          	_mbox_close:
  701  0000171c  44000462	trap	#0x462
  702  00001720  4be00000	jr	r31
  703  00001724  54000000	nop
  704  00001728          	.endproc _mbox_close
  706  00001728          	.proc _mbox_send
  707  00001728          	.global _mbox_send
  708  00001728          	_mbox_send:
  709  00001728  44000463	trap	#0x463
  710  0000172c  4be00000	jr	r31
  711  00001730  54000000	nop
  712  00001734          	.endproc _mbox_send
  714  00001734          	.proc _mbox_recv
  715  00001734          	.global _mbox_recv
  716  00001734          	_mbox_recv:
  717  00001734  44000464	trap	#0x464
  718  00001738  4be00000	jr	r31
  719  0000173c  54000000	nop
  720  00001740          	.endproc _mbox_recv
  722  00001740          	.proc _sleep
  723  00001740          	.global _sleep
  724  00001740          	_sleep:
  725  00001740  44000465	trap	#0x465
  726  00001744  4be00000	jr	r31
  727  00001748  54000000	nop
  728  0000174c          	.endproc _sleep
  730  0000174c          	.proc _yield
  731  0000174c          	.global _yield
  732  0000174c          	_yield:
  733  0000174c  44000466	trap	#0x466
  734  00001750  4be00000	jr	r31
  735  00001754  54000000	nop
  736  00001758          	.endproc _yield
  738  00001758          	.proc _disk_write_block
  739  00001758          	.global _disk_write_block
  740  00001758          	_disk_write_block:
  741  00001758  44000467	trap	#0x467
  742  0000175c  4be00000	jr	r31
  743  00001760  54000000	nop
  744  00001764          	.endproc _disk_write_block
  746  00001764          	.proc _disk_size
  747  00001764          	.global _disk_size
  748  00001764          	_disk_size:
  749  00001764  44000468	trap	#0x468
  750  00001768  4be00000	jr	r31
  751  0000176c  54000000	nop
  752  00001770          	.endproc _disk_size
  754  00001770          	.proc _disk_blocksize
  755  00001770          	.global _disk_blocksize
  756  00001770          	_disk_blocksize:
  757  00001770  44000469	trap	#0x469
  758  00001774  4be00000	jr	r31
  759  00001778  54000000	nop
  760  0000177c          	.endproc _disk_blocksize
  762  0000177c          	.proc _disk_create
  763  0000177c          	.global _disk_create
  764  0000177c          	_disk_create:
  765  0000177c  44000470	trap	#0x470
  766  00001780  4be00000	jr	r31
  767  00001784  54000000	nop
  768  00001788          	.endproc _disk_create
  770  00001788          	.proc _dfs_invalidate
  771  00001788          	.global _dfs_invalidate
  772  00001788          	_dfs_invalidate:
  773  00001788  44000471	trap	#0x471
  774  0000178c  4be00000	jr	r31
  775  00001790  54000000	nop
  776  00001794          	.endproc _dfs_invalidate
  778  00001794          	.proc _file_open
  779  00001794          	.global _file_open
  780  00001794          	_file_open:
  781  00001794  44000472	trap	#0x472
  782  00001798  4be00000	jr	r31
  783  0000179c  54000000	nop
  784  000017a0          	.endproc _file_open
  786  000017a0          	.proc _file_close
  787  000017a0          	.global _file_close
  788  000017a0          	_file_close:
  789  000017a0  44000473	trap	#0x473
  790  000017a4  4be00000	jr	r31
  791  000017a8  54000000	nop
  792  000017ac          	.endproc _file_close
  794  000017ac          	.proc _file_delete
  795  000017ac          	.global _file_delete
  796  000017ac          	_file_delete:
  797  000017ac  44000474	trap	#0x474
  798  000017b0  4be00000	jr	r31
  799  000017b4  54000000	nop
  800  000017b8          	.endproc _file_delete
  802  000017b8          	.proc _file_read
  803  000017b8          	.global _file_read
  804  000017b8          	_file_read:
  805  000017b8  44000475	trap	#0x475
  806  000017bc  4be00000	jr	r31
  807  000017c0  54000000	nop
  808  000017c4          	.endproc _file_read
  810  000017c4          	.proc _file_write
  811  000017c4          	.global _file_write
  812  000017c4          	_file_write:
  813  000017c4  44000476	trap	#0x476
  814  000017c8  4be00000	jr	r31
  815  000017cc  54000000	nop
  816  000017d0          	.endproc _file_write
  818  000017d0          	.proc _file_seek
  819  000017d0          	.global _file_seek
  820  000017d0          	_file_seek:
  821  000017d0  44000477	trap	#0x477
  822  000017d4  4be00000	jr	r31
  823  000017d8  54000000	nop
  824  000017dc          	.endproc _file_seek
  826  000017dc          	.proc _buffer_cache_flush
  827  000017dc          	.global _buffer_cache_flush
  828  000017dc          	_buffer_cache_flush:
  829  000017dc  44000478	trap	#0x478
  830  000017e0  4be00000	jr	r31
  831  000017e4  54000000	nop
  832  000017e8          	.endproc _buffer_cache_flush
  835  000017e8          	.proc _run_os_tests
  836  000017e8          	.global _run_os_tests
  837  000017e8          	_run_os_tests:
  838  000017e8  440004ff	trap	#0x4FF
  839  000017ec  4be00000	jr	r31
  840  000017f0  54000000	nop
  841  000017f4          	.endproc _run_os_tests
  844  000017f4          	.proc _Exit
  845  000017f4          	.global _Exit
  846  000017f4          	_Exit:
  847  000017f4  44000500	trap	#0x500
  848  000017f8  4be00000	jr	r31
  849  000017fc  54000000	nop
  850  00001800          	.endproc _Exit
  851                      ; Compiled by GCC
  853  00001800          	.align 2
  854  00001800          	.proc _isspace
  855  00001800          	.global _isspace
  856  00001800          	_isspace:
  857                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  858  00001800  afbefffc	sw	-4(r29),r30; push fp
  859  00001804  001df020	add	r30,r0,r29; fp = sp
  860  00001808  afbffff8	sw	-8(r29),r31; push ret addr
  861  0000180c  2fbd0018	subui	r29,r29,#24; alloc local storage
  862  00001810  afa20000	sw	0(r29),r2
  863  00001814  afa30004	sw	4(r29),r3
  864  00001818  afa40008	sw	8(r29),r4
  865  0000181c  83c20003	lb	r2,3(r30)
  866  00001820  20010000	addi	r1,r0,#0
  867  00001824  304300ff	andi	r3,r2,#0x00ff
  868  00001828  60640020	seqi	r4,r3,#32
  869  0000182c  1480002c	bnez	r4,L3_LF2
  870  00001830  54000000	nop; delay slot nop
  871  00001834  304300ff	andi	r3,r2,#0x00ff
  872  00001838  60640009	seqi	r4,r3,#9
  873  0000183c  1480001c	bnez	r4,L3_LF2
  874  00001840  54000000	nop; delay slot nop
  875  00001844  304300ff	andi	r3,r2,#0x00ff
  876  00001848  6064000a	seqi	r4,r3,#10
  877  0000184c  1480000c	bnez	r4,L3_LF2
  878  00001850  54000000	nop; delay slot nop
  879  00001854  08000008	j	L2_LF2
  880  00001858  54000000	nop; delay slot nop
  881  0000185c          	L3_LF2:
  882  0000185c  20010001	addi	r1,r0,#1
  883  00001860          	L2_LF2:
  884  00001860  08000004	j	L1_LF2
  885  00001864  54000000	nop; delay slot nop
  886  00001868          	L1_LF2:
  887  00001868  8fa20000	lw	r2,0(r29)
  888  0000186c  8fa30004	lw	r3,4(r29)
  889  00001870  8fa40008	lw	r4,8(r29)
  890  00001874  8fdffff8	lw	r31,-8(r30)
  891  00001878  001ee820	add	r29,r0,r30
  892  0000187c  8fdefffc	lw	r30,-4(r30)
  893  00001880  4be00000	jr	r31
  894  00001884  54000000	nop
  895  00001888          	.endproc _isspace
  896  00001888          	.align 2
  897  00001888          	.proc _isxdigit
  898  00001888          	.global _isxdigit
  899  00001888          	_isxdigit:
  900                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  901  00001888  afbefffc	sw	-4(r29),r30; push fp
  902  0000188c  001df020	add	r30,r0,r29; fp = sp
  903  00001890  afbffff8	sw	-8(r29),r31; push ret addr
  904  00001894  2fbd0018	subui	r29,r29,#24; alloc local storage
  905  00001898  afa20000	sw	0(r29),r2
  906  0000189c  afa30004	sw	4(r29),r3
  907  000018a0  afa40008	sw	8(r29),r4
  908  000018a4  83c20003	lb	r2,3(r30)
  909  000018a8  20010000	addi	r1,r0,#0
  910  000018ac  304300ff	andi	r3,r2,#0x00ff
  911  000018b0  6c64002f	sgtui	r4,r3,#47
  912  000018b4  1080001c	beqz	r4,L7_LF2
  913  000018b8  54000000	nop; delay slot nop
  914  000018bc  304300ff	andi	r3,r2,#0x00ff
  915  000018c0  70640039	sleui	r4,r3,#57
  916  000018c4  1480005c	bnez	r4,L6_LF2
  917  000018c8  54000000	nop; delay slot nop
  918  000018cc  08000004	j	L7_LF2
  919  000018d0  54000000	nop; delay slot nop
  920  000018d4          	L7_LF2:
  921  000018d4  304300ff	andi	r3,r2,#0x00ff
  922  000018d8  6c640060	sgtui	r4,r3,#96
  923  000018dc  1080001c	beqz	r4,L8_LF2
  924  000018e0  54000000	nop; delay slot nop
  925  000018e4  304300ff	andi	r3,r2,#0x00ff
  926  000018e8  70640066	sleui	r4,r3,#102
  927  000018ec  14800034	bnez	r4,L6_LF2
  928  000018f0  54000000	nop; delay slot nop
  929  000018f4  08000004	j	L8_LF2
  930  000018f8  54000000	nop; delay slot nop
  931  000018fc          	L8_LF2:
  932  000018fc  304300ff	andi	r3,r2,#0x00ff
  933  00001900  6c640040	sgtui	r4,r3,#64
  934  00001904  10800020	beqz	r4,L5_LF2
  935  00001908  54000000	nop; delay slot nop
  936  0000190c  304300ff	andi	r3,r2,#0x00ff
  937  00001910  70640041	sleui	r4,r3,#65
  938  00001914  1480000c	bnez	r4,L6_LF2
  939  00001918  54000000	nop; delay slot nop
  940  0000191c  08000008	j	L5_LF2
  941  00001920  54000000	nop; delay slot nop
  942  00001924          	L6_LF2:
  943  00001924  20010001	addi	r1,r0,#1
  944  00001928          	L5_LF2:
  945  00001928  08000004	j	L4_LF2
  946  0000192c  54000000	nop; delay slot nop
  947  00001930          	L4_LF2:
  948  00001930  8fa20000	lw	r2,0(r29)
  949  00001934  8fa30004	lw	r3,4(r29)
  950  00001938  8fa40008	lw	r4,8(r29)
  951  0000193c  8fdffff8	lw	r31,-8(r30)
  952  00001940  001ee820	add	r29,r0,r30
  953  00001944  8fdefffc	lw	r30,-4(r30)
  954  00001948  4be00000	jr	r31
  955  0000194c  54000000	nop
  956  00001950          	.endproc _isxdigit
  957  00001950          	.align 2
  958  00001950          	.proc _dstrcpy
  959  00001950          	.global _dstrcpy
  960  00001950          	_dstrcpy:
  961                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  962  00001950  afbefffc	sw	-4(r29),r30; push fp
  963  00001954  001df020	add	r30,r0,r29; fp = sp
  964  00001958  afbffff8	sw	-8(r29),r31; push ret addr
  965  0000195c  2fbd0018	subui	r29,r29,#24; alloc local storage
  966  00001960  afa20000	sw	0(r29),r2
  967  00001964  afa30004	sw	4(r29),r3
  968  00001968  8fc10000	lw	r1,(r30)
  969  0000196c  afc1fff4	sw	-12(r30),r1
  970  00001970          	L10_LF2:
  971  00001970  8fc10000	lw	r1,(r30)
  972  00001974  20220001	addi	r2,r1,#1
  973  00001978  afc20000	sw	(r30),r2
  974  0000197c  8fc20004	lw	r2,4(r30)
  975  00001980  20430001	addi	r3,r2,#1
  976  00001984  afc30004	sw	4(r30),r3
  977  00001988  80420000	lb	r2,(r2)
  978  0000198c  a0220000	sb	(r1),r2
  979  00001990  a3c2fff3	sb	-13(r30),r2
  980  00001994          	L12_LF2:
  981  00001994  93c1fff3	lbu	r1,-13(r30)
  982  00001998  64220000	snei	r2,r1,#0
  983  0000199c  1440000c	bnez	r2,L13_LF2
  984  000019a0  54000000	nop; delay slot nop
  985  000019a4  0800000c	j	L11_LF2
  986  000019a8  54000000	nop; delay slot nop
  987  000019ac          	L13_LF2:
  988  000019ac  0bffffc0	j	L10_LF2
  989  000019b0  54000000	nop; delay slot nop
  990  000019b4          	L11_LF2:
  991  000019b4  8fc1fff4	lw	r1,-12(r30)
  992  000019b8  08000004	j	L9_LF2
  993  000019bc  54000000	nop; delay slot nop
  994  000019c0          	L9_LF2:
  995  000019c0  8fa20000	lw	r2,0(r29)
  996  000019c4  8fa30004	lw	r3,4(r29)
  997  000019c8  8fdffff8	lw	r31,-8(r30)
  998  000019cc  001ee820	add	r29,r0,r30
  999  000019d0  8fdefffc	lw	r30,-4(r30)
 1000  000019d4  4be00000	jr	r31
 1001  000019d8  54000000	nop
 1002  000019dc          	.endproc _dstrcpy
 1003  000019dc          	.align 2
 1004  000019dc          	.proc _dstrncpy
 1005  000019dc          	.global _dstrncpy
 1006  000019dc          	_dstrncpy:
 1007                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
 1008  000019dc  afbefffc	sw	-4(r29),r30; push fp
 1009  000019e0  001df020	add	r30,r0,r29; fp = sp
 1010  000019e4  afbffff8	sw	-8(r29),r31; push ret addr
 1011  000019e8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1012  000019ec  afa20000	sw	0(r29),r2
 1013  000019f0  afa30004	sw	4(r29),r3
 1014  000019f4  8fc10000	lw	r1,(r30)
 1015  000019f8  afc1fff4	sw	-12(r30),r1
 1016  000019fc          	L15_LF2:
 1017  000019fc  8fc10008	lw	r1,8(r30)
 1018  00001a00  2022ffff	addi	r2,r1,#-1
 1019  00001a04  afc20008	sw	8(r30),r2
 1020  00001a08  70210000	slei	r1,r1,#0
 1021  00001a0c  1020000c	beqz	r1,L18_LF2
 1022  00001a10  54000000	nop; delay slot nop
 1023  00001a14  08000048	j	L16_LF2
 1024  00001a18  54000000	nop; delay slot nop
 1025  00001a1c          	L18_LF2:
 1026  00001a1c  8fc10000	lw	r1,(r30)
 1027  00001a20  20220001	addi	r2,r1,#1
 1028  00001a24  afc20000	sw	(r30),r2
 1029  00001a28  8fc20004	lw	r2,4(r30)
 1030  00001a2c  20430001	addi	r3,r2,#1
 1031  00001a30  afc30004	sw	4(r30),r3
 1032  00001a34  80420000	lb	r2,(r2)
 1033  00001a38  a0220000	sb	(r1),r2
 1034  00001a3c  a3c2fff3	sb	-13(r30),r2
 1035  00001a40          	L17_LF2:
 1036  00001a40  93c1fff3	lbu	r1,-13(r30)
 1037  00001a44  64220000	snei	r2,r1,#0
 1038  00001a48  1440000c	bnez	r2,L19_LF2
 1039  00001a4c  54000000	nop; delay slot nop
 1040  00001a50  0800000c	j	L16_LF2
 1041  00001a54  54000000	nop; delay slot nop
 1042  00001a58          	L19_LF2:
 1043  00001a58  0bffffa0	j	L15_LF2
 1044  00001a5c  54000000	nop; delay slot nop
 1045  00001a60          	L16_LF2:
 1046  00001a60  8fc1fff4	lw	r1,-12(r30)
 1047  00001a64  08000004	j	L14_LF2
 1048  00001a68  54000000	nop; delay slot nop
 1049  00001a6c          	L14_LF2:
 1050  00001a6c  8fa20000	lw	r2,0(r29)
 1051  00001a70  8fa30004	lw	r3,4(r29)
 1052  00001a74  8fdffff8	lw	r31,-8(r30)
 1053  00001a78  001ee820	add	r29,r0,r30
 1054  00001a7c  8fdefffc	lw	r30,-4(r30)
 1055  00001a80  4be00000	jr	r31
 1056  00001a84  54000000	nop
 1057  00001a88          	.endproc _dstrncpy
 1058  00001a88          	.align 2
 1059  00001a88          	.proc _dstrcat
 1060  00001a88          	.global _dstrcat
 1061  00001a88          	_dstrcat:
 1062                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
 1063  00001a88  afbefffc	sw	-4(r29),r30; push fp
 1064  00001a8c  001df020	add	r30,r0,r29; fp = sp
 1065  00001a90  afbffff8	sw	-8(r29),r31; push ret addr
 1066  00001a94  2fbd0018	subui	r29,r29,#24; alloc local storage
 1067  00001a98  afa20000	sw	0(r29),r2
 1068  00001a9c  8fc10000	lw	r1,(r30)
 1069  00001aa0  afc1fff4	sw	-12(r30),r1
 1070  00001aa4          	L21_LF2:
 1071  00001aa4  8fc10000	lw	r1,(r30)
 1072  00001aa8  90220000	lbu	r2,(r1)
 1073  00001aac  64410000	snei	r1,r2,#0
 1074  00001ab0  1420000c	bnez	r1,L23_LF2
 1075  00001ab4  54000000	nop; delay slot nop
 1076  00001ab8  0800001c	j	L22_LF2
 1077  00001abc  54000000	nop; delay slot nop
 1078  00001ac0          	L23_LF2:
 1079  00001ac0  8fc20000	lw	r2,(r30)
 1080  00001ac4  20410001	addi	r1,r2,#1
 1081  00001ac8  00011020	add	r2,r0,r1
 1082  00001acc  afc20000	sw	(r30),r2
 1083  00001ad0  0bffffd0	j	L21_LF2
 1084  00001ad4  54000000	nop; delay slot nop
 1085  00001ad8          	L22_LF2:
 1086  00001ad8  23bdfff8	addi	r29,r29,#-8
 1087  00001adc  001d0820	add	r1,r0,r29
 1088  00001ae0  8fc20000	lw	r2,(r30)
 1089  00001ae4  ac220000	sw	(r1),r2
 1090  00001ae8  8fc20004	lw	r2,4(r30)
 1091  00001aec  ac220004	sw	4(r1),r2
 1092  00001af0  0ffffe5c	jal	_dstrcpy
 1093  00001af4  54000000	nop; delay slot nop
 1094  00001af8  23bd0008	addi	r29,r29,#8
 1095  00001afc  8fc1fff4	lw	r1,-12(r30)
 1096  00001b00  08000004	j	L20_LF2
 1097  00001b04  54000000	nop; delay slot nop
 1098  00001b08          	L20_LF2:
 1099  00001b08  8fa20000	lw	r2,0(r29)
 1100  00001b0c  8fdffff8	lw	r31,-8(r30)
 1101  00001b10  001ee820	add	r29,r0,r30
 1102  00001b14  8fdefffc	lw	r30,-4(r30)
 1103  00001b18  4be00000	jr	r31
 1104  00001b1c  54000000	nop
 1105  00001b20          	.endproc _dstrcat
 1106  00001b20          	.align 2
 1107  00001b20          	.proc _dstrncmp
 1108  00001b20          	.global _dstrncmp
 1109  00001b20          	_dstrncmp:
 1110                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
 1111  00001b20  afbefffc	sw	-4(r29),r30; push fp
 1112  00001b24  001df020	add	r30,r0,r29; fp = sp
 1113  00001b28  afbffff8	sw	-8(r29),r31; push ret addr
 1114  00001b2c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1115  00001b30  afa20000	sw	0(r29),r2
 1116  00001b34  afa30004	sw	4(r29),r3
 1117  00001b38  54000000	nop
 1118  00001b3c  20010000	addi	r1,r0,#0
 1119  00001b40  afc1fff4	sw	-12(r30),r1
 1120  00001b44          	L25_LF2:
 1121  00001b44  8fc1fff4	lw	r1,-12(r30)
 1122  00001b48  8fc20008	lw	r2,8(r30)
 1123  00001b4c  0022082a	slt	r1,r1,r2
 1124  00001b50  1420000c	bnez	r1,L28_LF2
 1125  00001b54  54000000	nop; delay slot nop
 1126  00001b58  080000b0	j	L26_LF2
 1127  00001b5c  54000000	nop; delay slot nop
 1128  00001b60          	L28_LF2:
 1129  00001b60  8fc10004	lw	r1,4(r30)
 1130  00001b64  90220000	lbu	r2,(r1)
 1131  00001b68  64410000	snei	r1,r2,#0
 1132  00001b6c  14200040	bnez	r1,L29_LF2
 1133  00001b70  54000000	nop; delay slot nop
 1134  00001b74  8fc10000	lw	r1,(r30)
 1135  00001b78  90220000	lbu	r2,(r1)
 1136  00001b7c  64410000	snei	r1,r2,#0
 1137  00001b80  14200018	bnez	r1,L30_LF2
 1138  00001b84  54000000	nop; delay slot nop
 1139  00001b88  20010000	addi	r1,r0,#0
 1140  00001b8c  080000ec	j	L24_LF2
 1141  00001b90  54000000	nop; delay slot nop
 1142  00001b94  08000010	j	L31_LF2
 1143  00001b98  54000000	nop; delay slot nop
 1144  00001b9c          	L30_LF2:
 1145  00001b9c  20010001	addi	r1,r0,#1
 1146  00001ba0  080000d8	j	L24_LF2
 1147  00001ba4  54000000	nop; delay slot nop
 1148  00001ba8          	L31_LF2:
 1149  00001ba8  08000028	j	L32_LF2
 1150  00001bac  54000000	nop; delay slot nop
 1151  00001bb0          	L29_LF2:
 1152  00001bb0  8fc10000	lw	r1,(r30)
 1153  00001bb4  8fc20004	lw	r2,4(r30)
 1154  00001bb8  90210000	lbu	r1,(r1)
 1155  00001bbc  90420000	lbu	r2,(r2)
 1156  00001bc0  00220829	sne	r1,r1,r2
 1157  00001bc4  1020000c	beqz	r1,L32_LF2
 1158  00001bc8  54000000	nop; delay slot nop
 1159  00001bcc  0800003c	j	L26_LF2
 1160  00001bd0  54000000	nop; delay slot nop
 1161  00001bd4          	L33_LF2:
 1162  00001bd4          	L32_LF2:
 1163  00001bd4  8fc20000	lw	r2,(r30)
 1164  00001bd8  20410001	addi	r1,r2,#1
 1165  00001bdc  00011020	add	r2,r0,r1
 1166  00001be0  afc20000	sw	(r30),r2
 1167  00001be4  8fc20004	lw	r2,4(r30)
 1168  00001be8  20410001	addi	r1,r2,#1
 1169  00001bec  00011020	add	r2,r0,r1
 1170  00001bf0  afc20004	sw	4(r30),r2
 1171  00001bf4          	L27_LF2:
 1172  00001bf4  8fc2fff4	lw	r2,-12(r30)
 1173  00001bf8  20410001	addi	r1,r2,#1
 1174  00001bfc  00011020	add	r2,r0,r1
 1175  00001c00  afc2fff4	sw	-12(r30),r2
 1176  00001c04  0bffff3c	j	L25_LF2
 1177  00001c08  54000000	nop; delay slot nop
 1178  00001c0c          	L26_LF2:
 1179  00001c0c  8fc1fff4	lw	r1,-12(r30)
 1180  00001c10  8fc20008	lw	r2,8(r30)
 1181  00001c14  00220828	seq	r1,r1,r2
 1182  00001c18  10200018	beqz	r1,L34_LF2
 1183  00001c1c  54000000	nop; delay slot nop
 1184  00001c20  20010000	addi	r1,r0,#0
 1185  00001c24  08000054	j	L24_LF2
 1186  00001c28  54000000	nop; delay slot nop
 1187  00001c2c  0800004c	j	L35_LF2
 1188  00001c30  54000000	nop; delay slot nop
 1189  00001c34          	L34_LF2:
 1190  00001c34  8fc20000	lw	r2,(r30)
 1191  00001c38  90410000	lbu	r1,(r2)
 1192  00001c3c  8fc20004	lw	r2,4(r30)
 1193  00001c40  90430000	lbu	r3,(r2)
 1194  00001c44  00230822	sub	r1,r1,r3
 1195  00001c48  74220000	sgei	r2,r1,#0
 1196  00001c4c  10400020	beqz	r2,L36_LF2
 1197  00001c50  54000000	nop; delay slot nop
 1198  00001c54  8fc10000	lw	r1,(r30)
 1199  00001c58  8fc20004	lw	r2,4(r30)
 1200  00001c5c  90210000	lbu	r1,(r1)
 1201  00001c60  90420000	lbu	r2,(r2)
 1202  00001c64  00220829	sne	r1,r1,r2
 1203  00001c68  08000008	j	L37_LF2
 1204  00001c6c  54000000	nop; delay slot nop
 1205  00001c70          	L36_LF2:
 1206  00001c70  2001ffff	addi	r1,r0,#-1
 1207  00001c74          	L37_LF2:
 1208  00001c74  08000004	j	L24_LF2
 1209  00001c78  54000000	nop; delay slot nop
 1210  00001c7c          	L35_LF2:
 1211  00001c7c          	L24_LF2:
 1212  00001c7c  8fa20000	lw	r2,0(r29)
 1213  00001c80  8fa30004	lw	r3,4(r29)
 1214  00001c84  8fdffff8	lw	r31,-8(r30)
 1215  00001c88  001ee820	add	r29,r0,r30
 1216  00001c8c  8fdefffc	lw	r30,-4(r30)
 1217  00001c90  4be00000	jr	r31
 1218  00001c94  54000000	nop
 1219  00001c98          	.endproc _dstrncmp
 1220  00001c98          	.align 2
 1221  00001c98          	.proc _dstrlen
 1222  00001c98          	.global _dstrlen
 1223  00001c98          	_dstrlen:
 1224                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
 1225  00001c98  afbefffc	sw	-4(r29),r30; push fp
 1226  00001c9c  001df020	add	r30,r0,r29; fp = sp
 1227  00001ca0  afbffff8	sw	-8(r29),r31; push ret addr
 1228  00001ca4  2fbd0018	subui	r29,r29,#24; alloc local storage
 1229  00001ca8  afa20000	sw	0(r29),r2
 1230  00001cac  20010000	addi	r1,r0,#0
 1231  00001cb0  afc1fff4	sw	-12(r30),r1
 1232  00001cb4          	L39_LF2:
 1233  00001cb4  8fc10000	lw	r1,(r30)
 1234  00001cb8  20220001	addi	r2,r1,#1
 1235  00001cbc  afc20000	sw	(r30),r2
 1236  00001cc0  90210000	lbu	r1,(r1)
 1237  00001cc4  64220000	snei	r2,r1,#0
 1238  00001cc8  1440000c	bnez	r2,L41_LF2
 1239  00001ccc  54000000	nop; delay slot nop
 1240  00001cd0  0800001c	j	L40_LF2
 1241  00001cd4  54000000	nop; delay slot nop
 1242  00001cd8          	L41_LF2:
 1243  00001cd8  8fc2fff4	lw	r2,-12(r30)
 1244  00001cdc  20410001	addi	r1,r2,#1
 1245  00001ce0  00011020	add	r2,r0,r1
 1246  00001ce4  afc2fff4	sw	-12(r30),r2
 1247  00001ce8  0bffffc8	j	L39_LF2
 1248  00001cec  54000000	nop; delay slot nop
 1249  00001cf0          	L40_LF2:
 1250  00001cf0  8fc1fff4	lw	r1,-12(r30)
 1251  00001cf4  08000004	j	L38_LF2
 1252  00001cf8  54000000	nop; delay slot nop
 1253  00001cfc          	L38_LF2:
 1254  00001cfc  8fa20000	lw	r2,0(r29)
 1255  00001d00  8fdffff8	lw	r31,-8(r30)
 1256  00001d04  001ee820	add	r29,r0,r30
 1257  00001d08  8fdefffc	lw	r30,-4(r30)
 1258  00001d0c  4be00000	jr	r31
 1259  00001d10  54000000	nop
 1260  00001d14          	.endproc _dstrlen
 1261  00001d14          	.align 2
 1262  00001d14          	.proc _dstrstr
 1263  00001d14          	.global _dstrstr
 1264  00001d14          	_dstrstr:
 1265                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
 1266  00001d14  afbefffc	sw	-4(r29),r30; push fp
 1267  00001d18  001df020	add	r30,r0,r29; fp = sp
 1268  00001d1c  afbffff8	sw	-8(r29),r31; push ret addr
 1269  00001d20  2fbd0018	subui	r29,r29,#24; alloc local storage
 1270  00001d24  afa20000	sw	0(r29),r2
 1271  00001d28  23bdfff8	addi	r29,r29,#-8
 1272  00001d2c  001d0820	add	r1,r0,r29
 1273  00001d30  8fc20004	lw	r2,4(r30)
 1274  00001d34  ac220000	sw	(r1),r2
 1275  00001d38  0fffff5c	jal	_dstrlen
 1276  00001d3c  54000000	nop; delay slot nop
 1277  00001d40  23bd0008	addi	r29,r29,#8
 1278  00001d44  afc1fff4	sw	-12(r30),r1
 1279  00001d48          	L43_LF2:
 1280  00001d48  8fc10000	lw	r1,(r30)
 1281  00001d4c  90220000	lbu	r2,(r1)
 1282  00001d50  64410000	snei	r1,r2,#0
 1283  00001d54  1420000c	bnez	r1,L45_LF2
 1284  00001d58  54000000	nop; delay slot nop
 1285  00001d5c  08000060	j	L44_LF2
 1286  00001d60  54000000	nop; delay slot nop
 1287  00001d64          	L45_LF2:
 1288  00001d64  23bdfff0	addi	r29,r29,#-16
 1289  00001d68  001d0820	add	r1,r0,r29
 1290  00001d6c  8fc20000	lw	r2,(r30)
 1291  00001d70  ac220000	sw	(r1),r2
 1292  00001d74  8fc20004	lw	r2,4(r30)
 1293  00001d78  ac220004	sw	4(r1),r2
 1294  00001d7c  8fc2fff4	lw	r2,-12(r30)
 1295  00001d80  ac220008	sw	8(r1),r2
 1296  00001d84  0ffffd98	jal	_dstrncmp
 1297  00001d88  54000000	nop; delay slot nop
 1298  00001d8c  23bd0010	addi	r29,r29,#16
 1299  00001d90  64220000	snei	r2,r1,#0
 1300  00001d94  14400010	bnez	r2,L46_LF2
 1301  00001d98  54000000	nop; delay slot nop
 1302  00001d9c  8fc10000	lw	r1,(r30)
 1303  00001da0  08000028	j	L42_LF2
 1304  00001da4  54000000	nop; delay slot nop
 1305  00001da8          	L46_LF2:
 1306  00001da8  8fc20000	lw	r2,(r30)
 1307  00001dac  20410001	addi	r1,r2,#1
 1308  00001db0  00011020	add	r2,r0,r1
 1309  00001db4  afc20000	sw	(r30),r2
 1310  00001db8  0bffff8c	j	L43_LF2
 1311  00001dbc  54000000	nop; delay slot nop
 1312  00001dc0          	L44_LF2:
 1313  00001dc0  20010000	addi	r1,r0,#0
 1314  00001dc4  08000004	j	L42_LF2
 1315  00001dc8  54000000	nop; delay slot nop
 1316  00001dcc          	L42_LF2:
 1317  00001dcc  8fa20000	lw	r2,0(r29)
 1318  00001dd0  8fdffff8	lw	r31,-8(r30)
 1319  00001dd4  001ee820	add	r29,r0,r30
 1320  00001dd8  8fdefffc	lw	r30,-4(r30)
 1321  00001ddc  4be00000	jr	r31
 1322  00001de0  54000000	nop
 1323  00001de4          	.endproc _dstrstr
 1324  00001de4          	.align 2
 1325  00001de4          	.proc _dmindex
 1326  00001de4          	.global _dmindex
 1327  00001de4          	_dmindex:
 1328                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1329  00001de4  afbefffc	sw	-4(r29),r30; push fp
 1330  00001de8  001df020	add	r30,r0,r29; fp = sp
 1331  00001dec  afbffff8	sw	-8(r29),r31; push ret addr
 1332  00001df0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1333  00001df4  afa20000	sw	0(r29),r2
 1334  00001df8  54000000	nop
 1335  00001dfc          	L48_LF2:
 1336  00001dfc  8fc10000	lw	r1,(r30)
 1337  00001e00  90220000	lbu	r2,(r1)
 1338  00001e04  64410000	snei	r1,r2,#0
 1339  00001e08  1420000c	bnez	r1,L50_LF2
 1340  00001e0c  54000000	nop; delay slot nop
 1341  00001e10  08000070	j	L49_LF2
 1342  00001e14  54000000	nop; delay slot nop
 1343  00001e18          	L50_LF2:
 1344  00001e18  8fc10004	lw	r1,4(r30)
 1345  00001e1c  afc1fff4	sw	-12(r30),r1
 1346  00001e20          	L51_LF2:
 1347  00001e20  8fc1fff4	lw	r1,-12(r30)
 1348  00001e24  90220000	lbu	r2,(r1)
 1349  00001e28  64410000	snei	r1,r2,#0
 1350  00001e2c  1420000c	bnez	r1,L54_LF2
 1351  00001e30  54000000	nop; delay slot nop
 1352  00001e34  08000044	j	L52_LF2
 1353  00001e38  54000000	nop; delay slot nop
 1354  00001e3c          	L54_LF2:
 1355  00001e3c  8fc10000	lw	r1,(r30)
 1356  00001e40  8fc2fff4	lw	r2,-12(r30)
 1357  00001e44  90210000	lbu	r1,(r1)
 1358  00001e48  90420000	lbu	r2,(r2)
 1359  00001e4c  00220828	seq	r1,r1,r2
 1360  00001e50  10200010	beqz	r1,L53_LF2
 1361  00001e54  54000000	nop; delay slot nop
 1362  00001e58  8fc10000	lw	r1,(r30)
 1363  00001e5c  08000030	j	L47_LF2
 1364  00001e60  54000000	nop; delay slot nop
 1365  00001e64          	L55_LF2:
 1366  00001e64          	L53_LF2:
 1367  00001e64  8fc2fff4	lw	r2,-12(r30)
 1368  00001e68  20410001	addi	r1,r2,#1
 1369  00001e6c  00011020	add	r2,r0,r1
 1370  00001e70  afc2fff4	sw	-12(r30),r2
 1371  00001e74  0bffffa8	j	L51_LF2
 1372  00001e78  54000000	nop; delay slot nop
 1373  00001e7c          	L52_LF2:
 1374  00001e7c  0bffff7c	j	L48_LF2
 1375  00001e80  54000000	nop; delay slot nop
 1376  00001e84          	L49_LF2:
 1377  00001e84  20010000	addi	r1,r0,#0
 1378  00001e88  08000004	j	L47_LF2
 1379  00001e8c  54000000	nop; delay slot nop
 1380  00001e90          	L47_LF2:
 1381  00001e90  8fa20000	lw	r2,0(r29)
 1382  00001e94  8fdffff8	lw	r31,-8(r30)
 1383  00001e98  001ee820	add	r29,r0,r30
 1384  00001e9c  8fdefffc	lw	r30,-4(r30)
 1385  00001ea0  4be00000	jr	r31
 1386  00001ea4  54000000	nop
 1387  00001ea8          	.endproc _dmindex
 1388  00001ea8          	.align 2
 1389  00001ea8          	.proc _dindex
 1390  00001ea8          	.global _dindex
 1391  00001ea8          	_dindex:
 1392                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1393  00001ea8  afbefffc	sw	-4(r29),r30; push fp
 1394  00001eac  001df020	add	r30,r0,r29; fp = sp
 1395  00001eb0  afbffff8	sw	-8(r29),r31; push ret addr
 1396  00001eb4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1397  00001eb8  afa20000	sw	0(r29),r2
 1398  00001ebc  54000000	nop
 1399  00001ec0          	L57_LF2:
 1400  00001ec0  8fc10000	lw	r1,(r30)
 1401  00001ec4  90220000	lbu	r2,(r1)
 1402  00001ec8  64410000	snei	r1,r2,#0
 1403  00001ecc  1420000c	bnez	r1,L59_LF2
 1404  00001ed0  54000000	nop; delay slot nop
 1405  00001ed4  08000040	j	L58_LF2
 1406  00001ed8  54000000	nop; delay slot nop
 1407  00001edc          	L59_LF2:
 1408  00001edc  8fc10000	lw	r1,(r30)
 1409  00001ee0  90220000	lbu	r2,(r1)
 1410  00001ee4  8fc10004	lw	r1,4(r30)
 1411  00001ee8  00411028	seq	r2,r2,r1
 1412  00001eec  10400010	beqz	r2,L60_LF2
 1413  00001ef0  54000000	nop; delay slot nop
 1414  00001ef4  8fc10000	lw	r1,(r30)
 1415  00001ef8  08000028	j	L56_LF2
 1416  00001efc  54000000	nop; delay slot nop
 1417  00001f00          	L60_LF2:
 1418  00001f00  8fc20000	lw	r2,(r30)
 1419  00001f04  20410001	addi	r1,r2,#1
 1420  00001f08  00011020	add	r2,r0,r1
 1421  00001f0c  afc20000	sw	(r30),r2
 1422  00001f10  0bffffac	j	L57_LF2
 1423  00001f14  54000000	nop; delay slot nop
 1424  00001f18          	L58_LF2:
 1425  00001f18  20010000	addi	r1,r0,#0
 1426  00001f1c  08000004	j	L56_LF2
 1427  00001f20  54000000	nop; delay slot nop
 1428  00001f24          	L56_LF2:
 1429  00001f24  8fa20000	lw	r2,0(r29)
 1430  00001f28  8fdffff8	lw	r31,-8(r30)
 1431  00001f2c  001ee820	add	r29,r0,r30
 1432  00001f30  8fdefffc	lw	r30,-4(r30)
 1433  00001f34  4be00000	jr	r31
 1434  00001f38  54000000	nop
 1435  00001f3c          	.endproc _dindex
 1436  00001f3c          	.align 2
 1437  00001f3c          	.proc _ditoa
 1438  00001f3c          	.global _ditoa
 1439  00001f3c          	_ditoa:
 1440                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1441  00001f3c  afbefffc	sw	-4(r29),r30; push fp
 1442  00001f40  001df020	add	r30,r0,r29; fp = sp
 1443  00001f44  afbffff8	sw	-8(r29),r31; push ret addr
 1444  00001f48  2fbd0018	subui	r29,r29,#24; alloc local storage
 1445  00001f4c  afa20000	sw	0(r29),r2
 1446  00001f50  afa30004	sw	4(r29),r3
 1447  00001f54  8fc10000	lw	r1,(r30)
 1448  00001f58  68220000	slti	r2,r1,#0
 1449  00001f5c  1040002c	beqz	r2,L62_LF2
 1450  00001f60  54000000	nop; delay slot nop
 1451  00001f64  8fc10004	lw	r1,4(r30)
 1452  00001f68  20220001	addi	r2,r1,#1
 1453  00001f6c  afc20004	sw	4(r30),r2
 1454  00001f70  2002002d	addi	r2,r0,(#0x2d)&0xff
 1455  00001f74  a0220000	sb	(r1),r2
 1456  00001f78  8fc10000	lw	r1,(r30)
 1457  00001f7c  00011022	sub	r2,r0,r1
 1458  00001f80  afc20000	sw	(r30),r2
 1459  00001f84  08000118	j	L63_LF2
 1460  00001f88  54000000	nop; delay slot nop
 1461  00001f8c          	L62_LF2:
 1462  00001f8c  8fc10000	lw	r1,(r30)
 1463  00001f90  64220000	snei	r2,r1,#0
 1464  00001f94  14400020	bnez	r2,L64_LF2
 1465  00001f98  54000000	nop; delay slot nop
 1466  00001f9c  8fc10004	lw	r1,4(r30)
 1467  00001fa0  20220001	addi	r2,r1,#1
 1468  00001fa4  afc20004	sw	4(r30),r2
 1469  00001fa8  20020030	addi	r2,r0,(#0x30)&0xff
 1470  00001fac  a0220000	sb	(r1),r2
 1471  00001fb0  080000ec	j	L63_LF2
 1472  00001fb4  54000000	nop; delay slot nop
 1473  00001fb8          	L64_LF2:
 1474  00001fb8  20010001	addi	r1,r0,#1
 1475  00001fbc  afc1fff4	sw	-12(r30),r1
 1476  00001fc0          	L66_LF2:
 1477  00001fc0  8fc1fff4	lw	r1,-12(r30)
 1478  00001fc4  8fc20000	lw	r2,(r30)
 1479  00001fc8  0022082c	sle	r1,r1,r2
 1480  00001fcc  1420000c	bnez	r1,L68_LF2
 1481  00001fd0  54000000	nop; delay slot nop
 1482  00001fd4  08000024	j	L67_LF2
 1483  00001fd8  54000000	nop; delay slot nop
 1484  00001fdc          	L69_LF2:
 1485  00001fdc          	L68_LF2:
 1486  00001fdc  8fc1fff4	lw	r1,-12(r30)
 1487  00001fe0  00011820	add	r3,r0,r1
 1488  00001fe4  50620002	slli	r2,r3,#0x2
 1489  00001fe8  00411020	add	r2,r2,r1
 1490  00001fec  50410001	slli	r1,r2,#0x1
 1491  00001ff0  afc1fff4	sw	-12(r30),r1
 1492  00001ff4  0bffffc8	j	L66_LF2
 1493  00001ff8  54000000	nop; delay slot nop
 1494  00001ffc          	L67_LF2:
 1495  00001ffc  54000000	nop
 1496  00002000          	L70_LF2:
 1497  00002000  8fc1fff4	lw	r1,-12(r30)
 1498  00002004  2002000a	addi	r2,r0,#10
 1499  00002008  00200035	movi2fp	f0,r1
 1500  0000200c  00400835	movi2fp	f1,r2
 1501  00002010  0401000f	div	f0,f0,f1
 1502  00002014  00000834	movfp2i	r1,f0
 1503  00002018  afc1fff4	sw	-12(r30),r1
 1504  0000201c  8fc10004	lw	r1,4(r30)
 1505  00002020  20220001	addi	r2,r1,#1
 1506  00002024  afc20004	sw	4(r30),r2
 1507  00002028  8fc20000	lw	r2,(r30)
 1508  0000202c  8fc3fff4	lw	r3,-12(r30)
 1509  00002030  00400035	movi2fp	f0,r2
 1510  00002034  00600835	movi2fp	f1,r3
 1511  00002038  0401000f	div	f0,f0,f1
 1512  0000203c  00001034	movfp2i	r2,f0
 1513  00002040  00021820	add	r3,r0,r2
 1514  00002044  20620030	addi	r2,r3,#48
 1515  00002048  a0220000	sb	(r1),r2
 1516  0000204c  8fc10000	lw	r1,(r30)
 1517  00002050  8fc3fff4	lw	r3,-12(r30)
 1518  00002054  00200035	movi2fp	f0,r1
 1519  00002058  00600835	movi2fp	f1,r3
 1520  0000205c  0401000f	div	f0,f0,f1
 1521  00002060  00001034	movfp2i	r2,f0
 1522  00002064  8fc3fff4	lw	r3,-12(r30)
 1523  00002068  00400035	movi2fp	f0,r2
 1524  0000206c  00600835	movi2fp	f1,r3
 1525  00002070  0401000e	mult	f0,f0,f1
 1526  00002074  00001034	movfp2i	r2,f0
 1527  00002078  00220822	sub	r1,r1,r2
 1528  0000207c  afc10000	sw	(r30),r1
 1529  00002080          	L72_LF2:
 1530  00002080  8fc1fff4	lw	r1,-12(r30)
 1531  00002084  6c220001	sgti	r2,r1,#1
 1532  00002088  1440000c	bnez	r2,L73_LF2
 1533  0000208c  54000000	nop; delay slot nop
 1534  00002090  0800000c	j	L63_LF2
 1535  00002094  54000000	nop; delay slot nop
 1536  00002098          	L73_LF2:
 1537  00002098  0bffff64	j	L70_LF2
 1538  0000209c  54000000	nop; delay slot nop
 1539  000020a0          	L71_LF2:
 1540  000020a0          	L65_LF2:
 1541  000020a0          	L63_LF2:
 1542  000020a0  8fc10004	lw	r1,4(r30)
 1543  000020a4  20020000	addi	r2,r0,(#0x0)&0xff
 1544  000020a8  a0220000	sb	(r1),r2
 1545  000020ac          	L61_LF2:
 1546  000020ac  8fa20000	lw	r2,0(r29)
 1547  000020b0  8fa30004	lw	r3,4(r29)
 1548  000020b4  8fdffff8	lw	r31,-8(r30)
 1549  000020b8  001ee820	add	r29,r0,r30
 1550  000020bc  8fdefffc	lw	r30,-4(r30)
 1551  000020c0  4be00000	jr	r31
 1552  000020c4  54000000	nop
 1553  000020c8          	.endproc _ditoa
 1554  000020c8          	.align 2
 1555  000020c8          	.proc _dstrtol
 1556  000020c8          	.global _dstrtol
 1557  000020c8          	_dstrtol:
 1558                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1559  000020c8  afbefffc	sw	-4(r29),r30; push fp
 1560  000020cc  001df020	add	r30,r0,r29; fp = sp
 1561  000020d0  afbffff8	sw	-8(r29),r31; push ret addr
 1562  000020d4  2fbd0020	subui	r29,r29,#32; alloc local storage
 1563  000020d8  afa20000	sw	0(r29),r2
 1564  000020dc  20010000	addi	r1,r0,#0
 1565  000020e0  afc1fff4	sw	-12(r30),r1
 1566  000020e4          	L75_LF2:
 1567  000020e4  8fc10000	lw	r1,(r30)
 1568  000020e8  90220000	lbu	r2,(r1)
 1569  000020ec  60410020	seqi	r1,r2,#32
 1570  000020f0  14200034	bnez	r1,L77_LF2
 1571  000020f4  54000000	nop; delay slot nop
 1572  000020f8  8fc10000	lw	r1,(r30)
 1573  000020fc  90220000	lbu	r2,(r1)
 1574  00002100  60410009	seqi	r1,r2,#9
 1575  00002104  14200020	bnez	r1,L77_LF2
 1576  00002108  54000000	nop; delay slot nop
 1577  0000210c  8fc10000	lw	r1,(r30)
 1578  00002110  90220000	lbu	r2,(r1)
 1579  00002114  6041000a	seqi	r1,r2,#10
 1580  00002118  1420000c	bnez	r1,L77_LF2
 1581  0000211c  54000000	nop; delay slot nop
 1582  00002120  0800001c	j	L76_LF2
 1583  00002124  54000000	nop; delay slot nop
 1584  00002128          	L77_LF2:
 1585  00002128  8fc20000	lw	r2,(r30)
 1586  0000212c  20410001	addi	r1,r2,#1
 1587  00002130  00011020	add	r2,r0,r1
 1588  00002134  afc20000	sw	(r30),r2
 1589  00002138  0bffffa8	j	L75_LF2
 1590  0000213c  54000000	nop; delay slot nop
 1591  00002140          	L76_LF2:
 1592  00002140  8fc10004	lw	r1,4(r30)
 1593  00002144  64220000	snei	r2,r1,#0
 1594  00002148  10400010	beqz	r2,L78_LF2
 1595  0000214c  54000000	nop; delay slot nop
 1596  00002150  8fc10004	lw	r1,4(r30)
 1597  00002154  8fc20000	lw	r2,(r30)
 1598  00002158  ac220000	sw	(r1),r2
 1599  0000215c          	L78_LF2:
 1600  0000215c  8fc10000	lw	r1,(r30)
 1601  00002160  90220000	lbu	r2,(r1)
 1602  00002164  64410000	snei	r1,r2,#0
 1603  00002168  14200010	bnez	r1,L79_LF2
 1604  0000216c  54000000	nop; delay slot nop
 1605  00002170  8fc1fff4	lw	r1,-12(r30)
 1606  00002174  08000294	j	L74_LF2
 1607  00002178  54000000	nop; delay slot nop
 1608  0000217c          	L79_LF2:
 1609  0000217c  8fc10000	lw	r1,(r30)
 1610  00002180  90220000	lbu	r2,(r1)
 1611  00002184  6041002d	seqi	r1,r2,#45
 1612  00002188  10200024	beqz	r1,L80_LF2
 1613  0000218c  54000000	nop; delay slot nop
 1614  00002190  2001ffff	addi	r1,r0,#-1
 1615  00002194  afc1ffec	sw	-20(r30),r1
 1616  00002198  8fc20000	lw	r2,(r30)
 1617  0000219c  20410001	addi	r1,r2,#1
 1618  000021a0  00011020	add	r2,r0,r1
 1619  000021a4  afc20000	sw	(r30),r2
 1620  000021a8  0800000c	j	L81_LF2
 1621  000021ac  54000000	nop; delay slot nop
 1622  000021b0          	L80_LF2:
 1623  000021b0  20010001	addi	r1,r0,#1
 1624  000021b4  afc1ffec	sw	-20(r30),r1
 1625  000021b8          	L81_LF2:
 1626  000021b8  8fc10008	lw	r1,8(r30)
 1627  000021bc  64220000	snei	r2,r1,#0
 1628  000021c0  14400090	bnez	r2,L82_LF2
 1629  000021c4  54000000	nop; delay slot nop
 1630  000021c8  8fc10000	lw	r1,(r30)
 1631  000021cc  90220000	lbu	r2,(r1)
 1632  000021d0  60410030	seqi	r1,r2,#48
 1633  000021d4  10200074	beqz	r1,L83_LF2
 1634  000021d8  54000000	nop; delay slot nop
 1635  000021dc  8fc20000	lw	r2,(r30)
 1636  000021e0  20410001	addi	r1,r2,#1
 1637  000021e4  00011020	add	r2,r0,r1
 1638  000021e8  afc20000	sw	(r30),r2
 1639  000021ec  8fc10000	lw	r1,(r30)
 1640  000021f0  90220000	lbu	r2,(r1)
 1641  000021f4  60410078	seqi	r1,r2,#120
 1642  000021f8  14200020	bnez	r1,L85_LF2
 1643  000021fc  54000000	nop; delay slot nop
 1644  00002200  8fc10000	lw	r1,(r30)
 1645  00002204  90220000	lbu	r2,(r1)
 1646  00002208  60410058	seqi	r1,r2,#88
 1647  0000220c  1420000c	bnez	r1,L85_LF2
 1648  00002210  54000000	nop; delay slot nop
 1649  00002214  08000024	j	L84_LF2
 1650  00002218  54000000	nop; delay slot nop
 1651  0000221c          	L85_LF2:
 1652  0000221c  20010010	addi	r1,r0,#16
 1653  00002220  afc10008	sw	8(r30),r1
 1654  00002224  8fc20000	lw	r2,(r30)
 1655  00002228  20410001	addi	r1,r2,#1
 1656  0000222c  00011020	add	r2,r0,r1
 1657  00002230  afc20000	sw	(r30),r2
 1658  00002234  0800000c	j	L86_LF2
 1659  00002238  54000000	nop; delay slot nop
 1660  0000223c          	L84_LF2:
 1661  0000223c  20010008	addi	r1,r0,#8
 1662  00002240  afc10008	sw	8(r30),r1
 1663  00002244          	L86_LF2:
 1664  00002244  0800000c	j	L82_LF2
 1665  00002248  54000000	nop; delay slot nop
 1666  0000224c          	L83_LF2:
 1667  0000224c  2001000a	addi	r1,r0,#10
 1668  00002250  afc10008	sw	8(r30),r1
 1669  00002254          	L87_LF2:
 1670  00002254          	L82_LF2:
 1671  00002254  8fc10008	lw	r1,8(r30)
 1672  00002258  70220000	slei	r2,r1,#0
 1673  0000225c  1440001c	bnez	r2,L89_LF2
 1674  00002260  54000000	nop; delay slot nop
 1675  00002264  8fc10008	lw	r1,8(r30)
 1676  00002268  6c220010	sgti	r2,r1,#16
 1677  0000226c  1440000c	bnez	r2,L89_LF2
 1678  00002270  54000000	nop; delay slot nop
 1679  00002274  08000010	j	L88_LF2
 1680  00002278  54000000	nop; delay slot nop
 1681  0000227c          	L89_LF2:
 1682  0000227c  8fc1fff4	lw	r1,-12(r30)
 1683  00002280  08000188	j	L74_LF2
 1684  00002284  54000000	nop; delay slot nop
 1685  00002288          	L88_LF2:
 1686  00002288  54000000	nop
 1687  0000228c          	L90_LF2:
 1688  0000228c  8fc10000	lw	r1,(r30)
 1689  00002290  90220000	lbu	r2,(r1)
 1690  00002294  6c41002f	sgtui	r1,r2,#47
 1691  00002298  10200030	beqz	r1,L93_LF2
 1692  0000229c  54000000	nop; delay slot nop
 1693  000022a0  8fc10000	lw	r1,(r30)
 1694  000022a4  90220000	lbu	r2,(r1)
 1695  000022a8  70410039	sleui	r1,r2,#57
 1696  000022ac  1020001c	beqz	r1,L93_LF2
 1697  000022b0  54000000	nop; delay slot nop
 1698  000022b4  8fc10000	lw	r1,(r30)
 1699  000022b8  90220000	lbu	r2,(r1)
 1700  000022bc  2041ffd0	addi	r1,r2,#-48
 1701  000022c0  afc1fff0	sw	-16(r30),r1
 1702  000022c4  0800008c	j	L94_LF2
 1703  000022c8  54000000	nop; delay slot nop
 1704  000022cc          	L93_LF2:
 1705  000022cc  8fc10000	lw	r1,(r30)
 1706  000022d0  90220000	lbu	r2,(r1)
 1707  000022d4  6c410060	sgtui	r1,r2,#96
 1708  000022d8  10200030	beqz	r1,L95_LF2
 1709  000022dc  54000000	nop; delay slot nop
 1710  000022e0  8fc10000	lw	r1,(r30)
 1711  000022e4  90220000	lbu	r2,(r1)
 1712  000022e8  7041007a	sleui	r1,r2,#122
 1713  000022ec  1020001c	beqz	r1,L95_LF2
 1714  000022f0  54000000	nop; delay slot nop
 1715  000022f4  8fc10000	lw	r1,(r30)
 1716  000022f8  90220000	lbu	r2,(r1)
 1717  000022fc  2041ffa9	addi	r1,r2,#-87
 1718  00002300  afc1fff0	sw	-16(r30),r1
 1719  00002304  0800004c	j	L94_LF2
 1720  00002308  54000000	nop; delay slot nop
 1721  0000230c          	L95_LF2:
 1722  0000230c  8fc10000	lw	r1,(r30)
 1723  00002310  90220000	lbu	r2,(r1)
 1724  00002314  6c410040	sgtui	r1,r2,#64
 1725  00002318  10200030	beqz	r1,L97_LF2
 1726  0000231c  54000000	nop; delay slot nop
 1727  00002320  8fc10000	lw	r1,(r30)
 1728  00002324  90220000	lbu	r2,(r1)
 1729  00002328  7041005a	sleui	r1,r2,#90
 1730  0000232c  1020001c	beqz	r1,L97_LF2
 1731  00002330  54000000	nop; delay slot nop
 1732  00002334  8fc10000	lw	r1,(r30)
 1733  00002338  90220000	lbu	r2,(r1)
 1734  0000233c  2041ffc9	addi	r1,r2,#-55
 1735  00002340  afc1fff0	sw	-16(r30),r1
 1736  00002344  0800000c	j	L94_LF2
 1737  00002348  54000000	nop; delay slot nop
 1738  0000234c          	L97_LF2:
 1739  0000234c  200103e8	addi	r1,r0,#1000
 1740  00002350  afc1fff0	sw	-16(r30),r1
 1741  00002354          	L98_LF2:
 1742  00002354          	L96_LF2:
 1743  00002354          	L94_LF2:
 1744  00002354  8fc1fff0	lw	r1,-16(r30)
 1745  00002358  8fc20008	lw	r2,8(r30)
 1746  0000235c  0022082a	slt	r1,r1,r2
 1747  00002360  10200040	beqz	r1,L92_LF2
 1748  00002364  54000000	nop; delay slot nop
 1749  00002368  8fc1fff4	lw	r1,-12(r30)
 1750  0000236c  8fc20008	lw	r2,8(r30)
 1751  00002370  00200035	movi2fp	f0,r1
 1752  00002374  00400835	movi2fp	f1,r2
 1753  00002378  0401000e	mult	f0,f0,f1
 1754  0000237c  00000834	movfp2i	r1,f0
 1755  00002380  afc1fff4	sw	-12(r30),r1
 1756  00002384  8fc1fff4	lw	r1,-12(r30)
 1757  00002388  8fc2fff0	lw	r2,-16(r30)
 1758  0000238c  00220820	add	r1,r1,r2
 1759  00002390  afc1fff4	sw	-12(r30),r1
 1760  00002394  8fc20000	lw	r2,(r30)
 1761  00002398  20410001	addi	r1,r2,#1
 1762  0000239c  00011020	add	r2,r0,r1
 1763  000023a0  afc20000	sw	(r30),r2
 1764  000023a4          	L99_LF2:
 1765  000023a4          	L92_LF2:
 1766  000023a4  8fc1fff0	lw	r1,-16(r30)
 1767  000023a8  8fc20008	lw	r2,8(r30)
 1768  000023ac  0022082a	slt	r1,r1,r2
 1769  000023b0  1420000c	bnez	r1,L100_LF2
 1770  000023b4  54000000	nop; delay slot nop
 1771  000023b8  0800000c	j	L91_LF2
 1772  000023bc  54000000	nop; delay slot nop
 1773  000023c0          	L100_LF2:
 1774  000023c0  0bfffec8	j	L90_LF2
 1775  000023c4  54000000	nop; delay slot nop
 1776  000023c8          	L91_LF2:
 1777  000023c8  8fc10004	lw	r1,4(r30)
 1778  000023cc  64220000	snei	r2,r1,#0
 1779  000023d0  10400010	beqz	r2,L101_LF2
 1780  000023d4  54000000	nop; delay slot nop
 1781  000023d8  8fc10004	lw	r1,4(r30)
 1782  000023dc  8fc20000	lw	r2,(r30)
 1783  000023e0  ac220000	sw	(r1),r2
 1784  000023e4          	L101_LF2:
 1785  000023e4  8fc1fff4	lw	r1,-12(r30)
 1786  000023e8  8fc2ffec	lw	r2,-20(r30)
 1787  000023ec  00200035	movi2fp	f0,r1
 1788  000023f0  00400835	movi2fp	f1,r2
 1789  000023f4  0401000e	mult	f0,f0,f1
 1790  000023f8  00000834	movfp2i	r1,f0
 1791  000023fc  afc1fff4	sw	-12(r30),r1
 1792  00002400  8fc1fff4	lw	r1,-12(r30)
 1793  00002404  08000004	j	L74_LF2
 1794  00002408  54000000	nop; delay slot nop
 1795  0000240c          	L74_LF2:
 1796  0000240c  8fa20000	lw	r2,0(r29)
 1797  00002410  8fdffff8	lw	r31,-8(r30)
 1798  00002414  001ee820	add	r29,r0,r30
 1799  00002418  8fdefffc	lw	r30,-4(r30)
 1800  0000241c  4be00000	jr	r31
 1801  00002420  54000000	nop
 1802  00002424          	.endproc _dstrtol
 1803  00002424          	.align 2
 1804  00002424          	.proc _bcopy
 1805  00002424          	.global _bcopy
 1806  00002424          	_bcopy:
 1807                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1808  00002424  afbefffc	sw	-4(r29),r30; push fp
 1809  00002428  001df020	add	r30,r0,r29; fp = sp
 1810  0000242c  afbffff8	sw	-8(r29),r31; push ret addr
 1811  00002430  2fbd0010	subui	r29,r29,#16; alloc local storage
 1812  00002434  afa20000	sw	0(r29),r2
 1813  00002438  afa30004	sw	4(r29),r3
 1814  0000243c  54000000	nop
 1815  00002440          	L103_LF2:
 1816  00002440  8fc10008	lw	r1,8(r30)
 1817  00002444  2022ffff	addi	r2,r1,#-1
 1818  00002448  afc20008	sw	8(r30),r2
 1819  0000244c  6c210000	sgti	r1,r1,#0
 1820  00002450  1420000c	bnez	r1,L105_LF2
 1821  00002454  54000000	nop; delay slot nop
 1822  00002458  0800002c	j	L104_LF2
 1823  0000245c  54000000	nop; delay slot nop
 1824  00002460          	L105_LF2:
 1825  00002460  8fc10004	lw	r1,4(r30)
 1826  00002464  20220001	addi	r2,r1,#1
 1827  00002468  afc20004	sw	4(r30),r2
 1828  0000246c  8fc20000	lw	r2,(r30)
 1829  00002470  20430001	addi	r3,r2,#1
 1830  00002474  afc30000	sw	(r30),r3
 1831  00002478  80420000	lb	r2,(r2)
 1832  0000247c  a0220000	sb	(r1),r2
 1833  00002480  0bffffbc	j	L103_LF2
 1834  00002484  54000000	nop; delay slot nop
 1835  00002488          	L104_LF2:
 1836  00002488          	L102_LF2:
 1837  00002488  8fa20000	lw	r2,0(r29)
 1838  0000248c  8fa30004	lw	r3,4(r29)
 1839  00002490  8fdffff8	lw	r31,-8(r30)
 1840  00002494  001ee820	add	r29,r0,r30
 1841  00002498  8fdefffc	lw	r30,-4(r30)
 1842  0000249c  4be00000	jr	r31
 1843  000024a0  54000000	nop
 1844  000024a4          	.endproc _bcopy
 1845  000024a4          	.align 2
 1846  000024a4          	.proc _bzero
 1847  000024a4          	.global _bzero
 1848  000024a4          	_bzero:
 1849                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1850  000024a4  afbefffc	sw	-4(r29),r30; push fp
 1851  000024a8  001df020	add	r30,r0,r29; fp = sp
 1852  000024ac  afbffff8	sw	-8(r29),r31; push ret addr
 1853  000024b0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1854  000024b4  afa20000	sw	0(r29),r2
 1855  000024b8  54000000	nop
 1856  000024bc          	L107_LF2:
 1857  000024bc  8fc10004	lw	r1,4(r30)
 1858  000024c0  2022ffff	addi	r2,r1,#-1
 1859  000024c4  afc20004	sw	4(r30),r2
 1860  000024c8  6c210000	sgti	r1,r1,#0
 1861  000024cc  1420000c	bnez	r1,L109_LF2
 1862  000024d0  54000000	nop; delay slot nop
 1863  000024d4  08000020	j	L108_LF2
 1864  000024d8  54000000	nop; delay slot nop
 1865  000024dc          	L109_LF2:
 1866  000024dc  8fc10000	lw	r1,(r30)
 1867  000024e0  20220001	addi	r2,r1,#1
 1868  000024e4  afc20000	sw	(r30),r2
 1869  000024e8  20020000	addi	r2,r0,(#0x0)&0xff
 1870  000024ec  a0220000	sb	(r1),r2
 1871  000024f0  0bffffc8	j	L107_LF2
 1872  000024f4  54000000	nop; delay slot nop
 1873  000024f8          	L108_LF2:
 1874  000024f8          	L106_LF2:
 1875  000024f8  8fa20000	lw	r2,0(r29)
 1876  000024fc  8fdffff8	lw	r31,-8(r30)
 1877  00002500  001ee820	add	r29,r0,r30
 1878  00002504  8fdefffc	lw	r30,-4(r30)
 1879  00002508  4be00000	jr	r31
 1880  0000250c  54000000	nop
 1881  00002510          	.endproc _bzero
 1882  00002510          	.align 2
 1883  00002510          	.proc _min
 1884  00002510          	.global _min
 1885  00002510          	_min:
 1886                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1887  00002510  afbefffc	sw	-4(r29),r30; push fp
 1888  00002514  001df020	add	r30,r0,r29; fp = sp
 1889  00002518  afbffff8	sw	-8(r29),r31; push ret addr
 1890  0000251c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1891  00002520  afa20000	sw	0(r29),r2
 1892  00002524  afa30004	sw	4(r29),r3
 1893  00002528  8fc10000	lw	r1,(r30)
 1894  0000252c  8fc20004	lw	r2,4(r30)
 1895  00002530  0022182c	sle	r3,r1,r2
 1896  00002534  14600008	bnez	r3,L111_LF2
 1897  00002538  54000000	nop; delay slot nop
 1898  0000253c  8fc10004	lw	r1,4(r30)
 1899  00002540          	L111_LF2:
 1900  00002540  08000004	j	L110_LF2
 1901  00002544  54000000	nop; delay slot nop
 1902  00002548          	L110_LF2:
 1903  00002548  8fa20000	lw	r2,0(r29)
 1904  0000254c  8fa30004	lw	r3,4(r29)
 1905  00002550  8fdffff8	lw	r31,-8(r30)
 1906  00002554  001ee820	add	r29,r0,r30
 1907  00002558  8fdefffc	lw	r30,-4(r30)
 1908  0000255c  4be00000	jr	r31
 1909  00002560  54000000	nop
 1910  00002564          	.endproc _min
 1911  00002564          	.align 2
 1912  00002564          	.proc _max
 1913  00002564          	.global _max
 1914  00002564          	_max:
 1915                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1916  00002564  afbefffc	sw	-4(r29),r30; push fp
 1917  00002568  001df020	add	r30,r0,r29; fp = sp
 1918  0000256c  afbffff8	sw	-8(r29),r31; push ret addr
 1919  00002570  2fbd0010	subui	r29,r29,#16; alloc local storage
 1920  00002574  afa20000	sw	0(r29),r2
 1921  00002578  afa30004	sw	4(r29),r3
 1922  0000257c  8fc10000	lw	r1,(r30)
 1923  00002580  8fc20004	lw	r2,4(r30)
 1924  00002584  0022182d	sge	r3,r1,r2
 1925  00002588  14600008	bnez	r3,L113_LF2
 1926  0000258c  54000000	nop; delay slot nop
 1927  00002590  8fc10004	lw	r1,4(r30)
 1928  00002594          	L113_LF2:
 1929  00002594  08000004	j	L112_LF2
 1930  00002598  54000000	nop; delay slot nop
 1931  0000259c          	L112_LF2:
 1932  0000259c  8fa20000	lw	r2,0(r29)
 1933  000025a0  8fa30004	lw	r3,4(r29)
 1934  000025a4  8fdffff8	lw	r31,-8(r30)
 1935  000025a8  001ee820	add	r29,r0,r30
 1936  000025ac  8fdefffc	lw	r30,-4(r30)
 1937  000025b0  4be00000	jr	r31
 1938  000025b4  54000000	nop
 1939  000025b8          	.endproc _max
 1940                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1941                      ;;;
 1942                      ;;; Most of the traps are called in files from libtraps.
 1945  000025b8          	.align 2
 1946  000025b8          	.proc _exit
 1947  000025b8          	.global _exit
 1948  000025b8          	_exit:
 1949  000025b8  44000300	trap	#0x300
 1950  000025bc  4be00000	jr	r31
 1951  000025c0  54000000	nop
 1952  000025c4          	.endproc _exit
 1954                      ; for the benefit of gcc.
 1955  000025c4          	.proc ___main
 1956  000025c4          	.global ___main
 1957  000025c4          	___main:
 1958  000025c4  4be00000	jr	r31
 1959  000025c8  54000000	nop
 1960  000025cc          	.endproc ___main
 1961  000025cc          	.text
 1962  000025cc          	.global _etext
 1963  000025cc          	_etext:
 1964  000025cc          	.align 3
 1965  000025d0          	.data
 1966  0000c1ec          	.global _edata
 1967  0000c1ec          	_edata:
