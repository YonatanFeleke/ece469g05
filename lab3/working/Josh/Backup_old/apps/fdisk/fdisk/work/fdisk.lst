 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 61440
    3                      ; Data size: 37288
    4                      ; Text size: 5528
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.global _diskblocksize
   80  000010d4          	.data
   81  00003000          	.align 2
   82  00003000          	_diskblocksize:
   83  00003000  00000000	.word 0
   84  00003004          	.global _disksize
   85  00003004          	.align 2
   86  00003004          	_disksize:
   87  00003004  00000000	.word 0
   88  00003008          	.global _num_filesystem_blocks
   89  00003008          	.align 2
   90  00003008          	_num_filesystem_blocks:
   91  00003008  00000000	.word 0
   92  0000300c          	.align 2
   93  0000300c          	LC0_LF0:
   94  0000300c  4469736b	.ascii "Disk Size in bytes: %d\n\000"
   94  00003010  2053697a	
   94  00003014  6520696e	
   94  00003018  20627974	
   94  0000301c  65733a20	
   94  00003020  25640a00	
   95  00003024          	.align 2
   96  00003024          	LC1_LF0:
   97  00003024  4c6f6769	.ascii "Logical Disk Block Size in bytes: %d\n\000"
   97  00003028  63616c20	
   97  0000302c  4469736b	
   97  00003030  20426c6f	
   97  00003034  636b2053	
   97  00003038  697a6520	
   97  0000303c  696e2062	
   97  00003040  79746573	
   97  00003044  3a202564	
   97  00003048  0a00    	
   98  0000304a          	.align 2
   99  0000304c          	LC2_LF0:
  100  0000304c  4e756d62	.ascii "Number of File System Blocks: %d\n\000"
  100  00003050  6572206f	
  100  00003054  66204669	
  100  00003058  6c652053	
  100  0000305c  79737465	
  100  00003060  6d20426c	
  100  00003064  6f636b73	
  100  00003068  3a202564	
  100  0000306c  0a00    	
  101  0000306e          	.align 2
  102  00003070          	LC3_LF0:
  103  00003070  53697a65	.ascii "Size of inode: %d\n\000"
  103  00003074  206f6620	
  103  00003078  696e6f64	
  103  0000307c  653a2025	
  103  00003080  640a00  	
  104  00003083          	.align 2
  105  00003084          	LC4_LF0:
  106  00003084  31206669	.ascii "1 file system block used for MBR/Superblock\n\000"
  106  00003088  6c652073	
  106  0000308c  79737465	
  106  00003090  6d20626c	
  106  00003094  6f636b20	
  106  00003098  75736564	
  106  0000309c  20666f72	
  106  000030a0  204d4252	
  106  000030a4  2f537570	
  106  000030a8  6572626c	
  106  000030ac  6f636b0a	
  106  000030b0  00      	
  107  000030b1          	.align 2
  108  000030b4          	LC5_LF0:
  109  000030b4  25642066	.ascii "%d file system blocks used for inodes\n\000"
  109  000030b8  696c6520	
  109  000030bc  73797374	
  109  000030c0  656d2062	
  109  000030c4  6c6f636b	
  109  000030c8  73207573	
  109  000030cc  65642066	
  109  000030d0  6f722069	
  109  000030d4  6e6f6465	
  109  000030d8  730a00  	
  110  000030db          	.align 2
  111  000030dc          	LC6_LF0:
  112  000030dc  25642066	.ascii "%d file system blocks used for free block vector\n\000"
  112  000030e0  696c6520	
  112  000030e4  73797374	
  112  000030e8  656d2062	
  112  000030ec  6c6f636b	
  112  000030f0  73207573	
  112  000030f4  65642066	
  112  000030f8  6f722066	
  112  000030fc  72656520	
  112  00003100  626c6f63	
  112  00003104  6b207665	
  112  00003108  63746f72	
  112  0000310c  0a00    	
  113  0000310e          	.align 2
  114  00003110          	LC7_LF0:
  115  00003110  66646973	.ascii "fdisk (%d): Formatted DFS disk for %d bytes.\n\000"
  115  00003114  6b202825	
  115  00003118  64293a20	
  115  0000311c  466f726d	
  115  00003120  61747465	
  115  00003124  64204446	
  115  00003128  53206469	
  115  0000312c  736b2066	
  115  00003130  6f722025	
  115  00003134  64206279	
  115  00003138  7465732e	
  115  0000313c  0a00    	
  116  0000313e          	.text
  117  000010d4          	.align 2
  118  000010d4          	.proc _main
  119  000010d4          	.global _main
  120  000010d4          	_main:
  121                      ;  Function 'main'; 2048 bytes of locals, 0 regs to save.
  122  000010d4  afbefffc	sw	-4(r29),r30; push fp
  123  000010d8  001df020	add	r30,r0,r29; fp = sp
  124  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  125  000010e0  2fbd0808	subui	r29,r29,#2056; alloc local storage
  126  000010e4  0c0014a8	jal	___main
  127  000010e8  54000000	nop; not filled.
  128  000010ec  0c000698	jal	_dfs_invalidate
  129  000010f0  54000000	nop; not filled.
  130  000010f4  0c00066c	jal	_disk_size
  131  000010f8  54000000	nop; not filled.
  132  000010fc  3c030000	lhi	r3,((_disksize)>>16)&0xffff
  133  00001100  24633004	addui	r3,r3,(_disksize)&0xffff
  134  00001104  ac610000	sw	(r3),r1
  135  00001108  23bdfff8	addi	r29,r29,#-8
  136  0000110c  3c080000	lhi	r8,((LC0_LF0)>>16)&0xffff
  137  00001110  2508300c	addui	r8,r8,(LC0_LF0)&0xffff
  138  00001114  afa80000	sw	(r29),r8
  139  00001118  8c610000	lw	r1,(r3)
  140  0000111c  afa10004	sw	4(r29),r1
  141  00001120  0c00052c	jal	_Printf
  142  00001124  54000000	nop; not filled.
  143  00001128  0c000644	jal	_disk_blocksize
  144  0000112c  54000000	nop; not filled.
  145  00001130  3c020000	lhi	r2,((_diskblocksize)>>16)&0xffff
  146  00001134  24423000	addui	r2,r2,(_diskblocksize)&0xffff
  147  00001138  ac410000	sw	(r2),r1
  148  0000113c  3c080000	lhi	r8,((LC1_LF0)>>16)&0xffff
  149  00001140  25083024	addui	r8,r8,(LC1_LF0)&0xffff
  150  00001144  afa80000	sw	(r29),r8
  151  00001148  8c410000	lw	r1,(r2)
  152  0000114c  afa10004	sw	4(r29),r1
  153  00001150  0c0004fc	jal	_Printf
  154  00001154  54000000	nop; not filled.
  155  00001158  3c020000	lhi	r2,((_num_filesystem_blocks)>>16)&0xffff
  156  0000115c  24423008	addui	r2,r2,(_num_filesystem_blocks)&0xffff
  157  00001160  8c630000	lw	r3,(r3)
  158  00001164  74610000	sgei	r1,r3,#0
  159  00001168  14200008	bnez	r1,L14_LF0
  160  0000116c  54000000	nop; not filled.
  161  00001170  206303ff	addi	r3,r3,#1023
  162  00001174          	L14_LF0:
  163  00001174  5c61000a	srai	r1,r3,#0xa
  164  00001178  ac410000	sw	(r2),r1
  165  0000117c  3c080000	lhi	r8,((LC2_LF0)>>16)&0xffff
  166  00001180  2508304c	addui	r8,r8,(LC2_LF0)&0xffff
  167  00001184  afa80000	sw	(r29),r8
  168  00001188  8c410000	lw	r1,(r2)
  169  0000118c  afa10004	sw	4(r29),r1
  170  00001190  0c0004bc	jal	_Printf
  171  00001194  54000000	nop; not filled.
  172  00001198  3c080000	lhi	r8,((LC3_LF0)>>16)&0xffff
  173  0000119c  25083070	addui	r8,r8,(LC3_LF0)&0xffff
  174  000011a0  afa80000	sw	(r29),r8
  175  000011a4  20080040	addi	r8,r0,#64
  176  000011a8  afa80004	sw	4(r29),r8
  177  000011ac  0c0004a0	jal	_Printf
  178  000011b0  54000000	nop; not filled.
  179  000011b4  0c0005c4	jal	_disk_create
  180  000011b8  54000000	nop; not filled.
  181  000011bc  3c020000	lhi	r2,((_fbv)>>16)&0xffff
  182  000011c0  2442b1a8	addui	r2,r2,(_fbv)&0xffff
  183  000011c4  afa20000	sw	(r29),r2
  184  000011c8  20081000	addi	r8,r0,#4096
  185  000011cc  afa80004	sw	4(r29),r8
  186  000011d0  0c00129c	jal	_bzero
  187  000011d4  54000000	nop; not filled.
  188  000011d8  8c410000	lw	r1,(r2)
  189  000011dc  34210001	ori	r1,r1,#1
  190  000011e0  ac410000	sw	(r2),r1
  191  000011e4  20040001	addi	r4,r0,#1
  192  000011e8  3c080000	lhi	r8,((LC4_LF0)>>16)&0xffff
  193  000011ec  25083084	addui	r8,r8,(LC4_LF0)&0xffff
  194  000011f0  afa80000	sw	(r29),r8
  195  000011f4  0c000458	jal	_Printf
  196  000011f8  54000000	nop; not filled.
  197  000011fc  20050000	addi	r5,r0,#0
  198  00001200  23bd0008	addi	r29,r29,#8
  199  00001204  00023820	add	r7,r0,r2
  200  00001208  20060001	addi	r6,r0,#1
  201  0000120c          	L20_LF0:
  202  0000120c  00041020	add	r2,r0,r4
  203  00001210  74810000	sgei	r1,r4,#0
  204  00001214  14200008	bnez	r1,L21_LF0
  205  00001218  54000000	nop; not filled.
  206  0000121c  2082001f	addi	r2,r4,#31
  207  00001220          	L21_LF0:
  208  00001220  5c420005	srai	r2,r2,#0x5
  209  00001224  50410002	slli	r1,r2,#0x2
  210  00001228  00271820	add	r3,r1,r7
  211  0000122c  50410005	slli	r1,r2,#0x5
  212  00001230  00810822	sub	r1,r4,r1
  213  00001234  00c11004	sll	r2,r6,r1
  214  00001238  8c610000	lw	r1,(r3)
  215  0000123c  00220825	or	r1,r1,r2
  216  00001240  ac610000	sw	(r3),r1
  217  00001244  20840001	addi	r4,r4,#1
  218  00001248  20a50001	addi	r5,r5,#1
  219  0000124c  70a1001f	slei	r1,r5,#31
  220  00001250  1420ffb8	bnez	r1,L20_LF0
  221  00001254  54000000	nop; not filled.
  222  00001258  23bdfff8	addi	r29,r29,#-8
  223  0000125c  3c080000	lhi	r8,((LC5_LF0)>>16)&0xffff
  224  00001260  250830b4	addui	r8,r8,(LC5_LF0)&0xffff
  225  00001264  afa80000	sw	(r29),r8
  226  00001268  20080020	addi	r8,r0,#32
  227  0000126c  afa80004	sw	4(r29),r8
  228  00001270  0c0003dc	jal	_Printf
  229  00001274  54000000	nop; not filled.
  230  00001278  20050000	addi	r5,r0,#0
  231  0000127c  23bd0008	addi	r29,r29,#8
  232  00001280  3c1f0000	lhi	r31,((_num_filesystem_blocks)>>16)&0xffff
  233  00001284  27ff3008	addui	r31,r31,(_num_filesystem_blocks)&0xffff
  234  00001288  3c070000	lhi	r7,((_fbv)>>16)&0xffff
  235  0000128c  24e7b1a8	addui	r7,r7,(_fbv)&0xffff
  236  00001290  20060001	addi	r6,r0,#1
  237  00001294          	L24_LF0:
  238  00001294  8fe20000	lw	r2,(r31)
  239  00001298  74410000	sgei	r1,r2,#0
  240  0000129c  14200008	bnez	r1,L28_LF0
  241  000012a0  54000000	nop; not filled.
  242  000012a4  20421fff	addi	r2,r2,#8191
  243  000012a8          	L28_LF0:
  244  000012a8  5c41000d	srai	r1,r2,#0xd
  245  000012ac  00a1082a	slt	r1,r5,r1
  246  000012b0  1020004c	beqz	r1,L25_LF0
  247  000012b4  54000000	nop; not filled.
  248  000012b8  00041020	add	r2,r0,r4
  249  000012bc  74810000	sgei	r1,r4,#0
  250  000012c0  14200008	bnez	r1,L29_LF0
  251  000012c4  54000000	nop; not filled.
  252  000012c8  2082001f	addi	r2,r4,#31
  253  000012cc          	L29_LF0:
  254  000012cc  5c420005	srai	r2,r2,#0x5
  255  000012d0  50410002	slli	r1,r2,#0x2
  256  000012d4  00271820	add	r3,r1,r7
  257  000012d8  50410005	slli	r1,r2,#0x5
  258  000012dc  00810822	sub	r1,r4,r1
  259  000012e0  00c11004	sll	r2,r6,r1
  260  000012e4  8c610000	lw	r1,(r3)
  261  000012e8  00220825	or	r1,r1,r2
  262  000012ec  ac610000	sw	(r3),r1
  263  000012f0  20840001	addi	r4,r4,#1
  264  000012f4  20a50001	addi	r5,r5,#1
  265  000012f8  0bffff98	j	L24_LF0
  266  000012fc  54000000	nop; not filled.
  267  00001300          	L25_LF0:
  268  00001300  23bdfff8	addi	r29,r29,#-8
  269  00001304  3c080000	lhi	r8,((LC6_LF0)>>16)&0xffff
  270  00001308  250830dc	addui	r8,r8,(LC6_LF0)&0xffff
  271  0000130c  afa80000	sw	(r29),r8
  272  00001310  3c030000	lhi	r3,((_num_filesystem_blocks)>>16)&0xffff
  273  00001314  24633008	addui	r3,r3,(_num_filesystem_blocks)&0xffff
  274  00001318  8c620000	lw	r2,(r3)
  275  0000131c  74410000	sgei	r1,r2,#0
  276  00001320  14200008	bnez	r1,L31_LF0
  277  00001324  54000000	nop; not filled.
  278  00001328  20421fff	addi	r2,r2,#8191
  279  0000132c          	L31_LF0:
  280  0000132c  5c41000d	srai	r1,r2,#0xd
  281  00001330  afa10004	sw	4(r29),r1
  282  00001334  0c000318	jal	_Printf
  283  00001338  54000000	nop; not filled.
  284  0000133c  20050000	addi	r5,r0,#0
  285  00001340  23bd0008	addi	r29,r29,#8
  286  00001344  00033820	add	r7,r0,r3
  287  00001348  23c4f7f8	addi	r4,r30,#-2056
  288  0000134c  20060021	addi	r6,r0,#33
  289  00001350  3c030000	lhi	r3,((_fbv)>>16)&0xffff
  290  00001354  2463b1a8	addui	r3,r3,(_fbv)&0xffff
  291  00001358          	L32_LF0:
  292  00001358  8ce20000	lw	r2,(r7)
  293  0000135c  74410000	sgei	r1,r2,#0
  294  00001360  14200008	bnez	r1,L36_LF0
  295  00001364  54000000	nop; not filled.
  296  00001368  20421fff	addi	r2,r2,#8191
  297  0000136c          	L36_LF0:
  298  0000136c  5c41000d	srai	r1,r2,#0xd
  299  00001370  00a1082a	slt	r1,r5,r1
  300  00001374  1020005c	beqz	r1,L33_LF0
  301  00001378  54000000	nop; not filled.
  302  0000137c  23bdfff8	addi	r29,r29,#-8
  303  00001380  afa40000	sw	(r29),r4
  304  00001384  20080400	addi	r8,r0,#1024
  305  00001388  afa80004	sw	4(r29),r8
  306  0000138c  0c0010e0	jal	_bzero
  307  00001390  54000000	nop; not filled.
  308  00001394  23bdfff8	addi	r29,r29,#-8
  309  00001398  afa30000	sw	(r29),r3
  310  0000139c  afa40004	sw	4(r29),r4
  311  000013a0  afa80008	sw	8(r29),r8
  312  000013a4  0c001048	jal	_bcopy
  313  000013a8  54000000	nop; not filled.
  314  000013ac  afa60000	sw	(r29),r6
  315  000013b0  afa40004	sw	4(r29),r4
  316  000013b4  0c0000ec	jal	_FdiskWriteBlock
  317  000013b8  54000000	nop; not filled.
  318  000013bc  23bd0010	addi	r29,r29,#16
  319  000013c0  20c60001	addi	r6,r6,#1
  320  000013c4  20630400	addi	r3,r3,#1024
  321  000013c8  20a50001	addi	r5,r5,#1
  322  000013cc  0bffff88	j	L32_LF0
  323  000013d0  54000000	nop; not filled.
  324  000013d4          	L33_LF0:
  325  000013d4  23bdfff8	addi	r29,r29,#-8
  326  000013d8  23c2f7f8	addi	r2,r30,#-2056
  327  000013dc  afa20000	sw	(r29),r2
  328  000013e0  20080400	addi	r8,r0,#1024
  329  000013e4  afa80004	sw	4(r29),r8
  330  000013e8  0c001084	jal	_bzero
  331  000013ec  54000000	nop; not filled.
  332  000013f0  3c010000	lhi	r1,((_sb)>>16)&0xffff
  333  000013f4  24213190	addui	r1,r1,(_sb)&0xffff
  334  000013f8  20080001	addi	r8,r0,#1
  335  000013fc  ac280000	sw	(r1),r8
  336  00001400  20080400	addi	r8,r0,#1024
  337  00001404  ac280004	sw	4(r1),r8
  338  00001408  8ce70000	lw	r7,(r7)
  339  0000140c  ac270008	sw	8(r1),r7
  340  00001410  20080001	addi	r8,r0,#1
  341  00001414  ac28000c	sw	12(r1),r8
  342  00001418  20080200	addi	r8,r0,#512
  343  0000141c  ac280010	sw	16(r1),r8
  344  00001420  20080021	addi	r8,r0,#33
  345  00001424  ac280014	sw	20(r1),r8
  346  00001428  23bdfff8	addi	r29,r29,#-8
  347  0000142c  afa10000	sw	(r29),r1
  348  00001430  3c010000	lhi	r1,((_diskblocksize)>>16)&0xffff
  349  00001434  24213000	addui	r1,r1,(_diskblocksize)&0xffff
  350  00001438  8c210000	lw	r1,(r1)
  351  0000143c  00410820	add	r1,r2,r1
  352  00001440  afa10004	sw	4(r29),r1
  353  00001444  20080018	addi	r8,r0,#24
  354  00001448  afa80008	sw	8(r29),r8
  355  0000144c  0c000fa0	jal	_bcopy
  356  00001450  54000000	nop; not filled.
  357  00001454  20080000	addi	r8,r0,#0
  358  00001458  afa80000	sw	(r29),r8
  359  0000145c  afa20004	sw	4(r29),r2
  360  00001460  0c000040	jal	_FdiskWriteBlock
  361  00001464  54000000	nop; not filled.
  362  00001468  0c0001f0	jal	_getpid
  363  0000146c  54000000	nop; not filled.
  364  00001470  3c080000	lhi	r8,((LC7_LF0)>>16)&0xffff
  365  00001474  25083110	addui	r8,r8,(LC7_LF0)&0xffff
  366  00001478  afa80000	sw	(r29),r8
  367  0000147c  afa10004	sw	4(r29),r1
  368  00001480  3c010000	lhi	r1,((_disksize)>>16)&0xffff
  369  00001484  24213004	addui	r1,r1,(_disksize)&0xffff
  370  00001488  8c210000	lw	r1,(r1)
  371  0000148c  afa10008	sw	8(r29),r1
  372  00001490  0c0001bc	jal	_Printf
  373  00001494  54000000	nop; not filled.
  374  00001498  23bd0010	addi	r29,r29,#16
  375  0000149c  0c0010e4	jal	_exit
  376  000014a0  54000000	nop
  377  000014a4          	.endproc _main
  378  000014a4          	.data
  379  0000313e          	.align 2
  380  00003140          	LC8_LF0:
  381  00003140  66646973	.ascii "fdiskwriteblock (%d): writing to file system block #%d -- physical blo"
  381  00003144  6b777269	
  381  00003148  7465626c	
  381  0000314c  6f636b20	
  381  00003150  28256429	
  381  00003154  3a207772	
  381  00003158  6974696e	
  381  0000315c  6720746f	
  381  00003160  2066696c	
  381  00003164  65207379	
  381  00003168  7374656d	
  381  0000316c  20626c6f	
  381  00003170  636b2023	
  381  00003174  2564202d	
  381  00003178  2d207068	
  381  0000317c  79736963	
  381  00003180  616c2062	
  381  00003184  6c6f    	
  382  00003186  636b2023	.ascii "ck #%d\n\000"
  382  0000318a  25640a00	
  383  0000318e          	.text
  384  000014a4          	.align 2
  385  000014a4          	.proc _FdiskWriteBlock
  386  000014a4          	.global _FdiskWriteBlock
  387  000014a4          	_FdiskWriteBlock:
  388                      ;  Function 'FdiskWriteBlock'; 0 bytes of locals, 6 regs to save.
  389  000014a4  afbefffc	sw	-4(r29),r30; push fp
  390  000014a8  001df020	add	r30,r0,r29; fp = sp
  391  000014ac  afbffff8	sw	-8(r29),r31; push ret addr
  392  000014b0  2fbd0020	subui	r29,r29,#32; alloc local storage
  393  000014b4  afa20000	sw	0(r29),r2
  394  000014b8  afa30004	sw	4(r29),r3
  395  000014bc  afa40008	sw	8(r29),r4
  396  000014c0  afa5000c	sw	12(r29),r5
  397  000014c4  afa60010	sw	16(r29),r6
  398  000014c8  afa70014	sw	20(r29),r7
  399  000014cc  8fc50000	lw	r5,(r30)
  400  000014d0  8fc60004	lw	r6,4(r30)
  401  000014d4  20030000	addi	r3,r0,#0
  402  000014d8  3c040000	lhi	r4,((_diskblocksize)>>16)&0xffff
  403  000014dc  24843000	addui	r4,r4,(_diskblocksize)&0xffff
  404  000014e0  8c820000	lw	r2,(r4)
  405  000014e4  20010400	addi	r1,r0,#1024
  406  000014e8  00200035	movi2fp	f0,r1
  407  000014ec  00400835	movi2fp	f1,r2
  408  000014f0  0401000f	div	f0,f0,f1
  409  000014f4  00000834	movfp2i	r1,f0
  410  000014f8  0061082a	slt	r1,r3,r1
  411  000014fc  102000d8	beqz	r1,L45_LF0
  412  00001500  54000000	nop; not filled.
  413  00001504  00041020	add	r2,r0,r4
  414  00001508  20040400	addi	r4,r0,#1024
  415  0000150c          	L47_LF0:
  416  0000150c  0c00014c	jal	_getpid
  417  00001510  54000000	nop; not filled.
  418  00001514  23bdfff0	addi	r29,r29,#-16
  419  00001518  3c070000	lhi	r7,((LC8_LF0)>>16)&0xffff
  420  0000151c  24e73140	addui	r7,r7,(LC8_LF0)&0xffff
  421  00001520  afa70000	sw	(r29),r7
  422  00001524  afa10004	sw	4(r29),r1
  423  00001528  afa50008	sw	8(r29),r5
  424  0000152c  8c410000	lw	r1,(r2)
  425  00001530  00800035	movi2fp	f0,r4
  426  00001534  00200835	movi2fp	f1,r1
  427  00001538  0401000f	div	f0,f0,f1
  428  0000153c  00000834	movfp2i	r1,f0
  429  00001540  00a00035	movi2fp	f0,r5
  430  00001544  00200835	movi2fp	f1,r1
  431  00001548  0401000e	mult	f0,f0,f1
  432  0000154c  00000834	movfp2i	r1,f0
  433  00001550  00230820	add	r1,r1,r3
  434  00001554  afa1000c	sw	12(r29),r1
  435  00001558  0c0000f4	jal	_Printf
  436  0000155c  54000000	nop; not filled.
  437  00001560  8c410000	lw	r1,(r2)
  438  00001564  00800035	movi2fp	f0,r4
  439  00001568  00200835	movi2fp	f1,r1
  440  0000156c  0401000f	div	f0,f0,f1
  441  00001570  00000834	movfp2i	r1,f0
  442  00001574  00a00035	movi2fp	f0,r5
  443  00001578  00200835	movi2fp	f1,r1
  444  0000157c  0401000e	mult	f0,f0,f1
  445  00001580  00000834	movfp2i	r1,f0
  446  00001584  00230820	add	r1,r1,r3
  447  00001588  afa10000	sw	(r29),r1
  448  0000158c  8c410000	lw	r1,(r2)
  449  00001590  00600035	movi2fp	f0,r3
  450  00001594  00200835	movi2fp	f1,r1
  451  00001598  0401000e	mult	f0,f0,f1
  452  0000159c  00000834	movfp2i	r1,f0
  453  000015a0  00c10820	add	r1,r6,r1
  454  000015a4  afa10004	sw	4(r29),r1
  455  000015a8  0c0001ac	jal	_disk_write_block
  456  000015ac  54000000	nop; not filled.
  457  000015b0  23bd0010	addi	r29,r29,#16
  458  000015b4  20630001	addi	r3,r3,#1
  459  000015b8  8c410000	lw	r1,(r2)
  460  000015bc  00800035	movi2fp	f0,r4
  461  000015c0  00200835	movi2fp	f1,r1
  462  000015c4  0401000f	div	f0,f0,f1
  463  000015c8  00000834	movfp2i	r1,f0
  464  000015cc  0061082a	slt	r1,r3,r1
  465  000015d0  1420ff38	bnez	r1,L47_LF0
  466  000015d4  54000000	nop; not filled.
  467  000015d8          	L45_LF0:
  468  000015d8  20010001	addi	r1,r0,#1
  469  000015dc  8fa20000	lw	r2,0(r29)
  470  000015e0  8fa30004	lw	r3,4(r29)
  471  000015e4  8fa40008	lw	r4,8(r29)
  472  000015e8  8fa5000c	lw	r5,12(r29)
  473  000015ec  8fa60010	lw	r6,16(r29)
  474  000015f0  8fa70014	lw	r7,20(r29)
  475  000015f4  8fdffff8	lw	r31,-8(r30)
  476  000015f8  001ee820	add	r29,r0,r30
  477  000015fc  8fdefffc	lw	r30,-4(r30)
  478  00001600  4be00000	jr	r31
  479  00001604  54000000	nop
  480  00001608          	.endproc _FdiskWriteBlock
  481  00001608          	.data
  482  0000318e          	.align 2
  483  00003190          	.global _sb
  484  00003190          	_sb:
  485  00003190          	.space 24
  486  000031a8          	.align 2
  487  000031a8          	.global _inodes
  488  000031a8          	_inodes:
  489  000031a8          	.space 32768
  490  0000b1a8          	.align 2
  491  0000b1a8          	.global _fbv
  492  0000b1a8          	_fbv:
  493  0000b1a8          	.space 4096
  494                      ;;;
  495                      ;;; Stub functions for DLX traps.
  496                      ;;;
  497                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  498                      ;;;
  499                      ;;; The traps such as Open and Close
  500                      ;;; (note the capital letters) are for use by user programs.  The traps
  501                      ;;; with names such as open and close (lower case) are for use by the OS.
  502                      ;;;
  504  0000c1a8          	.text
  505  00001608          	.align 2
  507                      ;;; The following are the traps to be used by user-level programs
  508                      ;;;
  510  00001608          	.align 2
  511  00001608          	.proc _Open
  512  00001608          	.global _Open
  513  00001608          	_Open:
  514                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  515                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  516                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  517  00001608  44000213	trap	#0x213
  518  0000160c  4be00000	jr	r31
  519  00001610  54000000	nop
  520  00001614          	.endproc _Open
  522  00001614          	.proc _Close
  523  00001614          	.global _Close
  524  00001614          	_Close:
  525  00001614  44000214	trap	#0x214
  526  00001618  4be00000	jr	r31
  527  0000161c  54000000	nop
  528  00001620          	.endproc _Close
  530  00001620          	.proc _Read
  531  00001620          	.global _Read
  532  00001620          	_Read:
  533  00001620  44000210	trap	#0x210
  534  00001624  4be00000	jr	r31
  535  00001628  54000000	nop
  536  0000162c          	.endproc _Read
  538  0000162c          	.proc _Write
  539  0000162c          	.global _Write
  540  0000162c          	_Write:
  541  0000162c  44000211	trap	#0x211
  542  00001630  4be00000	jr	r31
  543  00001634  54000000	nop
  544  00001638          	.endproc _Write
  546  00001638          	.proc _Lseek
  547  00001638          	.global _Lseek
  548  00001638          	_Lseek:
  549  00001638  44000212	trap	#0x212
  550  0000163c  4be00000	jr	r31
  551  00001640  54000000	nop
  552  00001644          	.endproc _Lseek
  554  00001644          	.proc _Putchar
  555  00001644          	.global _Putchar
  556  00001644          	_Putchar:
  557  00001644  44000280	trap	#0x280
  558  00001648  4be00000	jr	r31
  559  0000164c  54000000	nop
  560  00001650          	.endproc _Putchar
  562  00001650          	.proc _Printf
  563  00001650          	.global _Printf
  564  00001650          	_Printf:
  565  00001650  44000201	trap	#0x201
  566  00001654  4be00000	jr	r31
  567  00001658  54000000	nop
  568  0000165c          	.endproc _Printf
  570  0000165c          	.proc _getpid
  571  0000165c          	.global _getpid
  572  0000165c          	_getpid:
  573  0000165c  44000431	trap	#0x431
  574  00001660  4be00000	jr	r31
  575  00001664  54000000	nop
  576  00001668          	.endproc _getpid
  578  00001668          	.proc _process_create
  579  00001668          	.global _process_create
  580  00001668          	_process_create:
  581  00001668  44000432	trap	#0x432
  582  0000166c  4be00000	jr	r31
  583  00001670  54000000	nop
  584  00001674          	.endproc _process_create
  586  00001674          	.proc _shmget
  587  00001674          	.global _shmget
  588  00001674          	_shmget:
  589  00001674  44000440	trap	#0x440
  590  00001678  4be00000	jr	r31
  591  0000167c  54000000	nop
  592  00001680          	.endproc _shmget
  594  00001680          	.proc _shmat
  595  00001680          	.global _shmat
  596  00001680          	_shmat:
  597  00001680  44000441	trap	#0x441
  598  00001684  4be00000	jr	r31
  599  00001688  54000000	nop
  600  0000168c          	.endproc _shmat
  602  0000168c          	.proc _sem_create
  603  0000168c          	.global _sem_create
  604  0000168c          	_sem_create:
  605  0000168c  44000450	trap	#0x450
  606  00001690  4be00000	jr	r31
  607  00001694  54000000	nop
  608  00001698          	.endproc _sem_create
  610  00001698          	.proc _sem_wait
  611  00001698          	.global _sem_wait
  612  00001698          	_sem_wait:
  613  00001698  44000451	trap	#0x451
  614  0000169c  4be00000	jr	r31
  615  000016a0  54000000	nop
  616  000016a4          	.endproc _sem_wait
  618  000016a4          	.proc _sem_signal
  619  000016a4          	.global _sem_signal
  620  000016a4          	_sem_signal:
  621  000016a4  44000452	trap	#0x452
  622  000016a8  4be00000	jr	r31
  623  000016ac  54000000	nop
  624  000016b0          	.endproc _sem_signal
  626  000016b0          	.proc _lock_create
  627  000016b0          	.global _lock_create
  628  000016b0          	_lock_create:
  629  000016b0  44000453	trap	#0x453
  630  000016b4  4be00000	jr	r31
  631  000016b8  54000000	nop
  632  000016bc          	.endproc _lock_create
  634  000016bc          	.proc _lock_acquire
  635  000016bc          	.global _lock_acquire
  636  000016bc          	_lock_acquire:
  637  000016bc  44000454	trap	#0x454
  638  000016c0  4be00000	jr	r31
  639  000016c4  54000000	nop
  640  000016c8          	.endproc _lock_acquire
  642  000016c8          	.proc _lock_release
  643  000016c8          	.global _lock_release
  644  000016c8          	_lock_release:
  645  000016c8  44000455	trap	#0x455
  646  000016cc  4be00000	jr	r31
  647  000016d0  54000000	nop
  648  000016d4          	.endproc _lock_release
  650  000016d4          	.proc _cond_create
  651  000016d4          	.global _cond_create
  652  000016d4          	_cond_create:
  653  000016d4  44000456	trap	#0x456
  654  000016d8  4be00000	jr	r31
  655  000016dc  54000000	nop
  656  000016e0          	.endproc _cond_create
  658  000016e0          	.proc _cond_wait
  659  000016e0          	.global _cond_wait
  660  000016e0          	_cond_wait:
  661  000016e0  44000457	trap	#0x457
  662  000016e4  4be00000	jr	r31
  663  000016e8  54000000	nop
  664  000016ec          	.endproc _cond_wait
  666  000016ec          	.proc _cond_signal
  667  000016ec          	.global _cond_signal
  668  000016ec          	_cond_signal:
  669  000016ec  44000458	trap	#0x458
  670  000016f0  4be00000	jr	r31
  671  000016f4  54000000	nop
  672  000016f8          	.endproc _cond_signal
  674  000016f8          	.proc _cond_broadcast
  675  000016f8          	.global _cond_broadcast
  676  000016f8          	_cond_broadcast:
  677  000016f8  44000459	trap	#0x459
  678  000016fc  4be00000	jr	r31
  679  00001700  54000000	nop
  680  00001704          	.endproc _cond_broadcast
  682  00001704          	.proc _mbox_create
  683  00001704          	.global _mbox_create
  684  00001704          	_mbox_create:
  685  00001704  44000460	trap	#0x460
  686  00001708  4be00000	jr	r31
  687  0000170c  54000000	nop
  688  00001710          	.endproc _mbox_create
  690  00001710          	.proc _mbox_open
  691  00001710          	.global _mbox_open
  692  00001710          	_mbox_open:
  693  00001710  44000461	trap	#0x461
  694  00001714  4be00000	jr	r31
  695  00001718  54000000	nop
  696  0000171c          	.endproc _mbox_open
  698  0000171c          	.proc _mbox_close
  699  0000171c          	.global _mbox_close
  700  0000171c          	_mbox_close:
  701  0000171c  44000462	trap	#0x462
  702  00001720  4be00000	jr	r31
  703  00001724  54000000	nop
  704  00001728          	.endproc _mbox_close
  706  00001728          	.proc _mbox_send
  707  00001728          	.global _mbox_send
  708  00001728          	_mbox_send:
  709  00001728  44000463	trap	#0x463
  710  0000172c  4be00000	jr	r31
  711  00001730  54000000	nop
  712  00001734          	.endproc _mbox_send
  714  00001734          	.proc _mbox_recv
  715  00001734          	.global _mbox_recv
  716  00001734          	_mbox_recv:
  717  00001734  44000464	trap	#0x464
  718  00001738  4be00000	jr	r31
  719  0000173c  54000000	nop
  720  00001740          	.endproc _mbox_recv
  722  00001740          	.proc _sleep
  723  00001740          	.global _sleep
  724  00001740          	_sleep:
  725  00001740  44000465	trap	#0x465
  726  00001744  4be00000	jr	r31
  727  00001748  54000000	nop
  728  0000174c          	.endproc _sleep
  730  0000174c          	.proc _yield
  731  0000174c          	.global _yield
  732  0000174c          	_yield:
  733  0000174c  44000466	trap	#0x466
  734  00001750  4be00000	jr	r31
  735  00001754  54000000	nop
  736  00001758          	.endproc _yield
  738  00001758          	.proc _disk_write_block
  739  00001758          	.global _disk_write_block
  740  00001758          	_disk_write_block:
  741  00001758  44000467	trap	#0x467
  742  0000175c  4be00000	jr	r31
  743  00001760  54000000	nop
  744  00001764          	.endproc _disk_write_block
  746  00001764          	.proc _disk_size
  747  00001764          	.global _disk_size
  748  00001764          	_disk_size:
  749  00001764  44000468	trap	#0x468
  750  00001768  4be00000	jr	r31
  751  0000176c  54000000	nop
  752  00001770          	.endproc _disk_size
  754  00001770          	.proc _disk_blocksize
  755  00001770          	.global _disk_blocksize
  756  00001770          	_disk_blocksize:
  757  00001770  44000469	trap	#0x469
  758  00001774  4be00000	jr	r31
  759  00001778  54000000	nop
  760  0000177c          	.endproc _disk_blocksize
  762  0000177c          	.proc _disk_create
  763  0000177c          	.global _disk_create
  764  0000177c          	_disk_create:
  765  0000177c  44000470	trap	#0x470
  766  00001780  4be00000	jr	r31
  767  00001784  54000000	nop
  768  00001788          	.endproc _disk_create
  770  00001788          	.proc _dfs_invalidate
  771  00001788          	.global _dfs_invalidate
  772  00001788          	_dfs_invalidate:
  773  00001788  44000471	trap	#0x471
  774  0000178c  4be00000	jr	r31
  775  00001790  54000000	nop
  776  00001794          	.endproc _dfs_invalidate
  778  00001794          	.proc _file_open
  779  00001794          	.global _file_open
  780  00001794          	_file_open:
  781  00001794  44000472	trap	#0x472
  782  00001798  4be00000	jr	r31
  783  0000179c  54000000	nop
  784  000017a0          	.endproc _file_open
  786  000017a0          	.proc _file_close
  787  000017a0          	.global _file_close
  788  000017a0          	_file_close:
  789  000017a0  44000473	trap	#0x473
  790  000017a4  4be00000	jr	r31
  791  000017a8  54000000	nop
  792  000017ac          	.endproc _file_close
  794  000017ac          	.proc _file_delete
  795  000017ac          	.global _file_delete
  796  000017ac          	_file_delete:
  797  000017ac  44000474	trap	#0x474
  798  000017b0  4be00000	jr	r31
  799  000017b4  54000000	nop
  800  000017b8          	.endproc _file_delete
  802  000017b8          	.proc _file_read
  803  000017b8          	.global _file_read
  804  000017b8          	_file_read:
  805  000017b8  44000475	trap	#0x475
  806  000017bc  4be00000	jr	r31
  807  000017c0  54000000	nop
  808  000017c4          	.endproc _file_read
  810  000017c4          	.proc _file_write
  811  000017c4          	.global _file_write
  812  000017c4          	_file_write:
  813  000017c4  44000476	trap	#0x476
  814  000017c8  4be00000	jr	r31
  815  000017cc  54000000	nop
  816  000017d0          	.endproc _file_write
  818  000017d0          	.proc _file_seek
  819  000017d0          	.global _file_seek
  820  000017d0          	_file_seek:
  821  000017d0  44000477	trap	#0x477
  822  000017d4  4be00000	jr	r31
  823  000017d8  54000000	nop
  824  000017dc          	.endproc _file_seek
  826  000017dc          	.proc _run_os_tests
  827  000017dc          	.global _run_os_tests
  828  000017dc          	_run_os_tests:
  829  000017dc  440004ff	trap	#0x4FF
  830  000017e0  4be00000	jr	r31
  831  000017e4  54000000	nop
  832  000017e8          	.endproc _run_os_tests
  835  000017e8          	.proc _Exit
  836  000017e8          	.global _Exit
  837  000017e8          	_Exit:
  838  000017e8  44000500	trap	#0x500
  839  000017ec  4be00000	jr	r31
  840  000017f0  54000000	nop
  841  000017f4          	.endproc _Exit
  842                      ; Compiled by GCC
  844  000017f4          	.align 2
  845  000017f4          	.proc _isspace
  846  000017f4          	.global _isspace
  847  000017f4          	_isspace:
  848                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  849  000017f4  afbefffc	sw	-4(r29),r30; push fp
  850  000017f8  001df020	add	r30,r0,r29; fp = sp
  851  000017fc  afbffff8	sw	-8(r29),r31; push ret addr
  852  00001800  2fbd0018	subui	r29,r29,#24; alloc local storage
  853  00001804  afa20000	sw	0(r29),r2
  854  00001808  afa30004	sw	4(r29),r3
  855  0000180c  afa40008	sw	8(r29),r4
  856  00001810  83c20003	lb	r2,3(r30)
  857  00001814  20010000	addi	r1,r0,#0
  858  00001818  304300ff	andi	r3,r2,#0x00ff
  859  0000181c  60640020	seqi	r4,r3,#32
  860  00001820  1480002c	bnez	r4,L3_LF2
  861  00001824  54000000	nop; delay slot nop
  862  00001828  304300ff	andi	r3,r2,#0x00ff
  863  0000182c  60640009	seqi	r4,r3,#9
  864  00001830  1480001c	bnez	r4,L3_LF2
  865  00001834  54000000	nop; delay slot nop
  866  00001838  304300ff	andi	r3,r2,#0x00ff
  867  0000183c  6064000a	seqi	r4,r3,#10
  868  00001840  1480000c	bnez	r4,L3_LF2
  869  00001844  54000000	nop; delay slot nop
  870  00001848  08000008	j	L2_LF2
  871  0000184c  54000000	nop; delay slot nop
  872  00001850          	L3_LF2:
  873  00001850  20010001	addi	r1,r0,#1
  874  00001854          	L2_LF2:
  875  00001854  08000004	j	L1_LF2
  876  00001858  54000000	nop; delay slot nop
  877  0000185c          	L1_LF2:
  878  0000185c  8fa20000	lw	r2,0(r29)
  879  00001860  8fa30004	lw	r3,4(r29)
  880  00001864  8fa40008	lw	r4,8(r29)
  881  00001868  8fdffff8	lw	r31,-8(r30)
  882  0000186c  001ee820	add	r29,r0,r30
  883  00001870  8fdefffc	lw	r30,-4(r30)
  884  00001874  4be00000	jr	r31
  885  00001878  54000000	nop
  886  0000187c          	.endproc _isspace
  887  0000187c          	.align 2
  888  0000187c          	.proc _isxdigit
  889  0000187c          	.global _isxdigit
  890  0000187c          	_isxdigit:
  891                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  892  0000187c  afbefffc	sw	-4(r29),r30; push fp
  893  00001880  001df020	add	r30,r0,r29; fp = sp
  894  00001884  afbffff8	sw	-8(r29),r31; push ret addr
  895  00001888  2fbd0018	subui	r29,r29,#24; alloc local storage
  896  0000188c  afa20000	sw	0(r29),r2
  897  00001890  afa30004	sw	4(r29),r3
  898  00001894  afa40008	sw	8(r29),r4
  899  00001898  83c20003	lb	r2,3(r30)
  900  0000189c  20010000	addi	r1,r0,#0
  901  000018a0  304300ff	andi	r3,r2,#0x00ff
  902  000018a4  6c64002f	sgtui	r4,r3,#47
  903  000018a8  1080001c	beqz	r4,L7_LF2
  904  000018ac  54000000	nop; delay slot nop
  905  000018b0  304300ff	andi	r3,r2,#0x00ff
  906  000018b4  70640039	sleui	r4,r3,#57
  907  000018b8  1480005c	bnez	r4,L6_LF2
  908  000018bc  54000000	nop; delay slot nop
  909  000018c0  08000004	j	L7_LF2
  910  000018c4  54000000	nop; delay slot nop
  911  000018c8          	L7_LF2:
  912  000018c8  304300ff	andi	r3,r2,#0x00ff
  913  000018cc  6c640060	sgtui	r4,r3,#96
  914  000018d0  1080001c	beqz	r4,L8_LF2
  915  000018d4  54000000	nop; delay slot nop
  916  000018d8  304300ff	andi	r3,r2,#0x00ff
  917  000018dc  70640066	sleui	r4,r3,#102
  918  000018e0  14800034	bnez	r4,L6_LF2
  919  000018e4  54000000	nop; delay slot nop
  920  000018e8  08000004	j	L8_LF2
  921  000018ec  54000000	nop; delay slot nop
  922  000018f0          	L8_LF2:
  923  000018f0  304300ff	andi	r3,r2,#0x00ff
  924  000018f4  6c640040	sgtui	r4,r3,#64
  925  000018f8  10800020	beqz	r4,L5_LF2
  926  000018fc  54000000	nop; delay slot nop
  927  00001900  304300ff	andi	r3,r2,#0x00ff
  928  00001904  70640041	sleui	r4,r3,#65
  929  00001908  1480000c	bnez	r4,L6_LF2
  930  0000190c  54000000	nop; delay slot nop
  931  00001910  08000008	j	L5_LF2
  932  00001914  54000000	nop; delay slot nop
  933  00001918          	L6_LF2:
  934  00001918  20010001	addi	r1,r0,#1
  935  0000191c          	L5_LF2:
  936  0000191c  08000004	j	L4_LF2
  937  00001920  54000000	nop; delay slot nop
  938  00001924          	L4_LF2:
  939  00001924  8fa20000	lw	r2,0(r29)
  940  00001928  8fa30004	lw	r3,4(r29)
  941  0000192c  8fa40008	lw	r4,8(r29)
  942  00001930  8fdffff8	lw	r31,-8(r30)
  943  00001934  001ee820	add	r29,r0,r30
  944  00001938  8fdefffc	lw	r30,-4(r30)
  945  0000193c  4be00000	jr	r31
  946  00001940  54000000	nop
  947  00001944          	.endproc _isxdigit
  948  00001944          	.align 2
  949  00001944          	.proc _dstrcpy
  950  00001944          	.global _dstrcpy
  951  00001944          	_dstrcpy:
  952                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  953  00001944  afbefffc	sw	-4(r29),r30; push fp
  954  00001948  001df020	add	r30,r0,r29; fp = sp
  955  0000194c  afbffff8	sw	-8(r29),r31; push ret addr
  956  00001950  2fbd0018	subui	r29,r29,#24; alloc local storage
  957  00001954  afa20000	sw	0(r29),r2
  958  00001958  afa30004	sw	4(r29),r3
  959  0000195c  8fc10000	lw	r1,(r30)
  960  00001960  afc1fff4	sw	-12(r30),r1
  961  00001964          	L10_LF2:
  962  00001964  8fc10000	lw	r1,(r30)
  963  00001968  20220001	addi	r2,r1,#1
  964  0000196c  afc20000	sw	(r30),r2
  965  00001970  8fc20004	lw	r2,4(r30)
  966  00001974  20430001	addi	r3,r2,#1
  967  00001978  afc30004	sw	4(r30),r3
  968  0000197c  80420000	lb	r2,(r2)
  969  00001980  a0220000	sb	(r1),r2
  970  00001984  a3c2fff3	sb	-13(r30),r2
  971  00001988          	L12_LF2:
  972  00001988  93c1fff3	lbu	r1,-13(r30)
  973  0000198c  64220000	snei	r2,r1,#0
  974  00001990  1440000c	bnez	r2,L13_LF2
  975  00001994  54000000	nop; delay slot nop
  976  00001998  0800000c	j	L11_LF2
  977  0000199c  54000000	nop; delay slot nop
  978  000019a0          	L13_LF2:
  979  000019a0  0bffffc0	j	L10_LF2
  980  000019a4  54000000	nop; delay slot nop
  981  000019a8          	L11_LF2:
  982  000019a8  8fc1fff4	lw	r1,-12(r30)
  983  000019ac  08000004	j	L9_LF2
  984  000019b0  54000000	nop; delay slot nop
  985  000019b4          	L9_LF2:
  986  000019b4  8fa20000	lw	r2,0(r29)
  987  000019b8  8fa30004	lw	r3,4(r29)
  988  000019bc  8fdffff8	lw	r31,-8(r30)
  989  000019c0  001ee820	add	r29,r0,r30
  990  000019c4  8fdefffc	lw	r30,-4(r30)
  991  000019c8  4be00000	jr	r31
  992  000019cc  54000000	nop
  993  000019d0          	.endproc _dstrcpy
  994  000019d0          	.align 2
  995  000019d0          	.proc _dstrncpy
  996  000019d0          	.global _dstrncpy
  997  000019d0          	_dstrncpy:
  998                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  999  000019d0  afbefffc	sw	-4(r29),r30; push fp
 1000  000019d4  001df020	add	r30,r0,r29; fp = sp
 1001  000019d8  afbffff8	sw	-8(r29),r31; push ret addr
 1002  000019dc  2fbd0018	subui	r29,r29,#24; alloc local storage
 1003  000019e0  afa20000	sw	0(r29),r2
 1004  000019e4  afa30004	sw	4(r29),r3
 1005  000019e8  8fc10000	lw	r1,(r30)
 1006  000019ec  afc1fff4	sw	-12(r30),r1
 1007  000019f0          	L15_LF2:
 1008  000019f0  8fc10008	lw	r1,8(r30)
 1009  000019f4  2022ffff	addi	r2,r1,#-1
 1010  000019f8  afc20008	sw	8(r30),r2
 1011  000019fc  70210000	slei	r1,r1,#0
 1012  00001a00  1020000c	beqz	r1,L18_LF2
 1013  00001a04  54000000	nop; delay slot nop
 1014  00001a08  08000048	j	L16_LF2
 1015  00001a0c  54000000	nop; delay slot nop
 1016  00001a10          	L18_LF2:
 1017  00001a10  8fc10000	lw	r1,(r30)
 1018  00001a14  20220001	addi	r2,r1,#1
 1019  00001a18  afc20000	sw	(r30),r2
 1020  00001a1c  8fc20004	lw	r2,4(r30)
 1021  00001a20  20430001	addi	r3,r2,#1
 1022  00001a24  afc30004	sw	4(r30),r3
 1023  00001a28  80420000	lb	r2,(r2)
 1024  00001a2c  a0220000	sb	(r1),r2
 1025  00001a30  a3c2fff3	sb	-13(r30),r2
 1026  00001a34          	L17_LF2:
 1027  00001a34  93c1fff3	lbu	r1,-13(r30)
 1028  00001a38  64220000	snei	r2,r1,#0
 1029  00001a3c  1440000c	bnez	r2,L19_LF2
 1030  00001a40  54000000	nop; delay slot nop
 1031  00001a44  0800000c	j	L16_LF2
 1032  00001a48  54000000	nop; delay slot nop
 1033  00001a4c          	L19_LF2:
 1034  00001a4c  0bffffa0	j	L15_LF2
 1035  00001a50  54000000	nop; delay slot nop
 1036  00001a54          	L16_LF2:
 1037  00001a54  8fc1fff4	lw	r1,-12(r30)
 1038  00001a58  08000004	j	L14_LF2
 1039  00001a5c  54000000	nop; delay slot nop
 1040  00001a60          	L14_LF2:
 1041  00001a60  8fa20000	lw	r2,0(r29)
 1042  00001a64  8fa30004	lw	r3,4(r29)
 1043  00001a68  8fdffff8	lw	r31,-8(r30)
 1044  00001a6c  001ee820	add	r29,r0,r30
 1045  00001a70  8fdefffc	lw	r30,-4(r30)
 1046  00001a74  4be00000	jr	r31
 1047  00001a78  54000000	nop
 1048  00001a7c          	.endproc _dstrncpy
 1049  00001a7c          	.align 2
 1050  00001a7c          	.proc _dstrcat
 1051  00001a7c          	.global _dstrcat
 1052  00001a7c          	_dstrcat:
 1053                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
 1054  00001a7c  afbefffc	sw	-4(r29),r30; push fp
 1055  00001a80  001df020	add	r30,r0,r29; fp = sp
 1056  00001a84  afbffff8	sw	-8(r29),r31; push ret addr
 1057  00001a88  2fbd0018	subui	r29,r29,#24; alloc local storage
 1058  00001a8c  afa20000	sw	0(r29),r2
 1059  00001a90  8fc10000	lw	r1,(r30)
 1060  00001a94  afc1fff4	sw	-12(r30),r1
 1061  00001a98          	L21_LF2:
 1062  00001a98  8fc10000	lw	r1,(r30)
 1063  00001a9c  90220000	lbu	r2,(r1)
 1064  00001aa0  64410000	snei	r1,r2,#0
 1065  00001aa4  1420000c	bnez	r1,L23_LF2
 1066  00001aa8  54000000	nop; delay slot nop
 1067  00001aac  0800001c	j	L22_LF2
 1068  00001ab0  54000000	nop; delay slot nop
 1069  00001ab4          	L23_LF2:
 1070  00001ab4  8fc20000	lw	r2,(r30)
 1071  00001ab8  20410001	addi	r1,r2,#1
 1072  00001abc  00011020	add	r2,r0,r1
 1073  00001ac0  afc20000	sw	(r30),r2
 1074  00001ac4  0bffffd0	j	L21_LF2
 1075  00001ac8  54000000	nop; delay slot nop
 1076  00001acc          	L22_LF2:
 1077  00001acc  23bdfff8	addi	r29,r29,#-8
 1078  00001ad0  001d0820	add	r1,r0,r29
 1079  00001ad4  8fc20000	lw	r2,(r30)
 1080  00001ad8  ac220000	sw	(r1),r2
 1081  00001adc  8fc20004	lw	r2,4(r30)
 1082  00001ae0  ac220004	sw	4(r1),r2
 1083  00001ae4  0ffffe5c	jal	_dstrcpy
 1084  00001ae8  54000000	nop; delay slot nop
 1085  00001aec  23bd0008	addi	r29,r29,#8
 1086  00001af0  8fc1fff4	lw	r1,-12(r30)
 1087  00001af4  08000004	j	L20_LF2
 1088  00001af8  54000000	nop; delay slot nop
 1089  00001afc          	L20_LF2:
 1090  00001afc  8fa20000	lw	r2,0(r29)
 1091  00001b00  8fdffff8	lw	r31,-8(r30)
 1092  00001b04  001ee820	add	r29,r0,r30
 1093  00001b08  8fdefffc	lw	r30,-4(r30)
 1094  00001b0c  4be00000	jr	r31
 1095  00001b10  54000000	nop
 1096  00001b14          	.endproc _dstrcat
 1097  00001b14          	.align 2
 1098  00001b14          	.proc _dstrncmp
 1099  00001b14          	.global _dstrncmp
 1100  00001b14          	_dstrncmp:
 1101                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
 1102  00001b14  afbefffc	sw	-4(r29),r30; push fp
 1103  00001b18  001df020	add	r30,r0,r29; fp = sp
 1104  00001b1c  afbffff8	sw	-8(r29),r31; push ret addr
 1105  00001b20  2fbd0018	subui	r29,r29,#24; alloc local storage
 1106  00001b24  afa20000	sw	0(r29),r2
 1107  00001b28  afa30004	sw	4(r29),r3
 1108  00001b2c  54000000	nop
 1109  00001b30  20010000	addi	r1,r0,#0
 1110  00001b34  afc1fff4	sw	-12(r30),r1
 1111  00001b38          	L25_LF2:
 1112  00001b38  8fc1fff4	lw	r1,-12(r30)
 1113  00001b3c  8fc20008	lw	r2,8(r30)
 1114  00001b40  0022082a	slt	r1,r1,r2
 1115  00001b44  1420000c	bnez	r1,L28_LF2
 1116  00001b48  54000000	nop; delay slot nop
 1117  00001b4c  08000088	j	L26_LF2
 1118  00001b50  54000000	nop; delay slot nop
 1119  00001b54          	L28_LF2:
 1120  00001b54  8fc10004	lw	r1,4(r30)
 1121  00001b58  90220000	lbu	r2,(r1)
 1122  00001b5c  64410000	snei	r1,r2,#0
 1123  00001b60  14200018	bnez	r1,L29_LF2
 1124  00001b64  54000000	nop; delay slot nop
 1125  00001b68  20010000	addi	r1,r0,#0
 1126  00001b6c  080000d8	j	L24_LF2
 1127  00001b70  54000000	nop; delay slot nop
 1128  00001b74  08000028	j	L30_LF2
 1129  00001b78  54000000	nop; delay slot nop
 1130  00001b7c          	L29_LF2:
 1131  00001b7c  8fc10000	lw	r1,(r30)
 1132  00001b80  8fc20004	lw	r2,4(r30)
 1133  00001b84  90210000	lbu	r1,(r1)
 1134  00001b88  90420000	lbu	r2,(r2)
 1135  00001b8c  00220829	sne	r1,r1,r2
 1136  00001b90  1020000c	beqz	r1,L30_LF2
 1137  00001b94  54000000	nop; delay slot nop
 1138  00001b98  0800003c	j	L26_LF2
 1139  00001b9c  54000000	nop; delay slot nop
 1140  00001ba0          	L31_LF2:
 1141  00001ba0          	L30_LF2:
 1142  00001ba0  8fc20000	lw	r2,(r30)
 1143  00001ba4  20410001	addi	r1,r2,#1
 1144  00001ba8  00011020	add	r2,r0,r1
 1145  00001bac  afc20000	sw	(r30),r2
 1146  00001bb0  8fc20004	lw	r2,4(r30)
 1147  00001bb4  20410001	addi	r1,r2,#1
 1148  00001bb8  00011020	add	r2,r0,r1
 1149  00001bbc  afc20004	sw	4(r30),r2
 1150  00001bc0          	L27_LF2:
 1151  00001bc0  8fc2fff4	lw	r2,-12(r30)
 1152  00001bc4  20410001	addi	r1,r2,#1
 1153  00001bc8  00011020	add	r2,r0,r1
 1154  00001bcc  afc2fff4	sw	-12(r30),r2
 1155  00001bd0  0bffff64	j	L25_LF2
 1156  00001bd4  54000000	nop; delay slot nop
 1157  00001bd8          	L26_LF2:
 1158  00001bd8  8fc1fff4	lw	r1,-12(r30)
 1159  00001bdc  8fc20008	lw	r2,8(r30)
 1160  00001be0  00220828	seq	r1,r1,r2
 1161  00001be4  10200018	beqz	r1,L32_LF2
 1162  00001be8  54000000	nop; delay slot nop
 1163  00001bec  20010000	addi	r1,r0,#0
 1164  00001bf0  08000054	j	L24_LF2
 1165  00001bf4  54000000	nop; delay slot nop
 1166  00001bf8  0800004c	j	L33_LF2
 1167  00001bfc  54000000	nop; delay slot nop
 1168  00001c00          	L32_LF2:
 1169  00001c00  8fc20000	lw	r2,(r30)
 1170  00001c04  90410000	lbu	r1,(r2)
 1171  00001c08  8fc20004	lw	r2,4(r30)
 1172  00001c0c  90430000	lbu	r3,(r2)
 1173  00001c10  00230822	sub	r1,r1,r3
 1174  00001c14  74220000	sgei	r2,r1,#0
 1175  00001c18  10400020	beqz	r2,L34_LF2
 1176  00001c1c  54000000	nop; delay slot nop
 1177  00001c20  8fc10000	lw	r1,(r30)
 1178  00001c24  8fc20004	lw	r2,4(r30)
 1179  00001c28  90210000	lbu	r1,(r1)
 1180  00001c2c  90420000	lbu	r2,(r2)
 1181  00001c30  00220829	sne	r1,r1,r2
 1182  00001c34  08000008	j	L35_LF2
 1183  00001c38  54000000	nop; delay slot nop
 1184  00001c3c          	L34_LF2:
 1185  00001c3c  2001ffff	addi	r1,r0,#-1
 1186  00001c40          	L35_LF2:
 1187  00001c40  08000004	j	L24_LF2
 1188  00001c44  54000000	nop; delay slot nop
 1189  00001c48          	L33_LF2:
 1190  00001c48          	L24_LF2:
 1191  00001c48  8fa20000	lw	r2,0(r29)
 1192  00001c4c  8fa30004	lw	r3,4(r29)
 1193  00001c50  8fdffff8	lw	r31,-8(r30)
 1194  00001c54  001ee820	add	r29,r0,r30
 1195  00001c58  8fdefffc	lw	r30,-4(r30)
 1196  00001c5c  4be00000	jr	r31
 1197  00001c60  54000000	nop
 1198  00001c64          	.endproc _dstrncmp
 1199  00001c64          	.align 2
 1200  00001c64          	.proc _dstrlen
 1201  00001c64          	.global _dstrlen
 1202  00001c64          	_dstrlen:
 1203                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
 1204  00001c64  afbefffc	sw	-4(r29),r30; push fp
 1205  00001c68  001df020	add	r30,r0,r29; fp = sp
 1206  00001c6c  afbffff8	sw	-8(r29),r31; push ret addr
 1207  00001c70  2fbd0018	subui	r29,r29,#24; alloc local storage
 1208  00001c74  afa20000	sw	0(r29),r2
 1209  00001c78  20010000	addi	r1,r0,#0
 1210  00001c7c  afc1fff4	sw	-12(r30),r1
 1211  00001c80          	L37_LF2:
 1212  00001c80  8fc10000	lw	r1,(r30)
 1213  00001c84  20220001	addi	r2,r1,#1
 1214  00001c88  afc20000	sw	(r30),r2
 1215  00001c8c  90210000	lbu	r1,(r1)
 1216  00001c90  64220000	snei	r2,r1,#0
 1217  00001c94  1440000c	bnez	r2,L39_LF2
 1218  00001c98  54000000	nop; delay slot nop
 1219  00001c9c  0800001c	j	L38_LF2
 1220  00001ca0  54000000	nop; delay slot nop
 1221  00001ca4          	L39_LF2:
 1222  00001ca4  8fc2fff4	lw	r2,-12(r30)
 1223  00001ca8  20410001	addi	r1,r2,#1
 1224  00001cac  00011020	add	r2,r0,r1
 1225  00001cb0  afc2fff4	sw	-12(r30),r2
 1226  00001cb4  0bffffc8	j	L37_LF2
 1227  00001cb8  54000000	nop; delay slot nop
 1228  00001cbc          	L38_LF2:
 1229  00001cbc  8fc1fff4	lw	r1,-12(r30)
 1230  00001cc0  08000004	j	L36_LF2
 1231  00001cc4  54000000	nop; delay slot nop
 1232  00001cc8          	L36_LF2:
 1233  00001cc8  8fa20000	lw	r2,0(r29)
 1234  00001ccc  8fdffff8	lw	r31,-8(r30)
 1235  00001cd0  001ee820	add	r29,r0,r30
 1236  00001cd4  8fdefffc	lw	r30,-4(r30)
 1237  00001cd8  4be00000	jr	r31
 1238  00001cdc  54000000	nop
 1239  00001ce0          	.endproc _dstrlen
 1240  00001ce0          	.align 2
 1241  00001ce0          	.proc _dstrstr
 1242  00001ce0          	.global _dstrstr
 1243  00001ce0          	_dstrstr:
 1244                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
 1245  00001ce0  afbefffc	sw	-4(r29),r30; push fp
 1246  00001ce4  001df020	add	r30,r0,r29; fp = sp
 1247  00001ce8  afbffff8	sw	-8(r29),r31; push ret addr
 1248  00001cec  2fbd0018	subui	r29,r29,#24; alloc local storage
 1249  00001cf0  afa20000	sw	0(r29),r2
 1250  00001cf4  23bdfff8	addi	r29,r29,#-8
 1251  00001cf8  001d0820	add	r1,r0,r29
 1252  00001cfc  8fc20004	lw	r2,4(r30)
 1253  00001d00  ac220000	sw	(r1),r2
 1254  00001d04  0fffff5c	jal	_dstrlen
 1255  00001d08  54000000	nop; delay slot nop
 1256  00001d0c  23bd0008	addi	r29,r29,#8
 1257  00001d10  afc1fff4	sw	-12(r30),r1
 1258  00001d14          	L41_LF2:
 1259  00001d14  8fc10000	lw	r1,(r30)
 1260  00001d18  90220000	lbu	r2,(r1)
 1261  00001d1c  64410000	snei	r1,r2,#0
 1262  00001d20  1420000c	bnez	r1,L43_LF2
 1263  00001d24  54000000	nop; delay slot nop
 1264  00001d28  08000060	j	L42_LF2
 1265  00001d2c  54000000	nop; delay slot nop
 1266  00001d30          	L43_LF2:
 1267  00001d30  23bdfff0	addi	r29,r29,#-16
 1268  00001d34  001d0820	add	r1,r0,r29
 1269  00001d38  8fc20000	lw	r2,(r30)
 1270  00001d3c  ac220000	sw	(r1),r2
 1271  00001d40  8fc20004	lw	r2,4(r30)
 1272  00001d44  ac220004	sw	4(r1),r2
 1273  00001d48  8fc2fff4	lw	r2,-12(r30)
 1274  00001d4c  ac220008	sw	8(r1),r2
 1275  00001d50  0ffffdc0	jal	_dstrncmp
 1276  00001d54  54000000	nop; delay slot nop
 1277  00001d58  23bd0010	addi	r29,r29,#16
 1278  00001d5c  64220000	snei	r2,r1,#0
 1279  00001d60  14400010	bnez	r2,L44_LF2
 1280  00001d64  54000000	nop; delay slot nop
 1281  00001d68  8fc10000	lw	r1,(r30)
 1282  00001d6c  08000028	j	L40_LF2
 1283  00001d70  54000000	nop; delay slot nop
 1284  00001d74          	L44_LF2:
 1285  00001d74  8fc20000	lw	r2,(r30)
 1286  00001d78  20410001	addi	r1,r2,#1
 1287  00001d7c  00011020	add	r2,r0,r1
 1288  00001d80  afc20000	sw	(r30),r2
 1289  00001d84  0bffff8c	j	L41_LF2
 1290  00001d88  54000000	nop; delay slot nop
 1291  00001d8c          	L42_LF2:
 1292  00001d8c  20010000	addi	r1,r0,#0
 1293  00001d90  08000004	j	L40_LF2
 1294  00001d94  54000000	nop; delay slot nop
 1295  00001d98          	L40_LF2:
 1296  00001d98  8fa20000	lw	r2,0(r29)
 1297  00001d9c  8fdffff8	lw	r31,-8(r30)
 1298  00001da0  001ee820	add	r29,r0,r30
 1299  00001da4  8fdefffc	lw	r30,-4(r30)
 1300  00001da8  4be00000	jr	r31
 1301  00001dac  54000000	nop
 1302  00001db0          	.endproc _dstrstr
 1303  00001db0          	.align 2
 1304  00001db0          	.proc _dmindex
 1305  00001db0          	.global _dmindex
 1306  00001db0          	_dmindex:
 1307                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1308  00001db0  afbefffc	sw	-4(r29),r30; push fp
 1309  00001db4  001df020	add	r30,r0,r29; fp = sp
 1310  00001db8  afbffff8	sw	-8(r29),r31; push ret addr
 1311  00001dbc  2fbd0018	subui	r29,r29,#24; alloc local storage
 1312  00001dc0  afa20000	sw	0(r29),r2
 1313  00001dc4  54000000	nop
 1314  00001dc8          	L46_LF2:
 1315  00001dc8  8fc10000	lw	r1,(r30)
 1316  00001dcc  90220000	lbu	r2,(r1)
 1317  00001dd0  64410000	snei	r1,r2,#0
 1318  00001dd4  1420000c	bnez	r1,L48_LF2
 1319  00001dd8  54000000	nop; delay slot nop
 1320  00001ddc  08000070	j	L47_LF2
 1321  00001de0  54000000	nop; delay slot nop
 1322  00001de4          	L48_LF2:
 1323  00001de4  8fc10004	lw	r1,4(r30)
 1324  00001de8  afc1fff4	sw	-12(r30),r1
 1325  00001dec          	L49_LF2:
 1326  00001dec  8fc1fff4	lw	r1,-12(r30)
 1327  00001df0  90220000	lbu	r2,(r1)
 1328  00001df4  64410000	snei	r1,r2,#0
 1329  00001df8  1420000c	bnez	r1,L52_LF2
 1330  00001dfc  54000000	nop; delay slot nop
 1331  00001e00  08000044	j	L50_LF2
 1332  00001e04  54000000	nop; delay slot nop
 1333  00001e08          	L52_LF2:
 1334  00001e08  8fc10000	lw	r1,(r30)
 1335  00001e0c  8fc2fff4	lw	r2,-12(r30)
 1336  00001e10  90210000	lbu	r1,(r1)
 1337  00001e14  90420000	lbu	r2,(r2)
 1338  00001e18  00220828	seq	r1,r1,r2
 1339  00001e1c  10200010	beqz	r1,L51_LF2
 1340  00001e20  54000000	nop; delay slot nop
 1341  00001e24  8fc10000	lw	r1,(r30)
 1342  00001e28  08000030	j	L45_LF2
 1343  00001e2c  54000000	nop; delay slot nop
 1344  00001e30          	L53_LF2:
 1345  00001e30          	L51_LF2:
 1346  00001e30  8fc2fff4	lw	r2,-12(r30)
 1347  00001e34  20410001	addi	r1,r2,#1
 1348  00001e38  00011020	add	r2,r0,r1
 1349  00001e3c  afc2fff4	sw	-12(r30),r2
 1350  00001e40  0bffffa8	j	L49_LF2
 1351  00001e44  54000000	nop; delay slot nop
 1352  00001e48          	L50_LF2:
 1353  00001e48  0bffff7c	j	L46_LF2
 1354  00001e4c  54000000	nop; delay slot nop
 1355  00001e50          	L47_LF2:
 1356  00001e50  20010000	addi	r1,r0,#0
 1357  00001e54  08000004	j	L45_LF2
 1358  00001e58  54000000	nop; delay slot nop
 1359  00001e5c          	L45_LF2:
 1360  00001e5c  8fa20000	lw	r2,0(r29)
 1361  00001e60  8fdffff8	lw	r31,-8(r30)
 1362  00001e64  001ee820	add	r29,r0,r30
 1363  00001e68  8fdefffc	lw	r30,-4(r30)
 1364  00001e6c  4be00000	jr	r31
 1365  00001e70  54000000	nop
 1366  00001e74          	.endproc _dmindex
 1367  00001e74          	.align 2
 1368  00001e74          	.proc _dindex
 1369  00001e74          	.global _dindex
 1370  00001e74          	_dindex:
 1371                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1372  00001e74  afbefffc	sw	-4(r29),r30; push fp
 1373  00001e78  001df020	add	r30,r0,r29; fp = sp
 1374  00001e7c  afbffff8	sw	-8(r29),r31; push ret addr
 1375  00001e80  2fbd0010	subui	r29,r29,#16; alloc local storage
 1376  00001e84  afa20000	sw	0(r29),r2
 1377  00001e88  54000000	nop
 1378  00001e8c          	L55_LF2:
 1379  00001e8c  8fc10000	lw	r1,(r30)
 1380  00001e90  90220000	lbu	r2,(r1)
 1381  00001e94  64410000	snei	r1,r2,#0
 1382  00001e98  1420000c	bnez	r1,L57_LF2
 1383  00001e9c  54000000	nop; delay slot nop
 1384  00001ea0  08000040	j	L56_LF2
 1385  00001ea4  54000000	nop; delay slot nop
 1386  00001ea8          	L57_LF2:
 1387  00001ea8  8fc10000	lw	r1,(r30)
 1388  00001eac  90220000	lbu	r2,(r1)
 1389  00001eb0  8fc10004	lw	r1,4(r30)
 1390  00001eb4  00411028	seq	r2,r2,r1
 1391  00001eb8  10400010	beqz	r2,L58_LF2
 1392  00001ebc  54000000	nop; delay slot nop
 1393  00001ec0  8fc10000	lw	r1,(r30)
 1394  00001ec4  08000028	j	L54_LF2
 1395  00001ec8  54000000	nop; delay slot nop
 1396  00001ecc          	L58_LF2:
 1397  00001ecc  8fc20000	lw	r2,(r30)
 1398  00001ed0  20410001	addi	r1,r2,#1
 1399  00001ed4  00011020	add	r2,r0,r1
 1400  00001ed8  afc20000	sw	(r30),r2
 1401  00001edc  0bffffac	j	L55_LF2
 1402  00001ee0  54000000	nop; delay slot nop
 1403  00001ee4          	L56_LF2:
 1404  00001ee4  20010000	addi	r1,r0,#0
 1405  00001ee8  08000004	j	L54_LF2
 1406  00001eec  54000000	nop; delay slot nop
 1407  00001ef0          	L54_LF2:
 1408  00001ef0  8fa20000	lw	r2,0(r29)
 1409  00001ef4  8fdffff8	lw	r31,-8(r30)
 1410  00001ef8  001ee820	add	r29,r0,r30
 1411  00001efc  8fdefffc	lw	r30,-4(r30)
 1412  00001f00  4be00000	jr	r31
 1413  00001f04  54000000	nop
 1414  00001f08          	.endproc _dindex
 1415  00001f08          	.align 2
 1416  00001f08          	.proc _ditoa
 1417  00001f08          	.global _ditoa
 1418  00001f08          	_ditoa:
 1419                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1420  00001f08  afbefffc	sw	-4(r29),r30; push fp
 1421  00001f0c  001df020	add	r30,r0,r29; fp = sp
 1422  00001f10  afbffff8	sw	-8(r29),r31; push ret addr
 1423  00001f14  2fbd0018	subui	r29,r29,#24; alloc local storage
 1424  00001f18  afa20000	sw	0(r29),r2
 1425  00001f1c  afa30004	sw	4(r29),r3
 1426  00001f20  8fc10000	lw	r1,(r30)
 1427  00001f24  68220000	slti	r2,r1,#0
 1428  00001f28  1040002c	beqz	r2,L60_LF2
 1429  00001f2c  54000000	nop; delay slot nop
 1430  00001f30  8fc10004	lw	r1,4(r30)
 1431  00001f34  20220001	addi	r2,r1,#1
 1432  00001f38  afc20004	sw	4(r30),r2
 1433  00001f3c  2002002d	addi	r2,r0,(#0x2d)&0xff
 1434  00001f40  a0220000	sb	(r1),r2
 1435  00001f44  8fc10000	lw	r1,(r30)
 1436  00001f48  00011022	sub	r2,r0,r1
 1437  00001f4c  afc20000	sw	(r30),r2
 1438  00001f50  08000118	j	L61_LF2
 1439  00001f54  54000000	nop; delay slot nop
 1440  00001f58          	L60_LF2:
 1441  00001f58  8fc10000	lw	r1,(r30)
 1442  00001f5c  64220000	snei	r2,r1,#0
 1443  00001f60  14400020	bnez	r2,L62_LF2
 1444  00001f64  54000000	nop; delay slot nop
 1445  00001f68  8fc10004	lw	r1,4(r30)
 1446  00001f6c  20220001	addi	r2,r1,#1
 1447  00001f70  afc20004	sw	4(r30),r2
 1448  00001f74  20020030	addi	r2,r0,(#0x30)&0xff
 1449  00001f78  a0220000	sb	(r1),r2
 1450  00001f7c  080000ec	j	L61_LF2
 1451  00001f80  54000000	nop; delay slot nop
 1452  00001f84          	L62_LF2:
 1453  00001f84  20010001	addi	r1,r0,#1
 1454  00001f88  afc1fff4	sw	-12(r30),r1
 1455  00001f8c          	L64_LF2:
 1456  00001f8c  8fc1fff4	lw	r1,-12(r30)
 1457  00001f90  8fc20000	lw	r2,(r30)
 1458  00001f94  0022082c	sle	r1,r1,r2
 1459  00001f98  1420000c	bnez	r1,L66_LF2
 1460  00001f9c  54000000	nop; delay slot nop
 1461  00001fa0  08000024	j	L65_LF2
 1462  00001fa4  54000000	nop; delay slot nop
 1463  00001fa8          	L67_LF2:
 1464  00001fa8          	L66_LF2:
 1465  00001fa8  8fc1fff4	lw	r1,-12(r30)
 1466  00001fac  00011820	add	r3,r0,r1
 1467  00001fb0  50620002	slli	r2,r3,#0x2
 1468  00001fb4  00411020	add	r2,r2,r1
 1469  00001fb8  50410001	slli	r1,r2,#0x1
 1470  00001fbc  afc1fff4	sw	-12(r30),r1
 1471  00001fc0  0bffffc8	j	L64_LF2
 1472  00001fc4  54000000	nop; delay slot nop
 1473  00001fc8          	L65_LF2:
 1474  00001fc8  54000000	nop
 1475  00001fcc          	L68_LF2:
 1476  00001fcc  8fc1fff4	lw	r1,-12(r30)
 1477  00001fd0  2002000a	addi	r2,r0,#10
 1478  00001fd4  00200035	movi2fp	f0,r1
 1479  00001fd8  00400835	movi2fp	f1,r2
 1480  00001fdc  0401000f	div	f0,f0,f1
 1481  00001fe0  00000834	movfp2i	r1,f0
 1482  00001fe4  afc1fff4	sw	-12(r30),r1
 1483  00001fe8  8fc10004	lw	r1,4(r30)
 1484  00001fec  20220001	addi	r2,r1,#1
 1485  00001ff0  afc20004	sw	4(r30),r2
 1486  00001ff4  8fc20000	lw	r2,(r30)
 1487  00001ff8  8fc3fff4	lw	r3,-12(r30)
 1488  00001ffc  00400035	movi2fp	f0,r2
 1489  00002000  00600835	movi2fp	f1,r3
 1490  00002004  0401000f	div	f0,f0,f1
 1491  00002008  00001034	movfp2i	r2,f0
 1492  0000200c  00021820	add	r3,r0,r2
 1493  00002010  20620030	addi	r2,r3,#48
 1494  00002014  a0220000	sb	(r1),r2
 1495  00002018  8fc10000	lw	r1,(r30)
 1496  0000201c  8fc3fff4	lw	r3,-12(r30)
 1497  00002020  00200035	movi2fp	f0,r1
 1498  00002024  00600835	movi2fp	f1,r3
 1499  00002028  0401000f	div	f0,f0,f1
 1500  0000202c  00001034	movfp2i	r2,f0
 1501  00002030  8fc3fff4	lw	r3,-12(r30)
 1502  00002034  00400035	movi2fp	f0,r2
 1503  00002038  00600835	movi2fp	f1,r3
 1504  0000203c  0401000e	mult	f0,f0,f1
 1505  00002040  00001034	movfp2i	r2,f0
 1506  00002044  00220822	sub	r1,r1,r2
 1507  00002048  afc10000	sw	(r30),r1
 1508  0000204c          	L70_LF2:
 1509  0000204c  8fc1fff4	lw	r1,-12(r30)
 1510  00002050  6c220001	sgti	r2,r1,#1
 1511  00002054  1440000c	bnez	r2,L71_LF2
 1512  00002058  54000000	nop; delay slot nop
 1513  0000205c  0800000c	j	L61_LF2
 1514  00002060  54000000	nop; delay slot nop
 1515  00002064          	L71_LF2:
 1516  00002064  0bffff64	j	L68_LF2
 1517  00002068  54000000	nop; delay slot nop
 1518  0000206c          	L69_LF2:
 1519  0000206c          	L63_LF2:
 1520  0000206c          	L61_LF2:
 1521  0000206c  8fc10004	lw	r1,4(r30)
 1522  00002070  20020000	addi	r2,r0,(#0x0)&0xff
 1523  00002074  a0220000	sb	(r1),r2
 1524  00002078          	L59_LF2:
 1525  00002078  8fa20000	lw	r2,0(r29)
 1526  0000207c  8fa30004	lw	r3,4(r29)
 1527  00002080  8fdffff8	lw	r31,-8(r30)
 1528  00002084  001ee820	add	r29,r0,r30
 1529  00002088  8fdefffc	lw	r30,-4(r30)
 1530  0000208c  4be00000	jr	r31
 1531  00002090  54000000	nop
 1532  00002094          	.endproc _ditoa
 1533  00002094          	.align 2
 1534  00002094          	.proc _dstrtol
 1535  00002094          	.global _dstrtol
 1536  00002094          	_dstrtol:
 1537                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1538  00002094  afbefffc	sw	-4(r29),r30; push fp
 1539  00002098  001df020	add	r30,r0,r29; fp = sp
 1540  0000209c  afbffff8	sw	-8(r29),r31; push ret addr
 1541  000020a0  2fbd0020	subui	r29,r29,#32; alloc local storage
 1542  000020a4  afa20000	sw	0(r29),r2
 1543  000020a8  20010000	addi	r1,r0,#0
 1544  000020ac  afc1fff4	sw	-12(r30),r1
 1545  000020b0          	L73_LF2:
 1546  000020b0  8fc10000	lw	r1,(r30)
 1547  000020b4  90220000	lbu	r2,(r1)
 1548  000020b8  60410020	seqi	r1,r2,#32
 1549  000020bc  14200034	bnez	r1,L75_LF2
 1550  000020c0  54000000	nop; delay slot nop
 1551  000020c4  8fc10000	lw	r1,(r30)
 1552  000020c8  90220000	lbu	r2,(r1)
 1553  000020cc  60410009	seqi	r1,r2,#9
 1554  000020d0  14200020	bnez	r1,L75_LF2
 1555  000020d4  54000000	nop; delay slot nop
 1556  000020d8  8fc10000	lw	r1,(r30)
 1557  000020dc  90220000	lbu	r2,(r1)
 1558  000020e0  6041000a	seqi	r1,r2,#10
 1559  000020e4  1420000c	bnez	r1,L75_LF2
 1560  000020e8  54000000	nop; delay slot nop
 1561  000020ec  0800001c	j	L74_LF2
 1562  000020f0  54000000	nop; delay slot nop
 1563  000020f4          	L75_LF2:
 1564  000020f4  8fc20000	lw	r2,(r30)
 1565  000020f8  20410001	addi	r1,r2,#1
 1566  000020fc  00011020	add	r2,r0,r1
 1567  00002100  afc20000	sw	(r30),r2
 1568  00002104  0bffffa8	j	L73_LF2
 1569  00002108  54000000	nop; delay slot nop
 1570  0000210c          	L74_LF2:
 1571  0000210c  8fc10004	lw	r1,4(r30)
 1572  00002110  64220000	snei	r2,r1,#0
 1573  00002114  10400010	beqz	r2,L76_LF2
 1574  00002118  54000000	nop; delay slot nop
 1575  0000211c  8fc10004	lw	r1,4(r30)
 1576  00002120  8fc20000	lw	r2,(r30)
 1577  00002124  ac220000	sw	(r1),r2
 1578  00002128          	L76_LF2:
 1579  00002128  8fc10000	lw	r1,(r30)
 1580  0000212c  90220000	lbu	r2,(r1)
 1581  00002130  64410000	snei	r1,r2,#0
 1582  00002134  14200010	bnez	r1,L77_LF2
 1583  00002138  54000000	nop; delay slot nop
 1584  0000213c  8fc1fff4	lw	r1,-12(r30)
 1585  00002140  08000294	j	L72_LF2
 1586  00002144  54000000	nop; delay slot nop
 1587  00002148          	L77_LF2:
 1588  00002148  8fc10000	lw	r1,(r30)
 1589  0000214c  90220000	lbu	r2,(r1)
 1590  00002150  6041002d	seqi	r1,r2,#45
 1591  00002154  10200024	beqz	r1,L78_LF2
 1592  00002158  54000000	nop; delay slot nop
 1593  0000215c  2001ffff	addi	r1,r0,#-1
 1594  00002160  afc1ffec	sw	-20(r30),r1
 1595  00002164  8fc20000	lw	r2,(r30)
 1596  00002168  20410001	addi	r1,r2,#1
 1597  0000216c  00011020	add	r2,r0,r1
 1598  00002170  afc20000	sw	(r30),r2
 1599  00002174  0800000c	j	L79_LF2
 1600  00002178  54000000	nop; delay slot nop
 1601  0000217c          	L78_LF2:
 1602  0000217c  20010001	addi	r1,r0,#1
 1603  00002180  afc1ffec	sw	-20(r30),r1
 1604  00002184          	L79_LF2:
 1605  00002184  8fc10008	lw	r1,8(r30)
 1606  00002188  64220000	snei	r2,r1,#0
 1607  0000218c  14400090	bnez	r2,L80_LF2
 1608  00002190  54000000	nop; delay slot nop
 1609  00002194  8fc10000	lw	r1,(r30)
 1610  00002198  90220000	lbu	r2,(r1)
 1611  0000219c  60410030	seqi	r1,r2,#48
 1612  000021a0  10200074	beqz	r1,L81_LF2
 1613  000021a4  54000000	nop; delay slot nop
 1614  000021a8  8fc20000	lw	r2,(r30)
 1615  000021ac  20410001	addi	r1,r2,#1
 1616  000021b0  00011020	add	r2,r0,r1
 1617  000021b4  afc20000	sw	(r30),r2
 1618  000021b8  8fc10000	lw	r1,(r30)
 1619  000021bc  90220000	lbu	r2,(r1)
 1620  000021c0  60410078	seqi	r1,r2,#120
 1621  000021c4  14200020	bnez	r1,L83_LF2
 1622  000021c8  54000000	nop; delay slot nop
 1623  000021cc  8fc10000	lw	r1,(r30)
 1624  000021d0  90220000	lbu	r2,(r1)
 1625  000021d4  60410058	seqi	r1,r2,#88
 1626  000021d8  1420000c	bnez	r1,L83_LF2
 1627  000021dc  54000000	nop; delay slot nop
 1628  000021e0  08000024	j	L82_LF2
 1629  000021e4  54000000	nop; delay slot nop
 1630  000021e8          	L83_LF2:
 1631  000021e8  20010010	addi	r1,r0,#16
 1632  000021ec  afc10008	sw	8(r30),r1
 1633  000021f0  8fc20000	lw	r2,(r30)
 1634  000021f4  20410001	addi	r1,r2,#1
 1635  000021f8  00011020	add	r2,r0,r1
 1636  000021fc  afc20000	sw	(r30),r2
 1637  00002200  0800000c	j	L84_LF2
 1638  00002204  54000000	nop; delay slot nop
 1639  00002208          	L82_LF2:
 1640  00002208  20010008	addi	r1,r0,#8
 1641  0000220c  afc10008	sw	8(r30),r1
 1642  00002210          	L84_LF2:
 1643  00002210  0800000c	j	L80_LF2
 1644  00002214  54000000	nop; delay slot nop
 1645  00002218          	L81_LF2:
 1646  00002218  2001000a	addi	r1,r0,#10
 1647  0000221c  afc10008	sw	8(r30),r1
 1648  00002220          	L85_LF2:
 1649  00002220          	L80_LF2:
 1650  00002220  8fc10008	lw	r1,8(r30)
 1651  00002224  70220000	slei	r2,r1,#0
 1652  00002228  1440001c	bnez	r2,L87_LF2
 1653  0000222c  54000000	nop; delay slot nop
 1654  00002230  8fc10008	lw	r1,8(r30)
 1655  00002234  6c220010	sgti	r2,r1,#16
 1656  00002238  1440000c	bnez	r2,L87_LF2
 1657  0000223c  54000000	nop; delay slot nop
 1658  00002240  08000010	j	L86_LF2
 1659  00002244  54000000	nop; delay slot nop
 1660  00002248          	L87_LF2:
 1661  00002248  8fc1fff4	lw	r1,-12(r30)
 1662  0000224c  08000188	j	L72_LF2
 1663  00002250  54000000	nop; delay slot nop
 1664  00002254          	L86_LF2:
 1665  00002254  54000000	nop
 1666  00002258          	L88_LF2:
 1667  00002258  8fc10000	lw	r1,(r30)
 1668  0000225c  90220000	lbu	r2,(r1)
 1669  00002260  6c41002f	sgtui	r1,r2,#47
 1670  00002264  10200030	beqz	r1,L91_LF2
 1671  00002268  54000000	nop; delay slot nop
 1672  0000226c  8fc10000	lw	r1,(r30)
 1673  00002270  90220000	lbu	r2,(r1)
 1674  00002274  70410039	sleui	r1,r2,#57
 1675  00002278  1020001c	beqz	r1,L91_LF2
 1676  0000227c  54000000	nop; delay slot nop
 1677  00002280  8fc10000	lw	r1,(r30)
 1678  00002284  90220000	lbu	r2,(r1)
 1679  00002288  2041ffd0	addi	r1,r2,#-48
 1680  0000228c  afc1fff0	sw	-16(r30),r1
 1681  00002290  0800008c	j	L92_LF2
 1682  00002294  54000000	nop; delay slot nop
 1683  00002298          	L91_LF2:
 1684  00002298  8fc10000	lw	r1,(r30)
 1685  0000229c  90220000	lbu	r2,(r1)
 1686  000022a0  6c410060	sgtui	r1,r2,#96
 1687  000022a4  10200030	beqz	r1,L93_LF2
 1688  000022a8  54000000	nop; delay slot nop
 1689  000022ac  8fc10000	lw	r1,(r30)
 1690  000022b0  90220000	lbu	r2,(r1)
 1691  000022b4  7041007a	sleui	r1,r2,#122
 1692  000022b8  1020001c	beqz	r1,L93_LF2
 1693  000022bc  54000000	nop; delay slot nop
 1694  000022c0  8fc10000	lw	r1,(r30)
 1695  000022c4  90220000	lbu	r2,(r1)
 1696  000022c8  2041ffa9	addi	r1,r2,#-87
 1697  000022cc  afc1fff0	sw	-16(r30),r1
 1698  000022d0  0800004c	j	L92_LF2
 1699  000022d4  54000000	nop; delay slot nop
 1700  000022d8          	L93_LF2:
 1701  000022d8  8fc10000	lw	r1,(r30)
 1702  000022dc  90220000	lbu	r2,(r1)
 1703  000022e0  6c410040	sgtui	r1,r2,#64
 1704  000022e4  10200030	beqz	r1,L95_LF2
 1705  000022e8  54000000	nop; delay slot nop
 1706  000022ec  8fc10000	lw	r1,(r30)
 1707  000022f0  90220000	lbu	r2,(r1)
 1708  000022f4  7041005a	sleui	r1,r2,#90
 1709  000022f8  1020001c	beqz	r1,L95_LF2
 1710  000022fc  54000000	nop; delay slot nop
 1711  00002300  8fc10000	lw	r1,(r30)
 1712  00002304  90220000	lbu	r2,(r1)
 1713  00002308  2041ffc9	addi	r1,r2,#-55
 1714  0000230c  afc1fff0	sw	-16(r30),r1
 1715  00002310  0800000c	j	L92_LF2
 1716  00002314  54000000	nop; delay slot nop
 1717  00002318          	L95_LF2:
 1718  00002318  200103e8	addi	r1,r0,#1000
 1719  0000231c  afc1fff0	sw	-16(r30),r1
 1720  00002320          	L96_LF2:
 1721  00002320          	L94_LF2:
 1722  00002320          	L92_LF2:
 1723  00002320  8fc1fff0	lw	r1,-16(r30)
 1724  00002324  8fc20008	lw	r2,8(r30)
 1725  00002328  0022082a	slt	r1,r1,r2
 1726  0000232c  10200040	beqz	r1,L90_LF2
 1727  00002330  54000000	nop; delay slot nop
 1728  00002334  8fc1fff4	lw	r1,-12(r30)
 1729  00002338  8fc20008	lw	r2,8(r30)
 1730  0000233c  00200035	movi2fp	f0,r1
 1731  00002340  00400835	movi2fp	f1,r2
 1732  00002344  0401000e	mult	f0,f0,f1
 1733  00002348  00000834	movfp2i	r1,f0
 1734  0000234c  afc1fff4	sw	-12(r30),r1
 1735  00002350  8fc1fff4	lw	r1,-12(r30)
 1736  00002354  8fc2fff0	lw	r2,-16(r30)
 1737  00002358  00220820	add	r1,r1,r2
 1738  0000235c  afc1fff4	sw	-12(r30),r1
 1739  00002360  8fc20000	lw	r2,(r30)
 1740  00002364  20410001	addi	r1,r2,#1
 1741  00002368  00011020	add	r2,r0,r1
 1742  0000236c  afc20000	sw	(r30),r2
 1743  00002370          	L97_LF2:
 1744  00002370          	L90_LF2:
 1745  00002370  8fc1fff0	lw	r1,-16(r30)
 1746  00002374  8fc20008	lw	r2,8(r30)
 1747  00002378  0022082a	slt	r1,r1,r2
 1748  0000237c  1420000c	bnez	r1,L98_LF2
 1749  00002380  54000000	nop; delay slot nop
 1750  00002384  0800000c	j	L89_LF2
 1751  00002388  54000000	nop; delay slot nop
 1752  0000238c          	L98_LF2:
 1753  0000238c  0bfffec8	j	L88_LF2
 1754  00002390  54000000	nop; delay slot nop
 1755  00002394          	L89_LF2:
 1756  00002394  8fc10004	lw	r1,4(r30)
 1757  00002398  64220000	snei	r2,r1,#0
 1758  0000239c  10400010	beqz	r2,L99_LF2
 1759  000023a0  54000000	nop; delay slot nop
 1760  000023a4  8fc10004	lw	r1,4(r30)
 1761  000023a8  8fc20000	lw	r2,(r30)
 1762  000023ac  ac220000	sw	(r1),r2
 1763  000023b0          	L99_LF2:
 1764  000023b0  8fc1fff4	lw	r1,-12(r30)
 1765  000023b4  8fc2ffec	lw	r2,-20(r30)
 1766  000023b8  00200035	movi2fp	f0,r1
 1767  000023bc  00400835	movi2fp	f1,r2
 1768  000023c0  0401000e	mult	f0,f0,f1
 1769  000023c4  00000834	movfp2i	r1,f0
 1770  000023c8  afc1fff4	sw	-12(r30),r1
 1771  000023cc  8fc1fff4	lw	r1,-12(r30)
 1772  000023d0  08000004	j	L72_LF2
 1773  000023d4  54000000	nop; delay slot nop
 1774  000023d8          	L72_LF2:
 1775  000023d8  8fa20000	lw	r2,0(r29)
 1776  000023dc  8fdffff8	lw	r31,-8(r30)
 1777  000023e0  001ee820	add	r29,r0,r30
 1778  000023e4  8fdefffc	lw	r30,-4(r30)
 1779  000023e8  4be00000	jr	r31
 1780  000023ec  54000000	nop
 1781  000023f0          	.endproc _dstrtol
 1782  000023f0          	.align 2
 1783  000023f0          	.proc _bcopy
 1784  000023f0          	.global _bcopy
 1785  000023f0          	_bcopy:
 1786                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1787  000023f0  afbefffc	sw	-4(r29),r30; push fp
 1788  000023f4  001df020	add	r30,r0,r29; fp = sp
 1789  000023f8  afbffff8	sw	-8(r29),r31; push ret addr
 1790  000023fc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1791  00002400  afa20000	sw	0(r29),r2
 1792  00002404  afa30004	sw	4(r29),r3
 1793  00002408  54000000	nop
 1794  0000240c          	L101_LF2:
 1795  0000240c  8fc10008	lw	r1,8(r30)
 1796  00002410  2022ffff	addi	r2,r1,#-1
 1797  00002414  afc20008	sw	8(r30),r2
 1798  00002418  6c210000	sgti	r1,r1,#0
 1799  0000241c  1420000c	bnez	r1,L103_LF2
 1800  00002420  54000000	nop; delay slot nop
 1801  00002424  0800002c	j	L102_LF2
 1802  00002428  54000000	nop; delay slot nop
 1803  0000242c          	L103_LF2:
 1804  0000242c  8fc10004	lw	r1,4(r30)
 1805  00002430  20220001	addi	r2,r1,#1
 1806  00002434  afc20004	sw	4(r30),r2
 1807  00002438  8fc20000	lw	r2,(r30)
 1808  0000243c  20430001	addi	r3,r2,#1
 1809  00002440  afc30000	sw	(r30),r3
 1810  00002444  80420000	lb	r2,(r2)
 1811  00002448  a0220000	sb	(r1),r2
 1812  0000244c  0bffffbc	j	L101_LF2
 1813  00002450  54000000	nop; delay slot nop
 1814  00002454          	L102_LF2:
 1815  00002454          	L100_LF2:
 1816  00002454  8fa20000	lw	r2,0(r29)
 1817  00002458  8fa30004	lw	r3,4(r29)
 1818  0000245c  8fdffff8	lw	r31,-8(r30)
 1819  00002460  001ee820	add	r29,r0,r30
 1820  00002464  8fdefffc	lw	r30,-4(r30)
 1821  00002468  4be00000	jr	r31
 1822  0000246c  54000000	nop
 1823  00002470          	.endproc _bcopy
 1824  00002470          	.align 2
 1825  00002470          	.proc _bzero
 1826  00002470          	.global _bzero
 1827  00002470          	_bzero:
 1828                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1829  00002470  afbefffc	sw	-4(r29),r30; push fp
 1830  00002474  001df020	add	r30,r0,r29; fp = sp
 1831  00002478  afbffff8	sw	-8(r29),r31; push ret addr
 1832  0000247c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1833  00002480  afa20000	sw	0(r29),r2
 1834  00002484  54000000	nop
 1835  00002488          	L105_LF2:
 1836  00002488  8fc10004	lw	r1,4(r30)
 1837  0000248c  2022ffff	addi	r2,r1,#-1
 1838  00002490  afc20004	sw	4(r30),r2
 1839  00002494  6c210000	sgti	r1,r1,#0
 1840  00002498  1420000c	bnez	r1,L107_LF2
 1841  0000249c  54000000	nop; delay slot nop
 1842  000024a0  08000020	j	L106_LF2
 1843  000024a4  54000000	nop; delay slot nop
 1844  000024a8          	L107_LF2:
 1845  000024a8  8fc10000	lw	r1,(r30)
 1846  000024ac  20220001	addi	r2,r1,#1
 1847  000024b0  afc20000	sw	(r30),r2
 1848  000024b4  20020000	addi	r2,r0,(#0x0)&0xff
 1849  000024b8  a0220000	sb	(r1),r2
 1850  000024bc  0bffffc8	j	L105_LF2
 1851  000024c0  54000000	nop; delay slot nop
 1852  000024c4          	L106_LF2:
 1853  000024c4          	L104_LF2:
 1854  000024c4  8fa20000	lw	r2,0(r29)
 1855  000024c8  8fdffff8	lw	r31,-8(r30)
 1856  000024cc  001ee820	add	r29,r0,r30
 1857  000024d0  8fdefffc	lw	r30,-4(r30)
 1858  000024d4  4be00000	jr	r31
 1859  000024d8  54000000	nop
 1860  000024dc          	.endproc _bzero
 1861  000024dc          	.align 2
 1862  000024dc          	.proc _min
 1863  000024dc          	.global _min
 1864  000024dc          	_min:
 1865                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1866  000024dc  afbefffc	sw	-4(r29),r30; push fp
 1867  000024e0  001df020	add	r30,r0,r29; fp = sp
 1868  000024e4  afbffff8	sw	-8(r29),r31; push ret addr
 1869  000024e8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1870  000024ec  afa20000	sw	0(r29),r2
 1871  000024f0  afa30004	sw	4(r29),r3
 1872  000024f4  8fc10000	lw	r1,(r30)
 1873  000024f8  8fc20004	lw	r2,4(r30)
 1874  000024fc  0022182c	sle	r3,r1,r2
 1875  00002500  14600008	bnez	r3,L109_LF2
 1876  00002504  54000000	nop; delay slot nop
 1877  00002508  8fc10004	lw	r1,4(r30)
 1878  0000250c          	L109_LF2:
 1879  0000250c  08000004	j	L108_LF2
 1880  00002510  54000000	nop; delay slot nop
 1881  00002514          	L108_LF2:
 1882  00002514  8fa20000	lw	r2,0(r29)
 1883  00002518  8fa30004	lw	r3,4(r29)
 1884  0000251c  8fdffff8	lw	r31,-8(r30)
 1885  00002520  001ee820	add	r29,r0,r30
 1886  00002524  8fdefffc	lw	r30,-4(r30)
 1887  00002528  4be00000	jr	r31
 1888  0000252c  54000000	nop
 1889  00002530          	.endproc _min
 1890  00002530          	.align 2
 1891  00002530          	.proc _max
 1892  00002530          	.global _max
 1893  00002530          	_max:
 1894                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1895  00002530  afbefffc	sw	-4(r29),r30; push fp
 1896  00002534  001df020	add	r30,r0,r29; fp = sp
 1897  00002538  afbffff8	sw	-8(r29),r31; push ret addr
 1898  0000253c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1899  00002540  afa20000	sw	0(r29),r2
 1900  00002544  afa30004	sw	4(r29),r3
 1901  00002548  8fc10000	lw	r1,(r30)
 1902  0000254c  8fc20004	lw	r2,4(r30)
 1903  00002550  0022182d	sge	r3,r1,r2
 1904  00002554  14600008	bnez	r3,L111_LF2
 1905  00002558  54000000	nop; delay slot nop
 1906  0000255c  8fc10004	lw	r1,4(r30)
 1907  00002560          	L111_LF2:
 1908  00002560  08000004	j	L110_LF2
 1909  00002564  54000000	nop; delay slot nop
 1910  00002568          	L110_LF2:
 1911  00002568  8fa20000	lw	r2,0(r29)
 1912  0000256c  8fa30004	lw	r3,4(r29)
 1913  00002570  8fdffff8	lw	r31,-8(r30)
 1914  00002574  001ee820	add	r29,r0,r30
 1915  00002578  8fdefffc	lw	r30,-4(r30)
 1916  0000257c  4be00000	jr	r31
 1917  00002580  54000000	nop
 1918  00002584          	.endproc _max
 1919                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1920                      ;;;
 1921                      ;;; Most of the traps are called in files from libtraps.
 1924  00002584          	.align 2
 1925  00002584          	.proc _exit
 1926  00002584          	.global _exit
 1927  00002584          	_exit:
 1928  00002584  44000300	trap	#0x300
 1929  00002588  4be00000	jr	r31
 1930  0000258c  54000000	nop
 1931  00002590          	.endproc _exit
 1933                      ; for the benefit of gcc.
 1934  00002590          	.proc ___main
 1935  00002590          	.global ___main
 1936  00002590          	___main:
 1937  00002590  4be00000	jr	r31
 1938  00002594  54000000	nop
 1939  00002598          	.endproc ___main
 1940  00002598          	.text
 1941  00002598          	.global _etext
 1942  00002598          	_etext:
 1943  00002598          	.align 3
 1944  00002598          	.data
 1945  0000c1a8          	.global _edata
 1946  0000c1a8          	_edata:
