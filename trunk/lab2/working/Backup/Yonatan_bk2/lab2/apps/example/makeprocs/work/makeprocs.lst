 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 490
    4                      ; Text size: 4616
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <number of hello world processes to create>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c6e	
   82  0000300c  756d6265	
   82  00003010  72206f66	
   82  00003014  2068656c	
   82  00003018  6c6f2077	
   82  0000301c  6f726c64	
   82  00003020  2070726f	
   82  00003024  63657373	
   82  00003028  65732074	
   82  0000302c  6f206372	
   82  00003030  65617465	
   82  00003034  3e0a00  	
   83  00003037          	.align 2
   84  00003038          	LC1_LF0:
   85  00003038  6d616b65	.ascii "makeprocs (%d): Creating %d hello_world processes\n\000"
   85  0000303c  70726f63	
   85  00003040  73202825	
   85  00003044  64293a20	
   85  00003048  43726561	
   85  0000304c  74696e67	
   85  00003050  20256420	
   85  00003054  68656c6c	
   85  00003058  6f5f776f	
   85  0000305c  726c6420	
   85  00003060  70726f63	
   85  00003064  65737365	
   85  00003068  730a00  	
   86  0000306b          	.align 2
   87  0000306c          	LC2_LF0:
   88  0000306c  6d616b65	.ascii "makeprocs (%d): Bad sem_create\n\000"
   88  00003070  70726f63	
   88  00003074  73202825	
   88  00003078  64293a20	
   88  0000307c  42616420	
   88  00003080  73656d5f	
   88  00003084  63726561	
   88  00003088  74650a00	
   89  0000308c          	.align 2
   90  0000308c          	LC3_LF0:
   91  0000308c  2d2d2d2d	.ascii "----------------------------------------------------------------------"
   91  00003090  2d2d2d2d	
   91  00003094  2d2d2d2d	
   91  00003098  2d2d2d2d	
   91  0000309c  2d2d2d2d	
   91  000030a0  2d2d2d2d	
   91  000030a4  2d2d2d2d	
   91  000030a8  2d2d2d2d	
   91  000030ac  2d2d2d2d	
   91  000030b0  2d2d2d2d	
   91  000030b4  2d2d2d2d	
   91  000030b8  2d2d2d2d	
   91  000030bc  2d2d2d2d	
   91  000030c0  2d2d2d2d	
   91  000030c4  2d2d2d2d	
   91  000030c8  2d2d2d2d	
   91  000030cc  2d2d2d2d	
   91  000030d0  2d2d    	
   92  000030d2  2d2d2d2d	.ascii "---------------\n\000"
   92  000030d6  2d2d2d2d	
   92  000030da  2d2d2d2d	
   92  000030de  2d2d2d0a	
   92  000030e2  00      	
   93  000030e3          	.align 2
   94  000030e4          	LC4_LF0:
   95  000030e4  6d616b65	.ascii "makeprocs (%d): Creating %d hello world\'s in a row, but only one runs"
   95  000030e8  70726f63	
   95  000030ec  73202825	
   95  000030f0  64293a20	
   95  000030f4  43726561	
   95  000030f8  74696e67	
   95  000030fc  20256420	
   95  00003100  68656c6c	
   95  00003104  6f20776f	
   95  00003108  726c6427	
   95  0000310c  7320696e	
   95  00003110  20612072	
   95  00003114  6f772c20	
   95  00003118  62757420	
   95  0000311c  6f6e6c79	
   95  00003120  206f6e65	
   95  00003124  2072756e	
   95  00003128  73      	
   96  00003129  20617420	.ascii " at a time\n\000"
   96  0000312d  61207469	
   96  00003131  6d650a00	
   97  00003135          	.align 2
   98  00003138          	LC5_LF0:
   99  00003138  6d616b65	.ascii "makeprocs (%d): Creating hello world #%d\n\000"
   99  0000313c  70726f63	
   99  00003140  73202825	
   99  00003144  64293a20	
   99  00003148  43726561	
   99  0000314c  74696e67	
   99  00003150  2068656c	
   99  00003154  6c6f2077	
   99  00003158  6f726c64	
   99  0000315c  20232564	
   99  00003160  0a00    	
  100  00003162          	.align 2
  101  00003164          	LC6_LF0:
  102  00003164  68656c6c	.ascii "hello_world.dlx.obj\000"
  102  00003168  6f5f776f	
  102  0000316c  726c642e	
  102  00003170  646c782e	
  102  00003174  6f626a00	
  103  00003178          	.align 2
  104  00003178          	LC7_LF0:
  105  00003178  42616420	.ascii "Bad semaphore s_procs_completed (%d) in %s\n\000"
  105  0000317c  73656d61	
  105  00003180  70686f72	
  105  00003184  6520735f	
  105  00003188  70726f63	
  105  0000318c  735f636f	
  105  00003190  6d706c65	
  105  00003194  74656420	
  105  00003198  28256429	
  105  0000319c  20696e20	
  105  000031a0  25730a00	
  106  000031a4          	.align 2
  107  000031a4          	LC8_LF0:
  108  000031a4  6d616b65	.ascii "makeprocs (%d): All other processes completed, exiting main process.\n"
  108  000031a8  70726f63	
  108  000031ac  73202825	
  108  000031b0  64293a20	
  108  000031b4  416c6c20	
  108  000031b8  6f746865	
  108  000031bc  72207072	
  108  000031c0  6f636573	
  108  000031c4  73657320	
  108  000031c8  636f6d70	
  108  000031cc  6c657465	
  108  000031d0  642c2065	
  108  000031d4  78697469	
  108  000031d8  6e67206d	
  108  000031dc  61696e20	
  108  000031e0  70726f63	
  108  000031e4  6573732e	
  108  000031e8  0a      	
  109  000031e9  00      	.ascii "\000"
  110  000031ea          	.text
  111  000010d4          	.align 2
  112  000010d4          	.proc _main
  113  000010d4          	.global _main
  114  000010d4          	_main:
  115                      ;  Function 'main'; 16 bytes of locals, 0 regs to save.
  116  000010d4  afbefffc	sw	-4(r29),r30; push fp
  117  000010d8  001df020	add	r30,r0,r29; fp = sp
  118  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  119  000010e0  2fbd0018	subui	r29,r29,#24; alloc local storage
  120  000010e4  8fc20000	lw	r2,(r30)
  121  000010e8  8fc50004	lw	r5,4(r30)
  122  000010ec  0c001110	jal	___main
  123  000010f0  54000000	nop; not filled.
  124  000010f4  64410001	snei	r1,r2,#1
  125  000010f8  10200030	beqz	r1,L14_LF0
  126  000010fc  54000000	nop; not filled.
  127  00001100  23bdfff8	addi	r29,r29,#-8
  128  00001104  3c070000	lhi	r7,((LC0_LF0)>>16)&0xffff
  129  00001108  24e73000	addui	r7,r7,(LC0_LF0)&0xffff
  130  0000110c  afa70000	sw	(r29),r7
  131  00001110  8ca10000	lw	r1,(r5)
  132  00001114  afa10004	sw	4(r29),r1
  133  00001118  0c000224	jal	_Printf
  134  0000111c  54000000	nop; not filled.
  135  00001120  0c000324	jal	_Exit
  136  00001124  54000000	nop; not filled.
  137  00001128  23bd0008	addi	r29,r29,#8
  138  0000112c          	L14_LF0:
  139  0000112c  2006001e	addi	r6,r0,#30
  140  00001130  0c000218	jal	_getpid
  141  00001134  54000000	nop; not filled.
  142  00001138  23bdfff0	addi	r29,r29,#-16
  143  0000113c  3c070000	lhi	r7,((LC1_LF0)>>16)&0xffff
  144  00001140  24e73038	addui	r7,r7,(LC1_LF0)&0xffff
  145  00001144  afa70000	sw	(r29),r7
  146  00001148  afa10004	sw	4(r29),r1
  147  0000114c  2007001e	addi	r7,r0,#30
  148  00001150  afa70008	sw	8(r29),r7
  149  00001154  0c0001e8	jal	_Printf
  150  00001158  54000000	nop; not filled.
  151  0000115c  20070000	addi	r7,r0,#0
  152  00001160  afa70000	sw	(r29),r7
  153  00001164  0c000214	jal	_sem_create
  154  00001168  54000000	nop; not filled.
  155  0000116c  00012020	add	r4,r0,r1
  156  00001170  23bd0010	addi	r29,r29,#16
  157  00001174  6081ffff	seqi	r1,r4,#-1
  158  00001178  10200034	beqz	r1,L15_LF0
  159  0000117c  54000000	nop; not filled.
  160  00001180  0c0001c8	jal	_getpid
  161  00001184  54000000	nop; not filled.
  162  00001188  23bdfff8	addi	r29,r29,#-8
  163  0000118c  3c070000	lhi	r7,((LC2_LF0)>>16)&0xffff
  164  00001190  24e7306c	addui	r7,r7,(LC2_LF0)&0xffff
  165  00001194  afa70000	sw	(r29),r7
  166  00001198  afa10004	sw	4(r29),r1
  167  0000119c  0c0001a0	jal	_Printf
  168  000011a0  54000000	nop; not filled.
  169  000011a4  0c0002a0	jal	_Exit
  170  000011a8  54000000	nop; not filled.
  171  000011ac  23bd0008	addi	r29,r29,#8
  172  000011b0          	L15_LF0:
  173  000011b0  23bdfff8	addi	r29,r29,#-8
  174  000011b4  afa40000	sw	(r29),r4
  175  000011b8  23c2ffe8	addi	r2,r30,#-24
  176  000011bc  afa20004	sw	4(r29),r2
  177  000011c0  0c0009b4	jal	_ditoa
  178  000011c4  54000000	nop; not filled.
  179  000011c8  3c070000	lhi	r7,((LC3_LF0)>>16)&0xffff
  180  000011cc  24e7308c	addui	r7,r7,(LC3_LF0)&0xffff
  181  000011d0  afa70000	sw	(r29),r7
  182  000011d4  0c000168	jal	_Printf
  183  000011d8  54000000	nop; not filled.
  184  000011dc  0c00016c	jal	_getpid
  185  000011e0  54000000	nop; not filled.
  186  000011e4  23bdfff8	addi	r29,r29,#-8
  187  000011e8  3c070000	lhi	r7,((LC4_LF0)>>16)&0xffff
  188  000011ec  24e730e4	addui	r7,r7,(LC4_LF0)&0xffff
  189  000011f0  afa70000	sw	(r29),r7
  190  000011f4  afa10004	sw	4(r29),r1
  191  000011f8  2007001e	addi	r7,r0,#30
  192  000011fc  afa70008	sw	8(r29),r7
  193  00001200  0c00013c	jal	_Printf
  194  00001204  54000000	nop; not filled.
  195  00001208  20030000	addi	r3,r0,#0
  196  0000120c  23bd0010	addi	r29,r29,#16
  197  00001210          	L19_LF0:
  198  00001210  0c000138	jal	_getpid
  199  00001214  54000000	nop; not filled.
  200  00001218  23bdfff0	addi	r29,r29,#-16
  201  0000121c  3c070000	lhi	r7,((LC5_LF0)>>16)&0xffff
  202  00001220  24e73138	addui	r7,r7,(LC5_LF0)&0xffff
  203  00001224  afa70000	sw	(r29),r7
  204  00001228  afa10004	sw	4(r29),r1
  205  0000122c  afa30008	sw	8(r29),r3
  206  00001230  0c00010c	jal	_Printf
  207  00001234  54000000	nop; not filled.
  208  00001238  3c070000	lhi	r7,((LC6_LF0)>>16)&0xffff
  209  0000123c  24e73164	addui	r7,r7,(LC6_LF0)&0xffff
  210  00001240  afa70000	sw	(r29),r7
  211  00001244  afa20004	sw	4(r29),r2
  212  00001248  20070000	addi	r7,r0,#0
  213  0000124c  afa70008	sw	8(r29),r7
  214  00001250  0c000104	jal	_process_create
  215  00001254  54000000	nop; not filled.
  216  00001258  afa40000	sw	(r29),r4
  217  0000125c  0c000128	jal	_sem_wait
  218  00001260  54000000	nop; not filled.
  219  00001264  23bd0010	addi	r29,r29,#16
  220  00001268  64210001	snei	r1,r1,#1
  221  0000126c  10200034	beqz	r1,L18_LF0
  222  00001270  54000000	nop; not filled.
  223  00001274  23bdfff0	addi	r29,r29,#-16
  224  00001278  3c070000	lhi	r7,((LC7_LF0)>>16)&0xffff
  225  0000127c  24e73178	addui	r7,r7,(LC7_LF0)&0xffff
  226  00001280  afa70000	sw	(r29),r7
  227  00001284  afa40004	sw	4(r29),r4
  228  00001288  8ca70000	lw	r7,(r5)
  229  0000128c  afa70008	sw	8(r29),r7
  230  00001290  0c0000ac	jal	_Printf
  231  00001294  54000000	nop; not filled.
  232  00001298  0c0001ac	jal	_Exit
  233  0000129c  54000000	nop; not filled.
  234  000012a0  23bd0010	addi	r29,r29,#16
  235  000012a4          	L18_LF0:
  236  000012a4  20630001	addi	r3,r3,#1
  237  000012a8  0066082a	slt	r1,r3,r6
  238  000012ac  1420ff60	bnez	r1,L19_LF0
  239  000012b0  54000000	nop; not filled.
  240  000012b4  23bdfff8	addi	r29,r29,#-8
  241  000012b8  3c070000	lhi	r7,((LC3_LF0)>>16)&0xffff
  242  000012bc  24e7308c	addui	r7,r7,(LC3_LF0)&0xffff
  243  000012c0  afa70000	sw	(r29),r7
  244  000012c4  0c000078	jal	_Printf
  245  000012c8  54000000	nop; not filled.
  246  000012cc  0c00007c	jal	_getpid
  247  000012d0  54000000	nop; not filled.
  248  000012d4  3c070000	lhi	r7,((LC8_LF0)>>16)&0xffff
  249  000012d8  24e731a4	addui	r7,r7,(LC8_LF0)&0xffff
  250  000012dc  afa70000	sw	(r29),r7
  251  000012e0  afa10004	sw	4(r29),r1
  252  000012e4  0c000058	jal	_Printf
  253  000012e8  54000000	nop; not filled.
  254  000012ec  23bd0008	addi	r29,r29,#8
  255  000012f0  0c000f00	jal	_exit
  256  000012f4  54000000	nop
  257  000012f8          	.endproc _main
  258                      ;;;
  259                      ;;; Stub functions for DLX traps.
  260                      ;;;
  261                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  262                      ;;;
  263                      ;;; The traps such as Open and Close
  264                      ;;; (note the capital letters) are for use by user programs.  The traps
  265                      ;;; with names such as open and close (lower case) are for use by the OS.
  266                      ;;;
  269  000012f8          	.align 2
  271                      ;;; The following are the traps to be used by user-level programs
  272                      ;;;
  274  000012f8          	.align 2
  275  000012f8          	.proc _Open
  276  000012f8          	.global _Open
  277  000012f8          	_Open:
  278                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  279                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  280                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  281  000012f8  44000213	trap	#0x213
  282  000012fc  4be00000	jr	r31
  283  00001300  54000000	nop
  284  00001304          	.endproc _Open
  286  00001304          	.proc _Close
  287  00001304          	.global _Close
  288  00001304          	_Close:
  289  00001304  44000214	trap	#0x214
  290  00001308  4be00000	jr	r31
  291  0000130c  54000000	nop
  292  00001310          	.endproc _Close
  294  00001310          	.proc _Read
  295  00001310          	.global _Read
  296  00001310          	_Read:
  297  00001310  44000210	trap	#0x210
  298  00001314  4be00000	jr	r31
  299  00001318  54000000	nop
  300  0000131c          	.endproc _Read
  302  0000131c          	.proc _Write
  303  0000131c          	.global _Write
  304  0000131c          	_Write:
  305  0000131c  44000211	trap	#0x211
  306  00001320  4be00000	jr	r31
  307  00001324  54000000	nop
  308  00001328          	.endproc _Write
  310  00001328          	.proc _Lseek
  311  00001328          	.global _Lseek
  312  00001328          	_Lseek:
  313  00001328  44000212	trap	#0x212
  314  0000132c  4be00000	jr	r31
  315  00001330  54000000	nop
  316  00001334          	.endproc _Lseek
  318  00001334          	.proc _Putchar
  319  00001334          	.global _Putchar
  320  00001334          	_Putchar:
  321  00001334  44000280	trap	#0x280
  322  00001338  4be00000	jr	r31
  323  0000133c  54000000	nop
  324  00001340          	.endproc _Putchar
  326  00001340          	.proc _Printf
  327  00001340          	.global _Printf
  328  00001340          	_Printf:
  329  00001340  44000201	trap	#0x201
  330  00001344  4be00000	jr	r31
  331  00001348  54000000	nop
  332  0000134c          	.endproc _Printf
  334  0000134c          	.proc _getpid
  335  0000134c          	.global _getpid
  336  0000134c          	_getpid:
  337  0000134c  44000431	trap	#0x431
  338  00001350  4be00000	jr	r31
  339  00001354  54000000	nop
  340  00001358          	.endproc _getpid
  342  00001358          	.proc _process_create
  343  00001358          	.global _process_create
  344  00001358          	_process_create:
  345  00001358  44000432	trap	#0x432
  346  0000135c  4be00000	jr	r31
  347  00001360  54000000	nop
  348  00001364          	.endproc _process_create
  350  00001364          	.proc _shmget
  351  00001364          	.global _shmget
  352  00001364          	_shmget:
  353  00001364  44000440	trap	#0x440
  354  00001368  4be00000	jr	r31
  355  0000136c  54000000	nop
  356  00001370          	.endproc _shmget
  358  00001370          	.proc _shmat
  359  00001370          	.global _shmat
  360  00001370          	_shmat:
  361  00001370  44000441	trap	#0x441
  362  00001374  4be00000	jr	r31
  363  00001378  54000000	nop
  364  0000137c          	.endproc _shmat
  366  0000137c          	.proc _sem_create
  367  0000137c          	.global _sem_create
  368  0000137c          	_sem_create:
  369  0000137c  44000450	trap	#0x450
  370  00001380  4be00000	jr	r31
  371  00001384  54000000	nop
  372  00001388          	.endproc _sem_create
  374  00001388          	.proc _sem_wait
  375  00001388          	.global _sem_wait
  376  00001388          	_sem_wait:
  377  00001388  44000451	trap	#0x451
  378  0000138c  4be00000	jr	r31
  379  00001390  54000000	nop
  380  00001394          	.endproc _sem_wait
  382  00001394          	.proc _sem_signal
  383  00001394          	.global _sem_signal
  384  00001394          	_sem_signal:
  385  00001394  44000452	trap	#0x452
  386  00001398  4be00000	jr	r31
  387  0000139c  54000000	nop
  388  000013a0          	.endproc _sem_signal
  390  000013a0          	.proc _lock_create
  391  000013a0          	.global _lock_create
  392  000013a0          	_lock_create:
  393  000013a0  44000453	trap	#0x453
  394  000013a4  4be00000	jr	r31
  395  000013a8  54000000	nop
  396  000013ac          	.endproc _lock_create
  398  000013ac          	.proc _lock_acquire
  399  000013ac          	.global _lock_acquire
  400  000013ac          	_lock_acquire:
  401  000013ac  44000454	trap	#0x454
  402  000013b0  4be00000	jr	r31
  403  000013b4  54000000	nop
  404  000013b8          	.endproc _lock_acquire
  406  000013b8          	.proc _lock_release
  407  000013b8          	.global _lock_release
  408  000013b8          	_lock_release:
  409  000013b8  44000455	trap	#0x455
  410  000013bc  4be00000	jr	r31
  411  000013c0  54000000	nop
  412  000013c4          	.endproc _lock_release
  414  000013c4          	.proc _cond_create
  415  000013c4          	.global _cond_create
  416  000013c4          	_cond_create:
  417  000013c4  44000456	trap	#0x456
  418  000013c8  4be00000	jr	r31
  419  000013cc  54000000	nop
  420  000013d0          	.endproc _cond_create
  422  000013d0          	.proc _cond_wait
  423  000013d0          	.global _cond_wait
  424  000013d0          	_cond_wait:
  425  000013d0  44000457	trap	#0x457
  426  000013d4  4be00000	jr	r31
  427  000013d8  54000000	nop
  428  000013dc          	.endproc _cond_wait
  430  000013dc          	.proc _cond_signal
  431  000013dc          	.global _cond_signal
  432  000013dc          	_cond_signal:
  433  000013dc  44000458	trap	#0x458
  434  000013e0  4be00000	jr	r31
  435  000013e4  54000000	nop
  436  000013e8          	.endproc _cond_signal
  438  000013e8          	.proc _cond_broadcast
  439  000013e8          	.global _cond_broadcast
  440  000013e8          	_cond_broadcast:
  441  000013e8  44000459	trap	#0x459
  442  000013ec  4be00000	jr	r31
  443  000013f0  54000000	nop
  444  000013f4          	.endproc _cond_broadcast
  446  000013f4          	.proc _mbox_create
  447  000013f4          	.global _mbox_create
  448  000013f4          	_mbox_create:
  449  000013f4  44000460	trap	#0x460
  450  000013f8  4be00000	jr	r31
  451  000013fc  54000000	nop
  452  00001400          	.endproc _mbox_create
  454  00001400          	.proc _mbox_open
  455  00001400          	.global _mbox_open
  456  00001400          	_mbox_open:
  457  00001400  44000461	trap	#0x461
  458  00001404  4be00000	jr	r31
  459  00001408  54000000	nop
  460  0000140c          	.endproc _mbox_open
  462  0000140c          	.proc _mbox_close
  463  0000140c          	.global _mbox_close
  464  0000140c          	_mbox_close:
  465  0000140c  44000462	trap	#0x462
  466  00001410  4be00000	jr	r31
  467  00001414  54000000	nop
  468  00001418          	.endproc _mbox_close
  470  00001418          	.proc _mbox_send
  471  00001418          	.global _mbox_send
  472  00001418          	_mbox_send:
  473  00001418  44000463	trap	#0x463
  474  0000141c  4be00000	jr	r31
  475  00001420  54000000	nop
  476  00001424          	.endproc _mbox_send
  478  00001424          	.proc _mbox_recv
  479  00001424          	.global _mbox_recv
  480  00001424          	_mbox_recv:
  481  00001424  44000464	trap	#0x464
  482  00001428  4be00000	jr	r31
  483  0000142c  54000000	nop
  484  00001430          	.endproc _mbox_recv
  486  00001430          	.proc _sleep
  487  00001430          	.global _sleep
  488  00001430          	_sleep:
  489  00001430  44000465	trap	#0x465
  490  00001434  4be00000	jr	r31
  491  00001438  54000000	nop
  492  0000143c          	.endproc _sleep
  494  0000143c          	.proc _yield
  495  0000143c          	.global _yield
  496  0000143c          	_yield:
  497  0000143c  44000466	trap	#0x466
  498  00001440  4be00000	jr	r31
  499  00001444  54000000	nop
  500  00001448          	.endproc _yield
  503  00001448          	.proc _Exit
  504  00001448          	.global _Exit
  505  00001448          	_Exit:
  506  00001448  44000500	trap	#0x500
  507  0000144c  4be00000	jr	r31
  508  00001450  54000000	nop
  509  00001454          	.endproc _Exit
  512  00001454          	.proc _malloc
  513  00001454          	.global _malloc
  514  00001454          	_malloc:
  515  00001454  44000467	trap	#0x467
  516  00001458  4be00000	jr	r31
  517  0000145c          	.endproc _malloc
  520  0000145c          	.proc _mfree
  521  0000145c          	.global _mfree
  522  0000145c          	_mfree:
  523  0000145c  44000468	trap	#0x468
  524  00001460  4be00000	jr	r31
  525  00001464          	.endproc _mfree
  526                      ; Compiled by GCC
  528  00001464          	.align 2
  529  00001464          	.proc _isspace
  530  00001464          	.global _isspace
  531  00001464          	_isspace:
  532                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  533  00001464  afbefffc	sw	-4(r29),r30; push fp
  534  00001468  001df020	add	r30,r0,r29; fp = sp
  535  0000146c  afbffff8	sw	-8(r29),r31; push ret addr
  536  00001470  2fbd0018	subui	r29,r29,#24; alloc local storage
  537  00001474  afa20000	sw	0(r29),r2
  538  00001478  afa30004	sw	4(r29),r3
  539  0000147c  afa40008	sw	8(r29),r4
  540  00001480  83c20003	lb	r2,3(r30)
  541  00001484  20010000	addi	r1,r0,#0
  542  00001488  304300ff	andi	r3,r2,#0x00ff
  543  0000148c  60640020	seqi	r4,r3,#32
  544  00001490  1480002c	bnez	r4,L3_LF2
  545  00001494  54000000	nop; delay slot nop
  546  00001498  304300ff	andi	r3,r2,#0x00ff
  547  0000149c  60640009	seqi	r4,r3,#9
  548  000014a0  1480001c	bnez	r4,L3_LF2
  549  000014a4  54000000	nop; delay slot nop
  550  000014a8  304300ff	andi	r3,r2,#0x00ff
  551  000014ac  6064000a	seqi	r4,r3,#10
  552  000014b0  1480000c	bnez	r4,L3_LF2
  553  000014b4  54000000	nop; delay slot nop
  554  000014b8  08000008	j	L2_LF2
  555  000014bc  54000000	nop; delay slot nop
  556  000014c0          	L3_LF2:
  557  000014c0  20010001	addi	r1,r0,#1
  558  000014c4          	L2_LF2:
  559  000014c4  08000004	j	L1_LF2
  560  000014c8  54000000	nop; delay slot nop
  561  000014cc          	L1_LF2:
  562  000014cc  8fa20000	lw	r2,0(r29)
  563  000014d0  8fa30004	lw	r3,4(r29)
  564  000014d4  8fa40008	lw	r4,8(r29)
  565  000014d8  8fdffff8	lw	r31,-8(r30)
  566  000014dc  001ee820	add	r29,r0,r30
  567  000014e0  8fdefffc	lw	r30,-4(r30)
  568  000014e4  4be00000	jr	r31
  569  000014e8  54000000	nop
  570  000014ec          	.endproc _isspace
  571  000014ec          	.align 2
  572  000014ec          	.proc _isxdigit
  573  000014ec          	.global _isxdigit
  574  000014ec          	_isxdigit:
  575                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  576  000014ec  afbefffc	sw	-4(r29),r30; push fp
  577  000014f0  001df020	add	r30,r0,r29; fp = sp
  578  000014f4  afbffff8	sw	-8(r29),r31; push ret addr
  579  000014f8  2fbd0018	subui	r29,r29,#24; alloc local storage
  580  000014fc  afa20000	sw	0(r29),r2
  581  00001500  afa30004	sw	4(r29),r3
  582  00001504  afa40008	sw	8(r29),r4
  583  00001508  83c20003	lb	r2,3(r30)
  584  0000150c  20010000	addi	r1,r0,#0
  585  00001510  304300ff	andi	r3,r2,#0x00ff
  586  00001514  6c64002f	sgtui	r4,r3,#47
  587  00001518  1080001c	beqz	r4,L7_LF2
  588  0000151c  54000000	nop; delay slot nop
  589  00001520  304300ff	andi	r3,r2,#0x00ff
  590  00001524  70640039	sleui	r4,r3,#57
  591  00001528  1480005c	bnez	r4,L6_LF2
  592  0000152c  54000000	nop; delay slot nop
  593  00001530  08000004	j	L7_LF2
  594  00001534  54000000	nop; delay slot nop
  595  00001538          	L7_LF2:
  596  00001538  304300ff	andi	r3,r2,#0x00ff
  597  0000153c  6c640060	sgtui	r4,r3,#96
  598  00001540  1080001c	beqz	r4,L8_LF2
  599  00001544  54000000	nop; delay slot nop
  600  00001548  304300ff	andi	r3,r2,#0x00ff
  601  0000154c  70640066	sleui	r4,r3,#102
  602  00001550  14800034	bnez	r4,L6_LF2
  603  00001554  54000000	nop; delay slot nop
  604  00001558  08000004	j	L8_LF2
  605  0000155c  54000000	nop; delay slot nop
  606  00001560          	L8_LF2:
  607  00001560  304300ff	andi	r3,r2,#0x00ff
  608  00001564  6c640040	sgtui	r4,r3,#64
  609  00001568  10800020	beqz	r4,L5_LF2
  610  0000156c  54000000	nop; delay slot nop
  611  00001570  304300ff	andi	r3,r2,#0x00ff
  612  00001574  70640041	sleui	r4,r3,#65
  613  00001578  1480000c	bnez	r4,L6_LF2
  614  0000157c  54000000	nop; delay slot nop
  615  00001580  08000008	j	L5_LF2
  616  00001584  54000000	nop; delay slot nop
  617  00001588          	L6_LF2:
  618  00001588  20010001	addi	r1,r0,#1
  619  0000158c          	L5_LF2:
  620  0000158c  08000004	j	L4_LF2
  621  00001590  54000000	nop; delay slot nop
  622  00001594          	L4_LF2:
  623  00001594  8fa20000	lw	r2,0(r29)
  624  00001598  8fa30004	lw	r3,4(r29)
  625  0000159c  8fa40008	lw	r4,8(r29)
  626  000015a0  8fdffff8	lw	r31,-8(r30)
  627  000015a4  001ee820	add	r29,r0,r30
  628  000015a8  8fdefffc	lw	r30,-4(r30)
  629  000015ac  4be00000	jr	r31
  630  000015b0  54000000	nop
  631  000015b4          	.endproc _isxdigit
  632  000015b4          	.align 2
  633  000015b4          	.proc _dstrcpy
  634  000015b4          	.global _dstrcpy
  635  000015b4          	_dstrcpy:
  636                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  637  000015b4  afbefffc	sw	-4(r29),r30; push fp
  638  000015b8  001df020	add	r30,r0,r29; fp = sp
  639  000015bc  afbffff8	sw	-8(r29),r31; push ret addr
  640  000015c0  2fbd0018	subui	r29,r29,#24; alloc local storage
  641  000015c4  afa20000	sw	0(r29),r2
  642  000015c8  afa30004	sw	4(r29),r3
  643  000015cc  8fc10000	lw	r1,(r30)
  644  000015d0  afc1fff4	sw	-12(r30),r1
  645  000015d4          	L10_LF2:
  646  000015d4  8fc10000	lw	r1,(r30)
  647  000015d8  20220001	addi	r2,r1,#1
  648  000015dc  afc20000	sw	(r30),r2
  649  000015e0  8fc20004	lw	r2,4(r30)
  650  000015e4  20430001	addi	r3,r2,#1
  651  000015e8  afc30004	sw	4(r30),r3
  652  000015ec  80420000	lb	r2,(r2)
  653  000015f0  a0220000	sb	(r1),r2
  654  000015f4  a3c2fff3	sb	-13(r30),r2
  655  000015f8          	L12_LF2:
  656  000015f8  93c1fff3	lbu	r1,-13(r30)
  657  000015fc  64220000	snei	r2,r1,#0
  658  00001600  1440000c	bnez	r2,L13_LF2
  659  00001604  54000000	nop; delay slot nop
  660  00001608  0800000c	j	L11_LF2
  661  0000160c  54000000	nop; delay slot nop
  662  00001610          	L13_LF2:
  663  00001610  0bffffc0	j	L10_LF2
  664  00001614  54000000	nop; delay slot nop
  665  00001618          	L11_LF2:
  666  00001618  8fc1fff4	lw	r1,-12(r30)
  667  0000161c  08000004	j	L9_LF2
  668  00001620  54000000	nop; delay slot nop
  669  00001624          	L9_LF2:
  670  00001624  8fa20000	lw	r2,0(r29)
  671  00001628  8fa30004	lw	r3,4(r29)
  672  0000162c  8fdffff8	lw	r31,-8(r30)
  673  00001630  001ee820	add	r29,r0,r30
  674  00001634  8fdefffc	lw	r30,-4(r30)
  675  00001638  4be00000	jr	r31
  676  0000163c  54000000	nop
  677  00001640          	.endproc _dstrcpy
  678  00001640          	.align 2
  679  00001640          	.proc _dstrncpy
  680  00001640          	.global _dstrncpy
  681  00001640          	_dstrncpy:
  682                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  683  00001640  afbefffc	sw	-4(r29),r30; push fp
  684  00001644  001df020	add	r30,r0,r29; fp = sp
  685  00001648  afbffff8	sw	-8(r29),r31; push ret addr
  686  0000164c  2fbd0018	subui	r29,r29,#24; alloc local storage
  687  00001650  afa20000	sw	0(r29),r2
  688  00001654  afa30004	sw	4(r29),r3
  689  00001658  8fc10000	lw	r1,(r30)
  690  0000165c  afc1fff4	sw	-12(r30),r1
  691  00001660          	L15_LF2:
  692  00001660  8fc10008	lw	r1,8(r30)
  693  00001664  2022ffff	addi	r2,r1,#-1
  694  00001668  afc20008	sw	8(r30),r2
  695  0000166c  70210000	slei	r1,r1,#0
  696  00001670  1020000c	beqz	r1,L18_LF2
  697  00001674  54000000	nop; delay slot nop
  698  00001678  08000048	j	L16_LF2
  699  0000167c  54000000	nop; delay slot nop
  700  00001680          	L18_LF2:
  701  00001680  8fc10000	lw	r1,(r30)
  702  00001684  20220001	addi	r2,r1,#1
  703  00001688  afc20000	sw	(r30),r2
  704  0000168c  8fc20004	lw	r2,4(r30)
  705  00001690  20430001	addi	r3,r2,#1
  706  00001694  afc30004	sw	4(r30),r3
  707  00001698  80420000	lb	r2,(r2)
  708  0000169c  a0220000	sb	(r1),r2
  709  000016a0  a3c2fff3	sb	-13(r30),r2
  710  000016a4          	L17_LF2:
  711  000016a4  93c1fff3	lbu	r1,-13(r30)
  712  000016a8  64220000	snei	r2,r1,#0
  713  000016ac  1440000c	bnez	r2,L19_LF2
  714  000016b0  54000000	nop; delay slot nop
  715  000016b4  0800000c	j	L16_LF2
  716  000016b8  54000000	nop; delay slot nop
  717  000016bc          	L19_LF2:
  718  000016bc  0bffffa0	j	L15_LF2
  719  000016c0  54000000	nop; delay slot nop
  720  000016c4          	L16_LF2:
  721  000016c4  8fc1fff4	lw	r1,-12(r30)
  722  000016c8  08000004	j	L14_LF2
  723  000016cc  54000000	nop; delay slot nop
  724  000016d0          	L14_LF2:
  725  000016d0  8fa20000	lw	r2,0(r29)
  726  000016d4  8fa30004	lw	r3,4(r29)
  727  000016d8  8fdffff8	lw	r31,-8(r30)
  728  000016dc  001ee820	add	r29,r0,r30
  729  000016e0  8fdefffc	lw	r30,-4(r30)
  730  000016e4  4be00000	jr	r31
  731  000016e8  54000000	nop
  732  000016ec          	.endproc _dstrncpy
  733  000016ec          	.align 2
  734  000016ec          	.proc _dstrcat
  735  000016ec          	.global _dstrcat
  736  000016ec          	_dstrcat:
  737                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  738  000016ec  afbefffc	sw	-4(r29),r30; push fp
  739  000016f0  001df020	add	r30,r0,r29; fp = sp
  740  000016f4  afbffff8	sw	-8(r29),r31; push ret addr
  741  000016f8  2fbd0018	subui	r29,r29,#24; alloc local storage
  742  000016fc  afa20000	sw	0(r29),r2
  743  00001700  8fc10000	lw	r1,(r30)
  744  00001704  afc1fff4	sw	-12(r30),r1
  745  00001708          	L21_LF2:
  746  00001708  8fc10000	lw	r1,(r30)
  747  0000170c  90220000	lbu	r2,(r1)
  748  00001710  64410000	snei	r1,r2,#0
  749  00001714  1420000c	bnez	r1,L23_LF2
  750  00001718  54000000	nop; delay slot nop
  751  0000171c  0800001c	j	L22_LF2
  752  00001720  54000000	nop; delay slot nop
  753  00001724          	L23_LF2:
  754  00001724  8fc20000	lw	r2,(r30)
  755  00001728  20410001	addi	r1,r2,#1
  756  0000172c  00011020	add	r2,r0,r1
  757  00001730  afc20000	sw	(r30),r2
  758  00001734  0bffffd0	j	L21_LF2
  759  00001738  54000000	nop; delay slot nop
  760  0000173c          	L22_LF2:
  761  0000173c  23bdfff8	addi	r29,r29,#-8
  762  00001740  001d0820	add	r1,r0,r29
  763  00001744  8fc20000	lw	r2,(r30)
  764  00001748  ac220000	sw	(r1),r2
  765  0000174c  8fc20004	lw	r2,4(r30)
  766  00001750  ac220004	sw	4(r1),r2
  767  00001754  0ffffe5c	jal	_dstrcpy
  768  00001758  54000000	nop; delay slot nop
  769  0000175c  23bd0008	addi	r29,r29,#8
  770  00001760  8fc1fff4	lw	r1,-12(r30)
  771  00001764  08000004	j	L20_LF2
  772  00001768  54000000	nop; delay slot nop
  773  0000176c          	L20_LF2:
  774  0000176c  8fa20000	lw	r2,0(r29)
  775  00001770  8fdffff8	lw	r31,-8(r30)
  776  00001774  001ee820	add	r29,r0,r30
  777  00001778  8fdefffc	lw	r30,-4(r30)
  778  0000177c  4be00000	jr	r31
  779  00001780  54000000	nop
  780  00001784          	.endproc _dstrcat
  781  00001784          	.align 2
  782  00001784          	.proc _dstrncmp
  783  00001784          	.global _dstrncmp
  784  00001784          	_dstrncmp:
  785                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  786  00001784  afbefffc	sw	-4(r29),r30; push fp
  787  00001788  001df020	add	r30,r0,r29; fp = sp
  788  0000178c  afbffff8	sw	-8(r29),r31; push ret addr
  789  00001790  2fbd0018	subui	r29,r29,#24; alloc local storage
  790  00001794  afa20000	sw	0(r29),r2
  791  00001798  afa30004	sw	4(r29),r3
  792  0000179c  54000000	nop
  793  000017a0  20010000	addi	r1,r0,#0
  794  000017a4  afc1fff4	sw	-12(r30),r1
  795  000017a8          	L25_LF2:
  796  000017a8  8fc1fff4	lw	r1,-12(r30)
  797  000017ac  8fc20008	lw	r2,8(r30)
  798  000017b0  0022082a	slt	r1,r1,r2
  799  000017b4  1420000c	bnez	r1,L28_LF2
  800  000017b8  54000000	nop; delay slot nop
  801  000017bc  08000088	j	L26_LF2
  802  000017c0  54000000	nop; delay slot nop
  803  000017c4          	L28_LF2:
  804  000017c4  8fc10004	lw	r1,4(r30)
  805  000017c8  90220000	lbu	r2,(r1)
  806  000017cc  64410000	snei	r1,r2,#0
  807  000017d0  14200018	bnez	r1,L29_LF2
  808  000017d4  54000000	nop; delay slot nop
  809  000017d8  20010000	addi	r1,r0,#0
  810  000017dc  080000d8	j	L24_LF2
  811  000017e0  54000000	nop; delay slot nop
  812  000017e4  08000028	j	L30_LF2
  813  000017e8  54000000	nop; delay slot nop
  814  000017ec          	L29_LF2:
  815  000017ec  8fc10000	lw	r1,(r30)
  816  000017f0  8fc20004	lw	r2,4(r30)
  817  000017f4  90210000	lbu	r1,(r1)
  818  000017f8  90420000	lbu	r2,(r2)
  819  000017fc  00220829	sne	r1,r1,r2
  820  00001800  1020000c	beqz	r1,L30_LF2
  821  00001804  54000000	nop; delay slot nop
  822  00001808  0800003c	j	L26_LF2
  823  0000180c  54000000	nop; delay slot nop
  824  00001810          	L31_LF2:
  825  00001810          	L30_LF2:
  826  00001810  8fc20000	lw	r2,(r30)
  827  00001814  20410001	addi	r1,r2,#1
  828  00001818  00011020	add	r2,r0,r1
  829  0000181c  afc20000	sw	(r30),r2
  830  00001820  8fc20004	lw	r2,4(r30)
  831  00001824  20410001	addi	r1,r2,#1
  832  00001828  00011020	add	r2,r0,r1
  833  0000182c  afc20004	sw	4(r30),r2
  834  00001830          	L27_LF2:
  835  00001830  8fc2fff4	lw	r2,-12(r30)
  836  00001834  20410001	addi	r1,r2,#1
  837  00001838  00011020	add	r2,r0,r1
  838  0000183c  afc2fff4	sw	-12(r30),r2
  839  00001840  0bffff64	j	L25_LF2
  840  00001844  54000000	nop; delay slot nop
  841  00001848          	L26_LF2:
  842  00001848  8fc1fff4	lw	r1,-12(r30)
  843  0000184c  8fc20008	lw	r2,8(r30)
  844  00001850  00220828	seq	r1,r1,r2
  845  00001854  10200018	beqz	r1,L32_LF2
  846  00001858  54000000	nop; delay slot nop
  847  0000185c  20010000	addi	r1,r0,#0
  848  00001860  08000054	j	L24_LF2
  849  00001864  54000000	nop; delay slot nop
  850  00001868  0800004c	j	L33_LF2
  851  0000186c  54000000	nop; delay slot nop
  852  00001870          	L32_LF2:
  853  00001870  8fc20000	lw	r2,(r30)
  854  00001874  90410000	lbu	r1,(r2)
  855  00001878  8fc20004	lw	r2,4(r30)
  856  0000187c  90430000	lbu	r3,(r2)
  857  00001880  00230822	sub	r1,r1,r3
  858  00001884  74220000	sgei	r2,r1,#0
  859  00001888  10400020	beqz	r2,L34_LF2
  860  0000188c  54000000	nop; delay slot nop
  861  00001890  8fc10000	lw	r1,(r30)
  862  00001894  8fc20004	lw	r2,4(r30)
  863  00001898  90210000	lbu	r1,(r1)
  864  0000189c  90420000	lbu	r2,(r2)
  865  000018a0  00220829	sne	r1,r1,r2
  866  000018a4  08000008	j	L35_LF2
  867  000018a8  54000000	nop; delay slot nop
  868  000018ac          	L34_LF2:
  869  000018ac  2001ffff	addi	r1,r0,#-1
  870  000018b0          	L35_LF2:
  871  000018b0  08000004	j	L24_LF2
  872  000018b4  54000000	nop; delay slot nop
  873  000018b8          	L33_LF2:
  874  000018b8          	L24_LF2:
  875  000018b8  8fa20000	lw	r2,0(r29)
  876  000018bc  8fa30004	lw	r3,4(r29)
  877  000018c0  8fdffff8	lw	r31,-8(r30)
  878  000018c4  001ee820	add	r29,r0,r30
  879  000018c8  8fdefffc	lw	r30,-4(r30)
  880  000018cc  4be00000	jr	r31
  881  000018d0  54000000	nop
  882  000018d4          	.endproc _dstrncmp
  883  000018d4          	.align 2
  884  000018d4          	.proc _dstrlen
  885  000018d4          	.global _dstrlen
  886  000018d4          	_dstrlen:
  887                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  888  000018d4  afbefffc	sw	-4(r29),r30; push fp
  889  000018d8  001df020	add	r30,r0,r29; fp = sp
  890  000018dc  afbffff8	sw	-8(r29),r31; push ret addr
  891  000018e0  2fbd0018	subui	r29,r29,#24; alloc local storage
  892  000018e4  afa20000	sw	0(r29),r2
  893  000018e8  20010000	addi	r1,r0,#0
  894  000018ec  afc1fff4	sw	-12(r30),r1
  895  000018f0          	L37_LF2:
  896  000018f0  8fc10000	lw	r1,(r30)
  897  000018f4  20220001	addi	r2,r1,#1
  898  000018f8  afc20000	sw	(r30),r2
  899  000018fc  90210000	lbu	r1,(r1)
  900  00001900  64220000	snei	r2,r1,#0
  901  00001904  1440000c	bnez	r2,L39_LF2
  902  00001908  54000000	nop; delay slot nop
  903  0000190c  0800001c	j	L38_LF2
  904  00001910  54000000	nop; delay slot nop
  905  00001914          	L39_LF2:
  906  00001914  8fc2fff4	lw	r2,-12(r30)
  907  00001918  20410001	addi	r1,r2,#1
  908  0000191c  00011020	add	r2,r0,r1
  909  00001920  afc2fff4	sw	-12(r30),r2
  910  00001924  0bffffc8	j	L37_LF2
  911  00001928  54000000	nop; delay slot nop
  912  0000192c          	L38_LF2:
  913  0000192c  8fc1fff4	lw	r1,-12(r30)
  914  00001930  08000004	j	L36_LF2
  915  00001934  54000000	nop; delay slot nop
  916  00001938          	L36_LF2:
  917  00001938  8fa20000	lw	r2,0(r29)
  918  0000193c  8fdffff8	lw	r31,-8(r30)
  919  00001940  001ee820	add	r29,r0,r30
  920  00001944  8fdefffc	lw	r30,-4(r30)
  921  00001948  4be00000	jr	r31
  922  0000194c  54000000	nop
  923  00001950          	.endproc _dstrlen
  924  00001950          	.align 2
  925  00001950          	.proc _dstrstr
  926  00001950          	.global _dstrstr
  927  00001950          	_dstrstr:
  928                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  929  00001950  afbefffc	sw	-4(r29),r30; push fp
  930  00001954  001df020	add	r30,r0,r29; fp = sp
  931  00001958  afbffff8	sw	-8(r29),r31; push ret addr
  932  0000195c  2fbd0018	subui	r29,r29,#24; alloc local storage
  933  00001960  afa20000	sw	0(r29),r2
  934  00001964  23bdfff8	addi	r29,r29,#-8
  935  00001968  001d0820	add	r1,r0,r29
  936  0000196c  8fc20004	lw	r2,4(r30)
  937  00001970  ac220000	sw	(r1),r2
  938  00001974  0fffff5c	jal	_dstrlen
  939  00001978  54000000	nop; delay slot nop
  940  0000197c  23bd0008	addi	r29,r29,#8
  941  00001980  afc1fff4	sw	-12(r30),r1
  942  00001984          	L41_LF2:
  943  00001984  8fc10000	lw	r1,(r30)
  944  00001988  90220000	lbu	r2,(r1)
  945  0000198c  64410000	snei	r1,r2,#0
  946  00001990  1420000c	bnez	r1,L43_LF2
  947  00001994  54000000	nop; delay slot nop
  948  00001998  08000060	j	L42_LF2
  949  0000199c  54000000	nop; delay slot nop
  950  000019a0          	L43_LF2:
  951  000019a0  23bdfff0	addi	r29,r29,#-16
  952  000019a4  001d0820	add	r1,r0,r29
  953  000019a8  8fc20000	lw	r2,(r30)
  954  000019ac  ac220000	sw	(r1),r2
  955  000019b0  8fc20004	lw	r2,4(r30)
  956  000019b4  ac220004	sw	4(r1),r2
  957  000019b8  8fc2fff4	lw	r2,-12(r30)
  958  000019bc  ac220008	sw	8(r1),r2
  959  000019c0  0ffffdc0	jal	_dstrncmp
  960  000019c4  54000000	nop; delay slot nop
  961  000019c8  23bd0010	addi	r29,r29,#16
  962  000019cc  64220000	snei	r2,r1,#0
  963  000019d0  14400010	bnez	r2,L44_LF2
  964  000019d4  54000000	nop; delay slot nop
  965  000019d8  8fc10000	lw	r1,(r30)
  966  000019dc  08000028	j	L40_LF2
  967  000019e0  54000000	nop; delay slot nop
  968  000019e4          	L44_LF2:
  969  000019e4  8fc20000	lw	r2,(r30)
  970  000019e8  20410001	addi	r1,r2,#1
  971  000019ec  00011020	add	r2,r0,r1
  972  000019f0  afc20000	sw	(r30),r2
  973  000019f4  0bffff8c	j	L41_LF2
  974  000019f8  54000000	nop; delay slot nop
  975  000019fc          	L42_LF2:
  976  000019fc  20010000	addi	r1,r0,#0
  977  00001a00  08000004	j	L40_LF2
  978  00001a04  54000000	nop; delay slot nop
  979  00001a08          	L40_LF2:
  980  00001a08  8fa20000	lw	r2,0(r29)
  981  00001a0c  8fdffff8	lw	r31,-8(r30)
  982  00001a10  001ee820	add	r29,r0,r30
  983  00001a14  8fdefffc	lw	r30,-4(r30)
  984  00001a18  4be00000	jr	r31
  985  00001a1c  54000000	nop
  986  00001a20          	.endproc _dstrstr
  987  00001a20          	.align 2
  988  00001a20          	.proc _dmindex
  989  00001a20          	.global _dmindex
  990  00001a20          	_dmindex:
  991                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  992  00001a20  afbefffc	sw	-4(r29),r30; push fp
  993  00001a24  001df020	add	r30,r0,r29; fp = sp
  994  00001a28  afbffff8	sw	-8(r29),r31; push ret addr
  995  00001a2c  2fbd0018	subui	r29,r29,#24; alloc local storage
  996  00001a30  afa20000	sw	0(r29),r2
  997  00001a34  54000000	nop
  998  00001a38          	L46_LF2:
  999  00001a38  8fc10000	lw	r1,(r30)
 1000  00001a3c  90220000	lbu	r2,(r1)
 1001  00001a40  64410000	snei	r1,r2,#0
 1002  00001a44  1420000c	bnez	r1,L48_LF2
 1003  00001a48  54000000	nop; delay slot nop
 1004  00001a4c  08000070	j	L47_LF2
 1005  00001a50  54000000	nop; delay slot nop
 1006  00001a54          	L48_LF2:
 1007  00001a54  8fc10004	lw	r1,4(r30)
 1008  00001a58  afc1fff4	sw	-12(r30),r1
 1009  00001a5c          	L49_LF2:
 1010  00001a5c  8fc1fff4	lw	r1,-12(r30)
 1011  00001a60  90220000	lbu	r2,(r1)
 1012  00001a64  64410000	snei	r1,r2,#0
 1013  00001a68  1420000c	bnez	r1,L52_LF2
 1014  00001a6c  54000000	nop; delay slot nop
 1015  00001a70  08000044	j	L50_LF2
 1016  00001a74  54000000	nop; delay slot nop
 1017  00001a78          	L52_LF2:
 1018  00001a78  8fc10000	lw	r1,(r30)
 1019  00001a7c  8fc2fff4	lw	r2,-12(r30)
 1020  00001a80  90210000	lbu	r1,(r1)
 1021  00001a84  90420000	lbu	r2,(r2)
 1022  00001a88  00220828	seq	r1,r1,r2
 1023  00001a8c  10200010	beqz	r1,L51_LF2
 1024  00001a90  54000000	nop; delay slot nop
 1025  00001a94  8fc10000	lw	r1,(r30)
 1026  00001a98  08000030	j	L45_LF2
 1027  00001a9c  54000000	nop; delay slot nop
 1028  00001aa0          	L53_LF2:
 1029  00001aa0          	L51_LF2:
 1030  00001aa0  8fc2fff4	lw	r2,-12(r30)
 1031  00001aa4  20410001	addi	r1,r2,#1
 1032  00001aa8  00011020	add	r2,r0,r1
 1033  00001aac  afc2fff4	sw	-12(r30),r2
 1034  00001ab0  0bffffa8	j	L49_LF2
 1035  00001ab4  54000000	nop; delay slot nop
 1036  00001ab8          	L50_LF2:
 1037  00001ab8  0bffff7c	j	L46_LF2
 1038  00001abc  54000000	nop; delay slot nop
 1039  00001ac0          	L47_LF2:
 1040  00001ac0  20010000	addi	r1,r0,#0
 1041  00001ac4  08000004	j	L45_LF2
 1042  00001ac8  54000000	nop; delay slot nop
 1043  00001acc          	L45_LF2:
 1044  00001acc  8fa20000	lw	r2,0(r29)
 1045  00001ad0  8fdffff8	lw	r31,-8(r30)
 1046  00001ad4  001ee820	add	r29,r0,r30
 1047  00001ad8  8fdefffc	lw	r30,-4(r30)
 1048  00001adc  4be00000	jr	r31
 1049  00001ae0  54000000	nop
 1050  00001ae4          	.endproc _dmindex
 1051  00001ae4          	.align 2
 1052  00001ae4          	.proc _dindex
 1053  00001ae4          	.global _dindex
 1054  00001ae4          	_dindex:
 1055                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1056  00001ae4  afbefffc	sw	-4(r29),r30; push fp
 1057  00001ae8  001df020	add	r30,r0,r29; fp = sp
 1058  00001aec  afbffff8	sw	-8(r29),r31; push ret addr
 1059  00001af0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1060  00001af4  afa20000	sw	0(r29),r2
 1061  00001af8  54000000	nop
 1062  00001afc          	L55_LF2:
 1063  00001afc  8fc10000	lw	r1,(r30)
 1064  00001b00  90220000	lbu	r2,(r1)
 1065  00001b04  64410000	snei	r1,r2,#0
 1066  00001b08  1420000c	bnez	r1,L57_LF2
 1067  00001b0c  54000000	nop; delay slot nop
 1068  00001b10  08000040	j	L56_LF2
 1069  00001b14  54000000	nop; delay slot nop
 1070  00001b18          	L57_LF2:
 1071  00001b18  8fc10000	lw	r1,(r30)
 1072  00001b1c  90220000	lbu	r2,(r1)
 1073  00001b20  8fc10004	lw	r1,4(r30)
 1074  00001b24  00411028	seq	r2,r2,r1
 1075  00001b28  10400010	beqz	r2,L58_LF2
 1076  00001b2c  54000000	nop; delay slot nop
 1077  00001b30  8fc10000	lw	r1,(r30)
 1078  00001b34  08000028	j	L54_LF2
 1079  00001b38  54000000	nop; delay slot nop
 1080  00001b3c          	L58_LF2:
 1081  00001b3c  8fc20000	lw	r2,(r30)
 1082  00001b40  20410001	addi	r1,r2,#1
 1083  00001b44  00011020	add	r2,r0,r1
 1084  00001b48  afc20000	sw	(r30),r2
 1085  00001b4c  0bffffac	j	L55_LF2
 1086  00001b50  54000000	nop; delay slot nop
 1087  00001b54          	L56_LF2:
 1088  00001b54  20010000	addi	r1,r0,#0
 1089  00001b58  08000004	j	L54_LF2
 1090  00001b5c  54000000	nop; delay slot nop
 1091  00001b60          	L54_LF2:
 1092  00001b60  8fa20000	lw	r2,0(r29)
 1093  00001b64  8fdffff8	lw	r31,-8(r30)
 1094  00001b68  001ee820	add	r29,r0,r30
 1095  00001b6c  8fdefffc	lw	r30,-4(r30)
 1096  00001b70  4be00000	jr	r31
 1097  00001b74  54000000	nop
 1098  00001b78          	.endproc _dindex
 1099  00001b78          	.align 2
 1100  00001b78          	.proc _ditoa
 1101  00001b78          	.global _ditoa
 1102  00001b78          	_ditoa:
 1103                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1104  00001b78  afbefffc	sw	-4(r29),r30; push fp
 1105  00001b7c  001df020	add	r30,r0,r29; fp = sp
 1106  00001b80  afbffff8	sw	-8(r29),r31; push ret addr
 1107  00001b84  2fbd0018	subui	r29,r29,#24; alloc local storage
 1108  00001b88  afa20000	sw	0(r29),r2
 1109  00001b8c  afa30004	sw	4(r29),r3
 1110  00001b90  8fc10000	lw	r1,(r30)
 1111  00001b94  68220000	slti	r2,r1,#0
 1112  00001b98  1040002c	beqz	r2,L60_LF2
 1113  00001b9c  54000000	nop; delay slot nop
 1114  00001ba0  8fc10004	lw	r1,4(r30)
 1115  00001ba4  20220001	addi	r2,r1,#1
 1116  00001ba8  afc20004	sw	4(r30),r2
 1117  00001bac  2002002d	addi	r2,r0,(#0x2d)&0xff
 1118  00001bb0  a0220000	sb	(r1),r2
 1119  00001bb4  8fc10000	lw	r1,(r30)
 1120  00001bb8  00011022	sub	r2,r0,r1
 1121  00001bbc  afc20000	sw	(r30),r2
 1122  00001bc0  08000118	j	L61_LF2
 1123  00001bc4  54000000	nop; delay slot nop
 1124  00001bc8          	L60_LF2:
 1125  00001bc8  8fc10000	lw	r1,(r30)
 1126  00001bcc  64220000	snei	r2,r1,#0
 1127  00001bd0  14400020	bnez	r2,L62_LF2
 1128  00001bd4  54000000	nop; delay slot nop
 1129  00001bd8  8fc10004	lw	r1,4(r30)
 1130  00001bdc  20220001	addi	r2,r1,#1
 1131  00001be0  afc20004	sw	4(r30),r2
 1132  00001be4  20020030	addi	r2,r0,(#0x30)&0xff
 1133  00001be8  a0220000	sb	(r1),r2
 1134  00001bec  080000ec	j	L61_LF2
 1135  00001bf0  54000000	nop; delay slot nop
 1136  00001bf4          	L62_LF2:
 1137  00001bf4  20010001	addi	r1,r0,#1
 1138  00001bf8  afc1fff4	sw	-12(r30),r1
 1139  00001bfc          	L64_LF2:
 1140  00001bfc  8fc1fff4	lw	r1,-12(r30)
 1141  00001c00  8fc20000	lw	r2,(r30)
 1142  00001c04  0022082c	sle	r1,r1,r2
 1143  00001c08  1420000c	bnez	r1,L66_LF2
 1144  00001c0c  54000000	nop; delay slot nop
 1145  00001c10  08000024	j	L65_LF2
 1146  00001c14  54000000	nop; delay slot nop
 1147  00001c18          	L67_LF2:
 1148  00001c18          	L66_LF2:
 1149  00001c18  8fc1fff4	lw	r1,-12(r30)
 1150  00001c1c  00011820	add	r3,r0,r1
 1151  00001c20  50620002	slli	r2,r3,#0x2
 1152  00001c24  00411020	add	r2,r2,r1
 1153  00001c28  50410001	slli	r1,r2,#0x1
 1154  00001c2c  afc1fff4	sw	-12(r30),r1
 1155  00001c30  0bffffc8	j	L64_LF2
 1156  00001c34  54000000	nop; delay slot nop
 1157  00001c38          	L65_LF2:
 1158  00001c38  54000000	nop
 1159  00001c3c          	L68_LF2:
 1160  00001c3c  8fc1fff4	lw	r1,-12(r30)
 1161  00001c40  2002000a	addi	r2,r0,#10
 1162  00001c44  00200035	movi2fp	f0,r1
 1163  00001c48  00400835	movi2fp	f1,r2
 1164  00001c4c  0401000f	div	f0,f0,f1
 1165  00001c50  00000834	movfp2i	r1,f0
 1166  00001c54  afc1fff4	sw	-12(r30),r1
 1167  00001c58  8fc10004	lw	r1,4(r30)
 1168  00001c5c  20220001	addi	r2,r1,#1
 1169  00001c60  afc20004	sw	4(r30),r2
 1170  00001c64  8fc20000	lw	r2,(r30)
 1171  00001c68  8fc3fff4	lw	r3,-12(r30)
 1172  00001c6c  00400035	movi2fp	f0,r2
 1173  00001c70  00600835	movi2fp	f1,r3
 1174  00001c74  0401000f	div	f0,f0,f1
 1175  00001c78  00001034	movfp2i	r2,f0
 1176  00001c7c  00021820	add	r3,r0,r2
 1177  00001c80  20620030	addi	r2,r3,#48
 1178  00001c84  a0220000	sb	(r1),r2
 1179  00001c88  8fc10000	lw	r1,(r30)
 1180  00001c8c  8fc3fff4	lw	r3,-12(r30)
 1181  00001c90  00200035	movi2fp	f0,r1
 1182  00001c94  00600835	movi2fp	f1,r3
 1183  00001c98  0401000f	div	f0,f0,f1
 1184  00001c9c  00001034	movfp2i	r2,f0
 1185  00001ca0  8fc3fff4	lw	r3,-12(r30)
 1186  00001ca4  00400035	movi2fp	f0,r2
 1187  00001ca8  00600835	movi2fp	f1,r3
 1188  00001cac  0401000e	mult	f0,f0,f1
 1189  00001cb0  00001034	movfp2i	r2,f0
 1190  00001cb4  00220822	sub	r1,r1,r2
 1191  00001cb8  afc10000	sw	(r30),r1
 1192  00001cbc          	L70_LF2:
 1193  00001cbc  8fc1fff4	lw	r1,-12(r30)
 1194  00001cc0  6c220001	sgti	r2,r1,#1
 1195  00001cc4  1440000c	bnez	r2,L71_LF2
 1196  00001cc8  54000000	nop; delay slot nop
 1197  00001ccc  0800000c	j	L61_LF2
 1198  00001cd0  54000000	nop; delay slot nop
 1199  00001cd4          	L71_LF2:
 1200  00001cd4  0bffff64	j	L68_LF2
 1201  00001cd8  54000000	nop; delay slot nop
 1202  00001cdc          	L69_LF2:
 1203  00001cdc          	L63_LF2:
 1204  00001cdc          	L61_LF2:
 1205  00001cdc  8fc10004	lw	r1,4(r30)
 1206  00001ce0  20020000	addi	r2,r0,(#0x0)&0xff
 1207  00001ce4  a0220000	sb	(r1),r2
 1208  00001ce8          	L59_LF2:
 1209  00001ce8  8fa20000	lw	r2,0(r29)
 1210  00001cec  8fa30004	lw	r3,4(r29)
 1211  00001cf0  8fdffff8	lw	r31,-8(r30)
 1212  00001cf4  001ee820	add	r29,r0,r30
 1213  00001cf8  8fdefffc	lw	r30,-4(r30)
 1214  00001cfc  4be00000	jr	r31
 1215  00001d00  54000000	nop
 1216  00001d04          	.endproc _ditoa
 1217  00001d04          	.align 2
 1218  00001d04          	.proc _dstrtol
 1219  00001d04          	.global _dstrtol
 1220  00001d04          	_dstrtol:
 1221                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1222  00001d04  afbefffc	sw	-4(r29),r30; push fp
 1223  00001d08  001df020	add	r30,r0,r29; fp = sp
 1224  00001d0c  afbffff8	sw	-8(r29),r31; push ret addr
 1225  00001d10  2fbd0020	subui	r29,r29,#32; alloc local storage
 1226  00001d14  afa20000	sw	0(r29),r2
 1227  00001d18  20010000	addi	r1,r0,#0
 1228  00001d1c  afc1fff4	sw	-12(r30),r1
 1229  00001d20          	L73_LF2:
 1230  00001d20  8fc10000	lw	r1,(r30)
 1231  00001d24  90220000	lbu	r2,(r1)
 1232  00001d28  60410020	seqi	r1,r2,#32
 1233  00001d2c  14200034	bnez	r1,L75_LF2
 1234  00001d30  54000000	nop; delay slot nop
 1235  00001d34  8fc10000	lw	r1,(r30)
 1236  00001d38  90220000	lbu	r2,(r1)
 1237  00001d3c  60410009	seqi	r1,r2,#9
 1238  00001d40  14200020	bnez	r1,L75_LF2
 1239  00001d44  54000000	nop; delay slot nop
 1240  00001d48  8fc10000	lw	r1,(r30)
 1241  00001d4c  90220000	lbu	r2,(r1)
 1242  00001d50  6041000a	seqi	r1,r2,#10
 1243  00001d54  1420000c	bnez	r1,L75_LF2
 1244  00001d58  54000000	nop; delay slot nop
 1245  00001d5c  0800001c	j	L74_LF2
 1246  00001d60  54000000	nop; delay slot nop
 1247  00001d64          	L75_LF2:
 1248  00001d64  8fc20000	lw	r2,(r30)
 1249  00001d68  20410001	addi	r1,r2,#1
 1250  00001d6c  00011020	add	r2,r0,r1
 1251  00001d70  afc20000	sw	(r30),r2
 1252  00001d74  0bffffa8	j	L73_LF2
 1253  00001d78  54000000	nop; delay slot nop
 1254  00001d7c          	L74_LF2:
 1255  00001d7c  8fc10004	lw	r1,4(r30)
 1256  00001d80  64220000	snei	r2,r1,#0
 1257  00001d84  10400010	beqz	r2,L76_LF2
 1258  00001d88  54000000	nop; delay slot nop
 1259  00001d8c  8fc10004	lw	r1,4(r30)
 1260  00001d90  8fc20000	lw	r2,(r30)
 1261  00001d94  ac220000	sw	(r1),r2
 1262  00001d98          	L76_LF2:
 1263  00001d98  8fc10000	lw	r1,(r30)
 1264  00001d9c  90220000	lbu	r2,(r1)
 1265  00001da0  64410000	snei	r1,r2,#0
 1266  00001da4  14200010	bnez	r1,L77_LF2
 1267  00001da8  54000000	nop; delay slot nop
 1268  00001dac  8fc1fff4	lw	r1,-12(r30)
 1269  00001db0  08000294	j	L72_LF2
 1270  00001db4  54000000	nop; delay slot nop
 1271  00001db8          	L77_LF2:
 1272  00001db8  8fc10000	lw	r1,(r30)
 1273  00001dbc  90220000	lbu	r2,(r1)
 1274  00001dc0  6041002d	seqi	r1,r2,#45
 1275  00001dc4  10200024	beqz	r1,L78_LF2
 1276  00001dc8  54000000	nop; delay slot nop
 1277  00001dcc  2001ffff	addi	r1,r0,#-1
 1278  00001dd0  afc1ffec	sw	-20(r30),r1
 1279  00001dd4  8fc20000	lw	r2,(r30)
 1280  00001dd8  20410001	addi	r1,r2,#1
 1281  00001ddc  00011020	add	r2,r0,r1
 1282  00001de0  afc20000	sw	(r30),r2
 1283  00001de4  0800000c	j	L79_LF2
 1284  00001de8  54000000	nop; delay slot nop
 1285  00001dec          	L78_LF2:
 1286  00001dec  20010001	addi	r1,r0,#1
 1287  00001df0  afc1ffec	sw	-20(r30),r1
 1288  00001df4          	L79_LF2:
 1289  00001df4  8fc10008	lw	r1,8(r30)
 1290  00001df8  64220000	snei	r2,r1,#0
 1291  00001dfc  14400090	bnez	r2,L80_LF2
 1292  00001e00  54000000	nop; delay slot nop
 1293  00001e04  8fc10000	lw	r1,(r30)
 1294  00001e08  90220000	lbu	r2,(r1)
 1295  00001e0c  60410030	seqi	r1,r2,#48
 1296  00001e10  10200074	beqz	r1,L81_LF2
 1297  00001e14  54000000	nop; delay slot nop
 1298  00001e18  8fc20000	lw	r2,(r30)
 1299  00001e1c  20410001	addi	r1,r2,#1
 1300  00001e20  00011020	add	r2,r0,r1
 1301  00001e24  afc20000	sw	(r30),r2
 1302  00001e28  8fc10000	lw	r1,(r30)
 1303  00001e2c  90220000	lbu	r2,(r1)
 1304  00001e30  60410078	seqi	r1,r2,#120
 1305  00001e34  14200020	bnez	r1,L83_LF2
 1306  00001e38  54000000	nop; delay slot nop
 1307  00001e3c  8fc10000	lw	r1,(r30)
 1308  00001e40  90220000	lbu	r2,(r1)
 1309  00001e44  60410058	seqi	r1,r2,#88
 1310  00001e48  1420000c	bnez	r1,L83_LF2
 1311  00001e4c  54000000	nop; delay slot nop
 1312  00001e50  08000024	j	L82_LF2
 1313  00001e54  54000000	nop; delay slot nop
 1314  00001e58          	L83_LF2:
 1315  00001e58  20010010	addi	r1,r0,#16
 1316  00001e5c  afc10008	sw	8(r30),r1
 1317  00001e60  8fc20000	lw	r2,(r30)
 1318  00001e64  20410001	addi	r1,r2,#1
 1319  00001e68  00011020	add	r2,r0,r1
 1320  00001e6c  afc20000	sw	(r30),r2
 1321  00001e70  0800000c	j	L84_LF2
 1322  00001e74  54000000	nop; delay slot nop
 1323  00001e78          	L82_LF2:
 1324  00001e78  20010008	addi	r1,r0,#8
 1325  00001e7c  afc10008	sw	8(r30),r1
 1326  00001e80          	L84_LF2:
 1327  00001e80  0800000c	j	L80_LF2
 1328  00001e84  54000000	nop; delay slot nop
 1329  00001e88          	L81_LF2:
 1330  00001e88  2001000a	addi	r1,r0,#10
 1331  00001e8c  afc10008	sw	8(r30),r1
 1332  00001e90          	L85_LF2:
 1333  00001e90          	L80_LF2:
 1334  00001e90  8fc10008	lw	r1,8(r30)
 1335  00001e94  70220000	slei	r2,r1,#0
 1336  00001e98  1440001c	bnez	r2,L87_LF2
 1337  00001e9c  54000000	nop; delay slot nop
 1338  00001ea0  8fc10008	lw	r1,8(r30)
 1339  00001ea4  6c220010	sgti	r2,r1,#16
 1340  00001ea8  1440000c	bnez	r2,L87_LF2
 1341  00001eac  54000000	nop; delay slot nop
 1342  00001eb0  08000010	j	L86_LF2
 1343  00001eb4  54000000	nop; delay slot nop
 1344  00001eb8          	L87_LF2:
 1345  00001eb8  8fc1fff4	lw	r1,-12(r30)
 1346  00001ebc  08000188	j	L72_LF2
 1347  00001ec0  54000000	nop; delay slot nop
 1348  00001ec4          	L86_LF2:
 1349  00001ec4  54000000	nop
 1350  00001ec8          	L88_LF2:
 1351  00001ec8  8fc10000	lw	r1,(r30)
 1352  00001ecc  90220000	lbu	r2,(r1)
 1353  00001ed0  6c41002f	sgtui	r1,r2,#47
 1354  00001ed4  10200030	beqz	r1,L91_LF2
 1355  00001ed8  54000000	nop; delay slot nop
 1356  00001edc  8fc10000	lw	r1,(r30)
 1357  00001ee0  90220000	lbu	r2,(r1)
 1358  00001ee4  70410039	sleui	r1,r2,#57
 1359  00001ee8  1020001c	beqz	r1,L91_LF2
 1360  00001eec  54000000	nop; delay slot nop
 1361  00001ef0  8fc10000	lw	r1,(r30)
 1362  00001ef4  90220000	lbu	r2,(r1)
 1363  00001ef8  2041ffd0	addi	r1,r2,#-48
 1364  00001efc  afc1fff0	sw	-16(r30),r1
 1365  00001f00  0800008c	j	L92_LF2
 1366  00001f04  54000000	nop; delay slot nop
 1367  00001f08          	L91_LF2:
 1368  00001f08  8fc10000	lw	r1,(r30)
 1369  00001f0c  90220000	lbu	r2,(r1)
 1370  00001f10  6c410060	sgtui	r1,r2,#96
 1371  00001f14  10200030	beqz	r1,L93_LF2
 1372  00001f18  54000000	nop; delay slot nop
 1373  00001f1c  8fc10000	lw	r1,(r30)
 1374  00001f20  90220000	lbu	r2,(r1)
 1375  00001f24  7041007a	sleui	r1,r2,#122
 1376  00001f28  1020001c	beqz	r1,L93_LF2
 1377  00001f2c  54000000	nop; delay slot nop
 1378  00001f30  8fc10000	lw	r1,(r30)
 1379  00001f34  90220000	lbu	r2,(r1)
 1380  00001f38  2041ffa9	addi	r1,r2,#-87
 1381  00001f3c  afc1fff0	sw	-16(r30),r1
 1382  00001f40  0800004c	j	L92_LF2
 1383  00001f44  54000000	nop; delay slot nop
 1384  00001f48          	L93_LF2:
 1385  00001f48  8fc10000	lw	r1,(r30)
 1386  00001f4c  90220000	lbu	r2,(r1)
 1387  00001f50  6c410040	sgtui	r1,r2,#64
 1388  00001f54  10200030	beqz	r1,L95_LF2
 1389  00001f58  54000000	nop; delay slot nop
 1390  00001f5c  8fc10000	lw	r1,(r30)
 1391  00001f60  90220000	lbu	r2,(r1)
 1392  00001f64  7041005a	sleui	r1,r2,#90
 1393  00001f68  1020001c	beqz	r1,L95_LF2
 1394  00001f6c  54000000	nop; delay slot nop
 1395  00001f70  8fc10000	lw	r1,(r30)
 1396  00001f74  90220000	lbu	r2,(r1)
 1397  00001f78  2041ffc9	addi	r1,r2,#-55
 1398  00001f7c  afc1fff0	sw	-16(r30),r1
 1399  00001f80  0800000c	j	L92_LF2
 1400  00001f84  54000000	nop; delay slot nop
 1401  00001f88          	L95_LF2:
 1402  00001f88  200103e8	addi	r1,r0,#1000
 1403  00001f8c  afc1fff0	sw	-16(r30),r1
 1404  00001f90          	L96_LF2:
 1405  00001f90          	L94_LF2:
 1406  00001f90          	L92_LF2:
 1407  00001f90  8fc1fff0	lw	r1,-16(r30)
 1408  00001f94  8fc20008	lw	r2,8(r30)
 1409  00001f98  0022082a	slt	r1,r1,r2
 1410  00001f9c  10200040	beqz	r1,L90_LF2
 1411  00001fa0  54000000	nop; delay slot nop
 1412  00001fa4  8fc1fff4	lw	r1,-12(r30)
 1413  00001fa8  8fc20008	lw	r2,8(r30)
 1414  00001fac  00200035	movi2fp	f0,r1
 1415  00001fb0  00400835	movi2fp	f1,r2
 1416  00001fb4  0401000e	mult	f0,f0,f1
 1417  00001fb8  00000834	movfp2i	r1,f0
 1418  00001fbc  afc1fff4	sw	-12(r30),r1
 1419  00001fc0  8fc1fff4	lw	r1,-12(r30)
 1420  00001fc4  8fc2fff0	lw	r2,-16(r30)
 1421  00001fc8  00220820	add	r1,r1,r2
 1422  00001fcc  afc1fff4	sw	-12(r30),r1
 1423  00001fd0  8fc20000	lw	r2,(r30)
 1424  00001fd4  20410001	addi	r1,r2,#1
 1425  00001fd8  00011020	add	r2,r0,r1
 1426  00001fdc  afc20000	sw	(r30),r2
 1427  00001fe0          	L97_LF2:
 1428  00001fe0          	L90_LF2:
 1429  00001fe0  8fc1fff0	lw	r1,-16(r30)
 1430  00001fe4  8fc20008	lw	r2,8(r30)
 1431  00001fe8  0022082a	slt	r1,r1,r2
 1432  00001fec  1420000c	bnez	r1,L98_LF2
 1433  00001ff0  54000000	nop; delay slot nop
 1434  00001ff4  0800000c	j	L89_LF2
 1435  00001ff8  54000000	nop; delay slot nop
 1436  00001ffc          	L98_LF2:
 1437  00001ffc  0bfffec8	j	L88_LF2
 1438  00002000  54000000	nop; delay slot nop
 1439  00002004          	L89_LF2:
 1440  00002004  8fc10004	lw	r1,4(r30)
 1441  00002008  64220000	snei	r2,r1,#0
 1442  0000200c  10400010	beqz	r2,L99_LF2
 1443  00002010  54000000	nop; delay slot nop
 1444  00002014  8fc10004	lw	r1,4(r30)
 1445  00002018  8fc20000	lw	r2,(r30)
 1446  0000201c  ac220000	sw	(r1),r2
 1447  00002020          	L99_LF2:
 1448  00002020  8fc1fff4	lw	r1,-12(r30)
 1449  00002024  8fc2ffec	lw	r2,-20(r30)
 1450  00002028  00200035	movi2fp	f0,r1
 1451  0000202c  00400835	movi2fp	f1,r2
 1452  00002030  0401000e	mult	f0,f0,f1
 1453  00002034  00000834	movfp2i	r1,f0
 1454  00002038  afc1fff4	sw	-12(r30),r1
 1455  0000203c  8fc1fff4	lw	r1,-12(r30)
 1456  00002040  08000004	j	L72_LF2
 1457  00002044  54000000	nop; delay slot nop
 1458  00002048          	L72_LF2:
 1459  00002048  8fa20000	lw	r2,0(r29)
 1460  0000204c  8fdffff8	lw	r31,-8(r30)
 1461  00002050  001ee820	add	r29,r0,r30
 1462  00002054  8fdefffc	lw	r30,-4(r30)
 1463  00002058  4be00000	jr	r31
 1464  0000205c  54000000	nop
 1465  00002060          	.endproc _dstrtol
 1466  00002060          	.align 2
 1467  00002060          	.proc _bcopy
 1468  00002060          	.global _bcopy
 1469  00002060          	_bcopy:
 1470                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1471  00002060  afbefffc	sw	-4(r29),r30; push fp
 1472  00002064  001df020	add	r30,r0,r29; fp = sp
 1473  00002068  afbffff8	sw	-8(r29),r31; push ret addr
 1474  0000206c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1475  00002070  afa20000	sw	0(r29),r2
 1476  00002074  afa30004	sw	4(r29),r3
 1477  00002078  54000000	nop
 1478  0000207c          	L101_LF2:
 1479  0000207c  8fc10008	lw	r1,8(r30)
 1480  00002080  2022ffff	addi	r2,r1,#-1
 1481  00002084  afc20008	sw	8(r30),r2
 1482  00002088  6c210000	sgti	r1,r1,#0
 1483  0000208c  1420000c	bnez	r1,L103_LF2
 1484  00002090  54000000	nop; delay slot nop
 1485  00002094  0800002c	j	L102_LF2
 1486  00002098  54000000	nop; delay slot nop
 1487  0000209c          	L103_LF2:
 1488  0000209c  8fc10004	lw	r1,4(r30)
 1489  000020a0  20220001	addi	r2,r1,#1
 1490  000020a4  afc20004	sw	4(r30),r2
 1491  000020a8  8fc20000	lw	r2,(r30)
 1492  000020ac  20430001	addi	r3,r2,#1
 1493  000020b0  afc30000	sw	(r30),r3
 1494  000020b4  80420000	lb	r2,(r2)
 1495  000020b8  a0220000	sb	(r1),r2
 1496  000020bc  0bffffbc	j	L101_LF2
 1497  000020c0  54000000	nop; delay slot nop
 1498  000020c4          	L102_LF2:
 1499  000020c4          	L100_LF2:
 1500  000020c4  8fa20000	lw	r2,0(r29)
 1501  000020c8  8fa30004	lw	r3,4(r29)
 1502  000020cc  8fdffff8	lw	r31,-8(r30)
 1503  000020d0  001ee820	add	r29,r0,r30
 1504  000020d4  8fdefffc	lw	r30,-4(r30)
 1505  000020d8  4be00000	jr	r31
 1506  000020dc  54000000	nop
 1507  000020e0          	.endproc _bcopy
 1508  000020e0          	.align 2
 1509  000020e0          	.proc _bzero
 1510  000020e0          	.global _bzero
 1511  000020e0          	_bzero:
 1512                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1513  000020e0  afbefffc	sw	-4(r29),r30; push fp
 1514  000020e4  001df020	add	r30,r0,r29; fp = sp
 1515  000020e8  afbffff8	sw	-8(r29),r31; push ret addr
 1516  000020ec  2fbd0010	subui	r29,r29,#16; alloc local storage
 1517  000020f0  afa20000	sw	0(r29),r2
 1518  000020f4  54000000	nop
 1519  000020f8          	L105_LF2:
 1520  000020f8  8fc10004	lw	r1,4(r30)
 1521  000020fc  2022ffff	addi	r2,r1,#-1
 1522  00002100  afc20004	sw	4(r30),r2
 1523  00002104  6c210000	sgti	r1,r1,#0
 1524  00002108  1420000c	bnez	r1,L107_LF2
 1525  0000210c  54000000	nop; delay slot nop
 1526  00002110  08000020	j	L106_LF2
 1527  00002114  54000000	nop; delay slot nop
 1528  00002118          	L107_LF2:
 1529  00002118  8fc10000	lw	r1,(r30)
 1530  0000211c  20220001	addi	r2,r1,#1
 1531  00002120  afc20000	sw	(r30),r2
 1532  00002124  20020000	addi	r2,r0,(#0x0)&0xff
 1533  00002128  a0220000	sb	(r1),r2
 1534  0000212c  0bffffc8	j	L105_LF2
 1535  00002130  54000000	nop; delay slot nop
 1536  00002134          	L106_LF2:
 1537  00002134          	L104_LF2:
 1538  00002134  8fa20000	lw	r2,0(r29)
 1539  00002138  8fdffff8	lw	r31,-8(r30)
 1540  0000213c  001ee820	add	r29,r0,r30
 1541  00002140  8fdefffc	lw	r30,-4(r30)
 1542  00002144  4be00000	jr	r31
 1543  00002148  54000000	nop
 1544  0000214c          	.endproc _bzero
 1545  0000214c          	.align 2
 1546  0000214c          	.proc _min
 1547  0000214c          	.global _min
 1548  0000214c          	_min:
 1549                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1550  0000214c  afbefffc	sw	-4(r29),r30; push fp
 1551  00002150  001df020	add	r30,r0,r29; fp = sp
 1552  00002154  afbffff8	sw	-8(r29),r31; push ret addr
 1553  00002158  2fbd0010	subui	r29,r29,#16; alloc local storage
 1554  0000215c  afa20000	sw	0(r29),r2
 1555  00002160  afa30004	sw	4(r29),r3
 1556  00002164  8fc10000	lw	r1,(r30)
 1557  00002168  8fc20004	lw	r2,4(r30)
 1558  0000216c  0022182c	sle	r3,r1,r2
 1559  00002170  14600008	bnez	r3,L109_LF2
 1560  00002174  54000000	nop; delay slot nop
 1561  00002178  8fc10004	lw	r1,4(r30)
 1562  0000217c          	L109_LF2:
 1563  0000217c  08000004	j	L108_LF2
 1564  00002180  54000000	nop; delay slot nop
 1565  00002184          	L108_LF2:
 1566  00002184  8fa20000	lw	r2,0(r29)
 1567  00002188  8fa30004	lw	r3,4(r29)
 1568  0000218c  8fdffff8	lw	r31,-8(r30)
 1569  00002190  001ee820	add	r29,r0,r30
 1570  00002194  8fdefffc	lw	r30,-4(r30)
 1571  00002198  4be00000	jr	r31
 1572  0000219c  54000000	nop
 1573  000021a0          	.endproc _min
 1574  000021a0          	.align 2
 1575  000021a0          	.proc _max
 1576  000021a0          	.global _max
 1577  000021a0          	_max:
 1578                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1579  000021a0  afbefffc	sw	-4(r29),r30; push fp
 1580  000021a4  001df020	add	r30,r0,r29; fp = sp
 1581  000021a8  afbffff8	sw	-8(r29),r31; push ret addr
 1582  000021ac  2fbd0010	subui	r29,r29,#16; alloc local storage
 1583  000021b0  afa20000	sw	0(r29),r2
 1584  000021b4  afa30004	sw	4(r29),r3
 1585  000021b8  8fc10000	lw	r1,(r30)
 1586  000021bc  8fc20004	lw	r2,4(r30)
 1587  000021c0  0022182d	sge	r3,r1,r2
 1588  000021c4  14600008	bnez	r3,L111_LF2
 1589  000021c8  54000000	nop; delay slot nop
 1590  000021cc  8fc10004	lw	r1,4(r30)
 1591  000021d0          	L111_LF2:
 1592  000021d0  08000004	j	L110_LF2
 1593  000021d4  54000000	nop; delay slot nop
 1594  000021d8          	L110_LF2:
 1595  000021d8  8fa20000	lw	r2,0(r29)
 1596  000021dc  8fa30004	lw	r3,4(r29)
 1597  000021e0  8fdffff8	lw	r31,-8(r30)
 1598  000021e4  001ee820	add	r29,r0,r30
 1599  000021e8  8fdefffc	lw	r30,-4(r30)
 1600  000021ec  4be00000	jr	r31
 1601  000021f0  54000000	nop
 1602  000021f4          	.endproc _max
 1603                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1604                      ;;;
 1605                      ;;; Most of the traps are called in files from libtraps.
 1608  000021f4          	.align 2
 1609  000021f4          	.proc _exit
 1610  000021f4          	.global _exit
 1611  000021f4          	_exit:
 1612  000021f4  44000300	trap	#0x300
 1613  000021f8  4be00000	jr	r31
 1614  000021fc  54000000	nop
 1615  00002200          	.endproc _exit
 1617                      ; for the benefit of gcc.
 1618  00002200          	.proc ___main
 1619  00002200          	.global ___main
 1620  00002200          	___main:
 1621  00002200  4be00000	jr	r31
 1622  00002204  54000000	nop
 1623  00002208          	.endproc ___main
 1624  00002208          	.text
 1625  00002208          	.global _etext
 1626  00002208          	_etext:
 1627  00002208          	.align 3
 1628  00002208          	.data
 1629  000031ea          	.global _edata
 1630  000031ea          	_edata:
