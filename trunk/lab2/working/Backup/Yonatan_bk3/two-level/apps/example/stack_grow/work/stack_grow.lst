 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 212
    4                      ; Text size: 4388
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f70726f	
   82  00003018  63735f63	
   82  0000301c  6f6d706c	
   82  00003020  65746564	
   82  00003024  5f73656d	
   82  00003028  6170686f	
   82  0000302c  72653e0a	
   82  00003030  00      	
   83  00003031          	.align 2
   84  00003034          	LC1_LF0:
   85  00003034  73746163	.ascii "stack_grow (%d): Initializing array of size 10000 (stack larger than o"
   85  00003038  6b5f6772	
   85  0000303c  6f772028	
   85  00003040  2564293a	
   85  00003044  20496e69	
   85  00003048  7469616c	
   85  0000304c  697a696e	
   85  00003050  67206172	
   85  00003054  72617920	
   85  00003058  6f662073	
   85  0000305c  697a6520	
   85  00003060  31303030	
   85  00003064  30202873	
   85  00003068  7461636b	
   85  0000306c  206c6172	
   85  00003070  67657220	
   85  00003074  7468616e	
   85  00003078  206f    	
   86  0000307a  6e652070	.ascii "ne page)\n\000"
   86  0000307e  61676529	
   86  00003082  0a00    	
   87  00003084          	.align 2
   88  00003084          	LC2_LF0:
   89  00003084  73746163	.ascii "stack_grow (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   89  00003088  6b5f6772	
   89  0000308c  6f772028	
   89  00003090  2564293a	
   89  00003094  20426164	
   89  00003098  2073656d	
   89  0000309c  6170686f	
   89  000030a0  72652073	
   89  000030a4  5f70726f	
   89  000030a8  63735f63	
   89  000030ac  6f6d706c	
   89  000030b0  65746564	
   89  000030b4  20282564	
   89  000030b8  29210a00	
   90  000030bc          	.align 2
   91  000030bc          	LC3_LF0:
   92  000030bc  73746163	.ascii "stack_grow (%d): Done!\n\000"
   92  000030c0  6b5f6772	
   92  000030c4  6f772028	
   92  000030c8  2564293a	
   92  000030cc  20446f6e	
   92  000030d0  65210a00	
   93  000030d4          	.text
   94  000010d4          	.align 2
   95  000010d4          	.proc _main
   96  000010d4          	.global _main
   97  000010d4          	_main:
   98                      ;  Function 'main'; 10000 bytes of locals, 0 regs to save.
   99  000010d4  afbefffc	sw	-4(r29),r30; push fp
  100  000010d8  001df020	add	r30,r0,r29; fp = sp
  101  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  102  000010e0  2fbd2718	subui	r29,r29,#10008; alloc local storage
  103  000010e4  8fc20000	lw	r2,(r30)
  104  000010e8  8fc30004	lw	r3,4(r30)
  105  000010ec  0c00102c	jal	___main
  106  000010f0  54000000	nop; not filled.
  107  000010f4  64410002	snei	r1,r2,#2
  108  000010f8  10200028	beqz	r1,L22_LF0
  109  000010fc  54000000	nop; not filled.
  110  00001100  23bdfff8	addi	r29,r29,#-8
  111  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  112  00001108  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  113  0000110c  afa40000	sw	(r29),r4
  114  00001110  0c000148	jal	_Printf
  115  00001114  54000000	nop; not filled.
  116  00001118  0c000248	jal	_Exit
  117  0000111c  54000000	nop; not filled.
  118  00001120  23bd0008	addi	r29,r29,#8
  119  00001124          	L22_LF0:
  120  00001124  23bdfff0	addi	r29,r29,#-16
  121  00001128  8c630004	lw	r3,4(r3)
  122  0000112c  afa30000	sw	(r29),r3
  123  00001130  20040000	addi	r4,r0,#0
  124  00001134  afa40004	sw	4(r29),r4
  125  00001138  2004000a	addi	r4,r0,#10
  126  0000113c  afa40008	sw	8(r29),r4
  127  00001140  0c000adc	jal	_dstrtol
  128  00001144  54000000	nop; not filled.
  129  00001148  00011820	add	r3,r0,r1
  130  0000114c  0c000118	jal	_getpid
  131  00001150  54000000	nop; not filled.
  132  00001154  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  133  00001158  24843034	addui	r4,r4,(LC1_LF0)&0xffff
  134  0000115c  afa40000	sw	(r29),r4
  135  00001160  afa10004	sw	4(r29),r1
  136  00001164  0c0000f4	jal	_Printf
  137  00001168  54000000	nop; not filled.
  138  0000116c  23bd0010	addi	r29,r29,#16
  139  00001170  23c2d8e8	addi	r2,r30,#-10008
  140  00001174  23dffff7	addi	r31,r30,#-9
  141  00001178          	L26_LF0:
  142  00001178  20040000	addi	r4,r0,(#0x0)&0xff
  143  0000117c  a0440000	sb	(r2),r4
  144  00001180  20420001	addi	r2,r2,#1
  145  00001184  005f082c	sle	r1,r2,r31
  146  00001188  1420ffec	bnez	r1,L26_LF0
  147  0000118c  54000000	nop; not filled.
  148  00001190  23bdfff8	addi	r29,r29,#-8
  149  00001194  afa30000	sw	(r29),r3
  150  00001198  0c000114	jal	_sem_signal
  151  0000119c  54000000	nop; not filled.
  152  000011a0  23bd0008	addi	r29,r29,#8
  153  000011a4  64210001	snei	r1,r1,#1
  154  000011a8  10200038	beqz	r1,L28_LF0
  155  000011ac  54000000	nop; not filled.
  156  000011b0  0c0000b4	jal	_getpid
  157  000011b4  54000000	nop; not filled.
  158  000011b8  23bdfff0	addi	r29,r29,#-16
  159  000011bc  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  160  000011c0  24843084	addui	r4,r4,(LC2_LF0)&0xffff
  161  000011c4  afa40000	sw	(r29),r4
  162  000011c8  afa10004	sw	4(r29),r1
  163  000011cc  afa30008	sw	8(r29),r3
  164  000011d0  0c000088	jal	_Printf
  165  000011d4  54000000	nop; not filled.
  166  000011d8  0c000188	jal	_Exit
  167  000011dc  54000000	nop; not filled.
  168  000011e0  23bd0010	addi	r29,r29,#16
  169  000011e4          	L28_LF0:
  170  000011e4  0c000080	jal	_getpid
  171  000011e8  54000000	nop; not filled.
  172  000011ec  23bdfff8	addi	r29,r29,#-8
  173  000011f0  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  174  000011f4  248430bc	addui	r4,r4,(LC3_LF0)&0xffff
  175  000011f8  afa40000	sw	(r29),r4
  176  000011fc  afa10004	sw	4(r29),r1
  177  00001200  0c000058	jal	_Printf
  178  00001204  54000000	nop; not filled.
  179  00001208  23bd0008	addi	r29,r29,#8
  180  0000120c  0c000f00	jal	_exit
  181  00001210  54000000	nop
  182  00001214          	.endproc _main
  183                      ;;;
  184                      ;;; Stub functions for DLX traps.
  185                      ;;;
  186                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  187                      ;;;
  188                      ;;; The traps such as Open and Close
  189                      ;;; (note the capital letters) are for use by user programs.  The traps
  190                      ;;; with names such as open and close (lower case) are for use by the OS.
  191                      ;;;
  194  00001214          	.align 2
  196                      ;;; The following are the traps to be used by user-level programs
  197                      ;;;
  199  00001214          	.align 2
  200  00001214          	.proc _Open
  201  00001214          	.global _Open
  202  00001214          	_Open:
  203                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  204                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  205                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  206  00001214  44000213	trap	#0x213
  207  00001218  4be00000	jr	r31
  208  0000121c  54000000	nop
  209  00001220          	.endproc _Open
  211  00001220          	.proc _Close
  212  00001220          	.global _Close
  213  00001220          	_Close:
  214  00001220  44000214	trap	#0x214
  215  00001224  4be00000	jr	r31
  216  00001228  54000000	nop
  217  0000122c          	.endproc _Close
  219  0000122c          	.proc _Read
  220  0000122c          	.global _Read
  221  0000122c          	_Read:
  222  0000122c  44000210	trap	#0x210
  223  00001230  4be00000	jr	r31
  224  00001234  54000000	nop
  225  00001238          	.endproc _Read
  227  00001238          	.proc _Write
  228  00001238          	.global _Write
  229  00001238          	_Write:
  230  00001238  44000211	trap	#0x211
  231  0000123c  4be00000	jr	r31
  232  00001240  54000000	nop
  233  00001244          	.endproc _Write
  235  00001244          	.proc _Lseek
  236  00001244          	.global _Lseek
  237  00001244          	_Lseek:
  238  00001244  44000212	trap	#0x212
  239  00001248  4be00000	jr	r31
  240  0000124c  54000000	nop
  241  00001250          	.endproc _Lseek
  243  00001250          	.proc _Putchar
  244  00001250          	.global _Putchar
  245  00001250          	_Putchar:
  246  00001250  44000280	trap	#0x280
  247  00001254  4be00000	jr	r31
  248  00001258  54000000	nop
  249  0000125c          	.endproc _Putchar
  251  0000125c          	.proc _Printf
  252  0000125c          	.global _Printf
  253  0000125c          	_Printf:
  254  0000125c  44000201	trap	#0x201
  255  00001260  4be00000	jr	r31
  256  00001264  54000000	nop
  257  00001268          	.endproc _Printf
  259  00001268          	.proc _getpid
  260  00001268          	.global _getpid
  261  00001268          	_getpid:
  262  00001268  44000431	trap	#0x431
  263  0000126c  4be00000	jr	r31
  264  00001270  54000000	nop
  265  00001274          	.endproc _getpid
  267  00001274          	.proc _process_create
  268  00001274          	.global _process_create
  269  00001274          	_process_create:
  270  00001274  44000432	trap	#0x432
  271  00001278  4be00000	jr	r31
  272  0000127c  54000000	nop
  273  00001280          	.endproc _process_create
  275  00001280          	.proc _shmget
  276  00001280          	.global _shmget
  277  00001280          	_shmget:
  278  00001280  44000440	trap	#0x440
  279  00001284  4be00000	jr	r31
  280  00001288  54000000	nop
  281  0000128c          	.endproc _shmget
  283  0000128c          	.proc _shmat
  284  0000128c          	.global _shmat
  285  0000128c          	_shmat:
  286  0000128c  44000441	trap	#0x441
  287  00001290  4be00000	jr	r31
  288  00001294  54000000	nop
  289  00001298          	.endproc _shmat
  291  00001298          	.proc _sem_create
  292  00001298          	.global _sem_create
  293  00001298          	_sem_create:
  294  00001298  44000450	trap	#0x450
  295  0000129c  4be00000	jr	r31
  296  000012a0  54000000	nop
  297  000012a4          	.endproc _sem_create
  299  000012a4          	.proc _sem_wait
  300  000012a4          	.global _sem_wait
  301  000012a4          	_sem_wait:
  302  000012a4  44000451	trap	#0x451
  303  000012a8  4be00000	jr	r31
  304  000012ac  54000000	nop
  305  000012b0          	.endproc _sem_wait
  307  000012b0          	.proc _sem_signal
  308  000012b0          	.global _sem_signal
  309  000012b0          	_sem_signal:
  310  000012b0  44000452	trap	#0x452
  311  000012b4  4be00000	jr	r31
  312  000012b8  54000000	nop
  313  000012bc          	.endproc _sem_signal
  315  000012bc          	.proc _lock_create
  316  000012bc          	.global _lock_create
  317  000012bc          	_lock_create:
  318  000012bc  44000453	trap	#0x453
  319  000012c0  4be00000	jr	r31
  320  000012c4  54000000	nop
  321  000012c8          	.endproc _lock_create
  323  000012c8          	.proc _lock_acquire
  324  000012c8          	.global _lock_acquire
  325  000012c8          	_lock_acquire:
  326  000012c8  44000454	trap	#0x454
  327  000012cc  4be00000	jr	r31
  328  000012d0  54000000	nop
  329  000012d4          	.endproc _lock_acquire
  331  000012d4          	.proc _lock_release
  332  000012d4          	.global _lock_release
  333  000012d4          	_lock_release:
  334  000012d4  44000455	trap	#0x455
  335  000012d8  4be00000	jr	r31
  336  000012dc  54000000	nop
  337  000012e0          	.endproc _lock_release
  339  000012e0          	.proc _cond_create
  340  000012e0          	.global _cond_create
  341  000012e0          	_cond_create:
  342  000012e0  44000456	trap	#0x456
  343  000012e4  4be00000	jr	r31
  344  000012e8  54000000	nop
  345  000012ec          	.endproc _cond_create
  347  000012ec          	.proc _cond_wait
  348  000012ec          	.global _cond_wait
  349  000012ec          	_cond_wait:
  350  000012ec  44000457	trap	#0x457
  351  000012f0  4be00000	jr	r31
  352  000012f4  54000000	nop
  353  000012f8          	.endproc _cond_wait
  355  000012f8          	.proc _cond_signal
  356  000012f8          	.global _cond_signal
  357  000012f8          	_cond_signal:
  358  000012f8  44000458	trap	#0x458
  359  000012fc  4be00000	jr	r31
  360  00001300  54000000	nop
  361  00001304          	.endproc _cond_signal
  363  00001304          	.proc _cond_broadcast
  364  00001304          	.global _cond_broadcast
  365  00001304          	_cond_broadcast:
  366  00001304  44000459	trap	#0x459
  367  00001308  4be00000	jr	r31
  368  0000130c  54000000	nop
  369  00001310          	.endproc _cond_broadcast
  371  00001310          	.proc _mbox_create
  372  00001310          	.global _mbox_create
  373  00001310          	_mbox_create:
  374  00001310  44000460	trap	#0x460
  375  00001314  4be00000	jr	r31
  376  00001318  54000000	nop
  377  0000131c          	.endproc _mbox_create
  379  0000131c          	.proc _mbox_open
  380  0000131c          	.global _mbox_open
  381  0000131c          	_mbox_open:
  382  0000131c  44000461	trap	#0x461
  383  00001320  4be00000	jr	r31
  384  00001324  54000000	nop
  385  00001328          	.endproc _mbox_open
  387  00001328          	.proc _mbox_close
  388  00001328          	.global _mbox_close
  389  00001328          	_mbox_close:
  390  00001328  44000462	trap	#0x462
  391  0000132c  4be00000	jr	r31
  392  00001330  54000000	nop
  393  00001334          	.endproc _mbox_close
  395  00001334          	.proc _mbox_send
  396  00001334          	.global _mbox_send
  397  00001334          	_mbox_send:
  398  00001334  44000463	trap	#0x463
  399  00001338  4be00000	jr	r31
  400  0000133c  54000000	nop
  401  00001340          	.endproc _mbox_send
  403  00001340          	.proc _mbox_recv
  404  00001340          	.global _mbox_recv
  405  00001340          	_mbox_recv:
  406  00001340  44000464	trap	#0x464
  407  00001344  4be00000	jr	r31
  408  00001348  54000000	nop
  409  0000134c          	.endproc _mbox_recv
  411  0000134c          	.proc _sleep
  412  0000134c          	.global _sleep
  413  0000134c          	_sleep:
  414  0000134c  44000465	trap	#0x465
  415  00001350  4be00000	jr	r31
  416  00001354  54000000	nop
  417  00001358          	.endproc _sleep
  419  00001358          	.proc _yield
  420  00001358          	.global _yield
  421  00001358          	_yield:
  422  00001358  44000466	trap	#0x466
  423  0000135c  4be00000	jr	r31
  424  00001360  54000000	nop
  425  00001364          	.endproc _yield
  428  00001364          	.proc _Exit
  429  00001364          	.global _Exit
  430  00001364          	_Exit:
  431  00001364  44000500	trap	#0x500
  432  00001368  4be00000	jr	r31
  433  0000136c  54000000	nop
  434  00001370          	.endproc _Exit
  437  00001370          	.proc _malloc
  438  00001370          	.global _malloc
  439  00001370          	_malloc:
  440  00001370  44000467	trap	#0x467
  441  00001374  4be00000	jr	r31
  442  00001378          	.endproc _malloc
  445  00001378          	.proc _mfree
  446  00001378          	.global _mfree
  447  00001378          	_mfree:
  448  00001378  44000468	trap	#0x468
  449  0000137c  4be00000	jr	r31
  450  00001380          	.endproc _mfree
  451                      ; Compiled by GCC
  453  00001380          	.align 2
  454  00001380          	.proc _isspace
  455  00001380          	.global _isspace
  456  00001380          	_isspace:
  457                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  458  00001380  afbefffc	sw	-4(r29),r30; push fp
  459  00001384  001df020	add	r30,r0,r29; fp = sp
  460  00001388  afbffff8	sw	-8(r29),r31; push ret addr
  461  0000138c  2fbd0018	subui	r29,r29,#24; alloc local storage
  462  00001390  afa20000	sw	0(r29),r2
  463  00001394  afa30004	sw	4(r29),r3
  464  00001398  afa40008	sw	8(r29),r4
  465  0000139c  83c20003	lb	r2,3(r30)
  466  000013a0  20010000	addi	r1,r0,#0
  467  000013a4  304300ff	andi	r3,r2,#0x00ff
  468  000013a8  60640020	seqi	r4,r3,#32
  469  000013ac  1480002c	bnez	r4,L3_LF2
  470  000013b0  54000000	nop; delay slot nop
  471  000013b4  304300ff	andi	r3,r2,#0x00ff
  472  000013b8  60640009	seqi	r4,r3,#9
  473  000013bc  1480001c	bnez	r4,L3_LF2
  474  000013c0  54000000	nop; delay slot nop
  475  000013c4  304300ff	andi	r3,r2,#0x00ff
  476  000013c8  6064000a	seqi	r4,r3,#10
  477  000013cc  1480000c	bnez	r4,L3_LF2
  478  000013d0  54000000	nop; delay slot nop
  479  000013d4  08000008	j	L2_LF2
  480  000013d8  54000000	nop; delay slot nop
  481  000013dc          	L3_LF2:
  482  000013dc  20010001	addi	r1,r0,#1
  483  000013e0          	L2_LF2:
  484  000013e0  08000004	j	L1_LF2
  485  000013e4  54000000	nop; delay slot nop
  486  000013e8          	L1_LF2:
  487  000013e8  8fa20000	lw	r2,0(r29)
  488  000013ec  8fa30004	lw	r3,4(r29)
  489  000013f0  8fa40008	lw	r4,8(r29)
  490  000013f4  8fdffff8	lw	r31,-8(r30)
  491  000013f8  001ee820	add	r29,r0,r30
  492  000013fc  8fdefffc	lw	r30,-4(r30)
  493  00001400  4be00000	jr	r31
  494  00001404  54000000	nop
  495  00001408          	.endproc _isspace
  496  00001408          	.align 2
  497  00001408          	.proc _isxdigit
  498  00001408          	.global _isxdigit
  499  00001408          	_isxdigit:
  500                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  501  00001408  afbefffc	sw	-4(r29),r30; push fp
  502  0000140c  001df020	add	r30,r0,r29; fp = sp
  503  00001410  afbffff8	sw	-8(r29),r31; push ret addr
  504  00001414  2fbd0018	subui	r29,r29,#24; alloc local storage
  505  00001418  afa20000	sw	0(r29),r2
  506  0000141c  afa30004	sw	4(r29),r3
  507  00001420  afa40008	sw	8(r29),r4
  508  00001424  83c20003	lb	r2,3(r30)
  509  00001428  20010000	addi	r1,r0,#0
  510  0000142c  304300ff	andi	r3,r2,#0x00ff
  511  00001430  6c64002f	sgtui	r4,r3,#47
  512  00001434  1080001c	beqz	r4,L7_LF2
  513  00001438  54000000	nop; delay slot nop
  514  0000143c  304300ff	andi	r3,r2,#0x00ff
  515  00001440  70640039	sleui	r4,r3,#57
  516  00001444  1480005c	bnez	r4,L6_LF2
  517  00001448  54000000	nop; delay slot nop
  518  0000144c  08000004	j	L7_LF2
  519  00001450  54000000	nop; delay slot nop
  520  00001454          	L7_LF2:
  521  00001454  304300ff	andi	r3,r2,#0x00ff
  522  00001458  6c640060	sgtui	r4,r3,#96
  523  0000145c  1080001c	beqz	r4,L8_LF2
  524  00001460  54000000	nop; delay slot nop
  525  00001464  304300ff	andi	r3,r2,#0x00ff
  526  00001468  70640066	sleui	r4,r3,#102
  527  0000146c  14800034	bnez	r4,L6_LF2
  528  00001470  54000000	nop; delay slot nop
  529  00001474  08000004	j	L8_LF2
  530  00001478  54000000	nop; delay slot nop
  531  0000147c          	L8_LF2:
  532  0000147c  304300ff	andi	r3,r2,#0x00ff
  533  00001480  6c640040	sgtui	r4,r3,#64
  534  00001484  10800020	beqz	r4,L5_LF2
  535  00001488  54000000	nop; delay slot nop
  536  0000148c  304300ff	andi	r3,r2,#0x00ff
  537  00001490  70640041	sleui	r4,r3,#65
  538  00001494  1480000c	bnez	r4,L6_LF2
  539  00001498  54000000	nop; delay slot nop
  540  0000149c  08000008	j	L5_LF2
  541  000014a0  54000000	nop; delay slot nop
  542  000014a4          	L6_LF2:
  543  000014a4  20010001	addi	r1,r0,#1
  544  000014a8          	L5_LF2:
  545  000014a8  08000004	j	L4_LF2
  546  000014ac  54000000	nop; delay slot nop
  547  000014b0          	L4_LF2:
  548  000014b0  8fa20000	lw	r2,0(r29)
  549  000014b4  8fa30004	lw	r3,4(r29)
  550  000014b8  8fa40008	lw	r4,8(r29)
  551  000014bc  8fdffff8	lw	r31,-8(r30)
  552  000014c0  001ee820	add	r29,r0,r30
  553  000014c4  8fdefffc	lw	r30,-4(r30)
  554  000014c8  4be00000	jr	r31
  555  000014cc  54000000	nop
  556  000014d0          	.endproc _isxdigit
  557  000014d0          	.align 2
  558  000014d0          	.proc _dstrcpy
  559  000014d0          	.global _dstrcpy
  560  000014d0          	_dstrcpy:
  561                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  562  000014d0  afbefffc	sw	-4(r29),r30; push fp
  563  000014d4  001df020	add	r30,r0,r29; fp = sp
  564  000014d8  afbffff8	sw	-8(r29),r31; push ret addr
  565  000014dc  2fbd0018	subui	r29,r29,#24; alloc local storage
  566  000014e0  afa20000	sw	0(r29),r2
  567  000014e4  afa30004	sw	4(r29),r3
  568  000014e8  8fc10000	lw	r1,(r30)
  569  000014ec  afc1fff4	sw	-12(r30),r1
  570  000014f0          	L10_LF2:
  571  000014f0  8fc10000	lw	r1,(r30)
  572  000014f4  20220001	addi	r2,r1,#1
  573  000014f8  afc20000	sw	(r30),r2
  574  000014fc  8fc20004	lw	r2,4(r30)
  575  00001500  20430001	addi	r3,r2,#1
  576  00001504  afc30004	sw	4(r30),r3
  577  00001508  80420000	lb	r2,(r2)
  578  0000150c  a0220000	sb	(r1),r2
  579  00001510  a3c2fff3	sb	-13(r30),r2
  580  00001514          	L12_LF2:
  581  00001514  93c1fff3	lbu	r1,-13(r30)
  582  00001518  64220000	snei	r2,r1,#0
  583  0000151c  1440000c	bnez	r2,L13_LF2
  584  00001520  54000000	nop; delay slot nop
  585  00001524  0800000c	j	L11_LF2
  586  00001528  54000000	nop; delay slot nop
  587  0000152c          	L13_LF2:
  588  0000152c  0bffffc0	j	L10_LF2
  589  00001530  54000000	nop; delay slot nop
  590  00001534          	L11_LF2:
  591  00001534  8fc1fff4	lw	r1,-12(r30)
  592  00001538  08000004	j	L9_LF2
  593  0000153c  54000000	nop; delay slot nop
  594  00001540          	L9_LF2:
  595  00001540  8fa20000	lw	r2,0(r29)
  596  00001544  8fa30004	lw	r3,4(r29)
  597  00001548  8fdffff8	lw	r31,-8(r30)
  598  0000154c  001ee820	add	r29,r0,r30
  599  00001550  8fdefffc	lw	r30,-4(r30)
  600  00001554  4be00000	jr	r31
  601  00001558  54000000	nop
  602  0000155c          	.endproc _dstrcpy
  603  0000155c          	.align 2
  604  0000155c          	.proc _dstrncpy
  605  0000155c          	.global _dstrncpy
  606  0000155c          	_dstrncpy:
  607                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  608  0000155c  afbefffc	sw	-4(r29),r30; push fp
  609  00001560  001df020	add	r30,r0,r29; fp = sp
  610  00001564  afbffff8	sw	-8(r29),r31; push ret addr
  611  00001568  2fbd0018	subui	r29,r29,#24; alloc local storage
  612  0000156c  afa20000	sw	0(r29),r2
  613  00001570  afa30004	sw	4(r29),r3
  614  00001574  8fc10000	lw	r1,(r30)
  615  00001578  afc1fff4	sw	-12(r30),r1
  616  0000157c          	L15_LF2:
  617  0000157c  8fc10008	lw	r1,8(r30)
  618  00001580  2022ffff	addi	r2,r1,#-1
  619  00001584  afc20008	sw	8(r30),r2
  620  00001588  70210000	slei	r1,r1,#0
  621  0000158c  1020000c	beqz	r1,L18_LF2
  622  00001590  54000000	nop; delay slot nop
  623  00001594  08000048	j	L16_LF2
  624  00001598  54000000	nop; delay slot nop
  625  0000159c          	L18_LF2:
  626  0000159c  8fc10000	lw	r1,(r30)
  627  000015a0  20220001	addi	r2,r1,#1
  628  000015a4  afc20000	sw	(r30),r2
  629  000015a8  8fc20004	lw	r2,4(r30)
  630  000015ac  20430001	addi	r3,r2,#1
  631  000015b0  afc30004	sw	4(r30),r3
  632  000015b4  80420000	lb	r2,(r2)
  633  000015b8  a0220000	sb	(r1),r2
  634  000015bc  a3c2fff3	sb	-13(r30),r2
  635  000015c0          	L17_LF2:
  636  000015c0  93c1fff3	lbu	r1,-13(r30)
  637  000015c4  64220000	snei	r2,r1,#0
  638  000015c8  1440000c	bnez	r2,L19_LF2
  639  000015cc  54000000	nop; delay slot nop
  640  000015d0  0800000c	j	L16_LF2
  641  000015d4  54000000	nop; delay slot nop
  642  000015d8          	L19_LF2:
  643  000015d8  0bffffa0	j	L15_LF2
  644  000015dc  54000000	nop; delay slot nop
  645  000015e0          	L16_LF2:
  646  000015e0  8fc1fff4	lw	r1,-12(r30)
  647  000015e4  08000004	j	L14_LF2
  648  000015e8  54000000	nop; delay slot nop
  649  000015ec          	L14_LF2:
  650  000015ec  8fa20000	lw	r2,0(r29)
  651  000015f0  8fa30004	lw	r3,4(r29)
  652  000015f4  8fdffff8	lw	r31,-8(r30)
  653  000015f8  001ee820	add	r29,r0,r30
  654  000015fc  8fdefffc	lw	r30,-4(r30)
  655  00001600  4be00000	jr	r31
  656  00001604  54000000	nop
  657  00001608          	.endproc _dstrncpy
  658  00001608          	.align 2
  659  00001608          	.proc _dstrcat
  660  00001608          	.global _dstrcat
  661  00001608          	_dstrcat:
  662                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  663  00001608  afbefffc	sw	-4(r29),r30; push fp
  664  0000160c  001df020	add	r30,r0,r29; fp = sp
  665  00001610  afbffff8	sw	-8(r29),r31; push ret addr
  666  00001614  2fbd0018	subui	r29,r29,#24; alloc local storage
  667  00001618  afa20000	sw	0(r29),r2
  668  0000161c  8fc10000	lw	r1,(r30)
  669  00001620  afc1fff4	sw	-12(r30),r1
  670  00001624          	L21_LF2:
  671  00001624  8fc10000	lw	r1,(r30)
  672  00001628  90220000	lbu	r2,(r1)
  673  0000162c  64410000	snei	r1,r2,#0
  674  00001630  1420000c	bnez	r1,L23_LF2
  675  00001634  54000000	nop; delay slot nop
  676  00001638  0800001c	j	L22_LF2
  677  0000163c  54000000	nop; delay slot nop
  678  00001640          	L23_LF2:
  679  00001640  8fc20000	lw	r2,(r30)
  680  00001644  20410001	addi	r1,r2,#1
  681  00001648  00011020	add	r2,r0,r1
  682  0000164c  afc20000	sw	(r30),r2
  683  00001650  0bffffd0	j	L21_LF2
  684  00001654  54000000	nop; delay slot nop
  685  00001658          	L22_LF2:
  686  00001658  23bdfff8	addi	r29,r29,#-8
  687  0000165c  001d0820	add	r1,r0,r29
  688  00001660  8fc20000	lw	r2,(r30)
  689  00001664  ac220000	sw	(r1),r2
  690  00001668  8fc20004	lw	r2,4(r30)
  691  0000166c  ac220004	sw	4(r1),r2
  692  00001670  0ffffe5c	jal	_dstrcpy
  693  00001674  54000000	nop; delay slot nop
  694  00001678  23bd0008	addi	r29,r29,#8
  695  0000167c  8fc1fff4	lw	r1,-12(r30)
  696  00001680  08000004	j	L20_LF2
  697  00001684  54000000	nop; delay slot nop
  698  00001688          	L20_LF2:
  699  00001688  8fa20000	lw	r2,0(r29)
  700  0000168c  8fdffff8	lw	r31,-8(r30)
  701  00001690  001ee820	add	r29,r0,r30
  702  00001694  8fdefffc	lw	r30,-4(r30)
  703  00001698  4be00000	jr	r31
  704  0000169c  54000000	nop
  705  000016a0          	.endproc _dstrcat
  706  000016a0          	.align 2
  707  000016a0          	.proc _dstrncmp
  708  000016a0          	.global _dstrncmp
  709  000016a0          	_dstrncmp:
  710                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  711  000016a0  afbefffc	sw	-4(r29),r30; push fp
  712  000016a4  001df020	add	r30,r0,r29; fp = sp
  713  000016a8  afbffff8	sw	-8(r29),r31; push ret addr
  714  000016ac  2fbd0018	subui	r29,r29,#24; alloc local storage
  715  000016b0  afa20000	sw	0(r29),r2
  716  000016b4  afa30004	sw	4(r29),r3
  717  000016b8  54000000	nop
  718  000016bc  20010000	addi	r1,r0,#0
  719  000016c0  afc1fff4	sw	-12(r30),r1
  720  000016c4          	L25_LF2:
  721  000016c4  8fc1fff4	lw	r1,-12(r30)
  722  000016c8  8fc20008	lw	r2,8(r30)
  723  000016cc  0022082a	slt	r1,r1,r2
  724  000016d0  1420000c	bnez	r1,L28_LF2
  725  000016d4  54000000	nop; delay slot nop
  726  000016d8  08000088	j	L26_LF2
  727  000016dc  54000000	nop; delay slot nop
  728  000016e0          	L28_LF2:
  729  000016e0  8fc10004	lw	r1,4(r30)
  730  000016e4  90220000	lbu	r2,(r1)
  731  000016e8  64410000	snei	r1,r2,#0
  732  000016ec  14200018	bnez	r1,L29_LF2
  733  000016f0  54000000	nop; delay slot nop
  734  000016f4  20010000	addi	r1,r0,#0
  735  000016f8  080000d8	j	L24_LF2
  736  000016fc  54000000	nop; delay slot nop
  737  00001700  08000028	j	L30_LF2
  738  00001704  54000000	nop; delay slot nop
  739  00001708          	L29_LF2:
  740  00001708  8fc10000	lw	r1,(r30)
  741  0000170c  8fc20004	lw	r2,4(r30)
  742  00001710  90210000	lbu	r1,(r1)
  743  00001714  90420000	lbu	r2,(r2)
  744  00001718  00220829	sne	r1,r1,r2
  745  0000171c  1020000c	beqz	r1,L30_LF2
  746  00001720  54000000	nop; delay slot nop
  747  00001724  0800003c	j	L26_LF2
  748  00001728  54000000	nop; delay slot nop
  749  0000172c          	L31_LF2:
  750  0000172c          	L30_LF2:
  751  0000172c  8fc20000	lw	r2,(r30)
  752  00001730  20410001	addi	r1,r2,#1
  753  00001734  00011020	add	r2,r0,r1
  754  00001738  afc20000	sw	(r30),r2
  755  0000173c  8fc20004	lw	r2,4(r30)
  756  00001740  20410001	addi	r1,r2,#1
  757  00001744  00011020	add	r2,r0,r1
  758  00001748  afc20004	sw	4(r30),r2
  759  0000174c          	L27_LF2:
  760  0000174c  8fc2fff4	lw	r2,-12(r30)
  761  00001750  20410001	addi	r1,r2,#1
  762  00001754  00011020	add	r2,r0,r1
  763  00001758  afc2fff4	sw	-12(r30),r2
  764  0000175c  0bffff64	j	L25_LF2
  765  00001760  54000000	nop; delay slot nop
  766  00001764          	L26_LF2:
  767  00001764  8fc1fff4	lw	r1,-12(r30)
  768  00001768  8fc20008	lw	r2,8(r30)
  769  0000176c  00220828	seq	r1,r1,r2
  770  00001770  10200018	beqz	r1,L32_LF2
  771  00001774  54000000	nop; delay slot nop
  772  00001778  20010000	addi	r1,r0,#0
  773  0000177c  08000054	j	L24_LF2
  774  00001780  54000000	nop; delay slot nop
  775  00001784  0800004c	j	L33_LF2
  776  00001788  54000000	nop; delay slot nop
  777  0000178c          	L32_LF2:
  778  0000178c  8fc20000	lw	r2,(r30)
  779  00001790  90410000	lbu	r1,(r2)
  780  00001794  8fc20004	lw	r2,4(r30)
  781  00001798  90430000	lbu	r3,(r2)
  782  0000179c  00230822	sub	r1,r1,r3
  783  000017a0  74220000	sgei	r2,r1,#0
  784  000017a4  10400020	beqz	r2,L34_LF2
  785  000017a8  54000000	nop; delay slot nop
  786  000017ac  8fc10000	lw	r1,(r30)
  787  000017b0  8fc20004	lw	r2,4(r30)
  788  000017b4  90210000	lbu	r1,(r1)
  789  000017b8  90420000	lbu	r2,(r2)
  790  000017bc  00220829	sne	r1,r1,r2
  791  000017c0  08000008	j	L35_LF2
  792  000017c4  54000000	nop; delay slot nop
  793  000017c8          	L34_LF2:
  794  000017c8  2001ffff	addi	r1,r0,#-1
  795  000017cc          	L35_LF2:
  796  000017cc  08000004	j	L24_LF2
  797  000017d0  54000000	nop; delay slot nop
  798  000017d4          	L33_LF2:
  799  000017d4          	L24_LF2:
  800  000017d4  8fa20000	lw	r2,0(r29)
  801  000017d8  8fa30004	lw	r3,4(r29)
  802  000017dc  8fdffff8	lw	r31,-8(r30)
  803  000017e0  001ee820	add	r29,r0,r30
  804  000017e4  8fdefffc	lw	r30,-4(r30)
  805  000017e8  4be00000	jr	r31
  806  000017ec  54000000	nop
  807  000017f0          	.endproc _dstrncmp
  808  000017f0          	.align 2
  809  000017f0          	.proc _dstrlen
  810  000017f0          	.global _dstrlen
  811  000017f0          	_dstrlen:
  812                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  813  000017f0  afbefffc	sw	-4(r29),r30; push fp
  814  000017f4  001df020	add	r30,r0,r29; fp = sp
  815  000017f8  afbffff8	sw	-8(r29),r31; push ret addr
  816  000017fc  2fbd0018	subui	r29,r29,#24; alloc local storage
  817  00001800  afa20000	sw	0(r29),r2
  818  00001804  20010000	addi	r1,r0,#0
  819  00001808  afc1fff4	sw	-12(r30),r1
  820  0000180c          	L37_LF2:
  821  0000180c  8fc10000	lw	r1,(r30)
  822  00001810  20220001	addi	r2,r1,#1
  823  00001814  afc20000	sw	(r30),r2
  824  00001818  90210000	lbu	r1,(r1)
  825  0000181c  64220000	snei	r2,r1,#0
  826  00001820  1440000c	bnez	r2,L39_LF2
  827  00001824  54000000	nop; delay slot nop
  828  00001828  0800001c	j	L38_LF2
  829  0000182c  54000000	nop; delay slot nop
  830  00001830          	L39_LF2:
  831  00001830  8fc2fff4	lw	r2,-12(r30)
  832  00001834  20410001	addi	r1,r2,#1
  833  00001838  00011020	add	r2,r0,r1
  834  0000183c  afc2fff4	sw	-12(r30),r2
  835  00001840  0bffffc8	j	L37_LF2
  836  00001844  54000000	nop; delay slot nop
  837  00001848          	L38_LF2:
  838  00001848  8fc1fff4	lw	r1,-12(r30)
  839  0000184c  08000004	j	L36_LF2
  840  00001850  54000000	nop; delay slot nop
  841  00001854          	L36_LF2:
  842  00001854  8fa20000	lw	r2,0(r29)
  843  00001858  8fdffff8	lw	r31,-8(r30)
  844  0000185c  001ee820	add	r29,r0,r30
  845  00001860  8fdefffc	lw	r30,-4(r30)
  846  00001864  4be00000	jr	r31
  847  00001868  54000000	nop
  848  0000186c          	.endproc _dstrlen
  849  0000186c          	.align 2
  850  0000186c          	.proc _dstrstr
  851  0000186c          	.global _dstrstr
  852  0000186c          	_dstrstr:
  853                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  854  0000186c  afbefffc	sw	-4(r29),r30; push fp
  855  00001870  001df020	add	r30,r0,r29; fp = sp
  856  00001874  afbffff8	sw	-8(r29),r31; push ret addr
  857  00001878  2fbd0018	subui	r29,r29,#24; alloc local storage
  858  0000187c  afa20000	sw	0(r29),r2
  859  00001880  23bdfff8	addi	r29,r29,#-8
  860  00001884  001d0820	add	r1,r0,r29
  861  00001888  8fc20004	lw	r2,4(r30)
  862  0000188c  ac220000	sw	(r1),r2
  863  00001890  0fffff5c	jal	_dstrlen
  864  00001894  54000000	nop; delay slot nop
  865  00001898  23bd0008	addi	r29,r29,#8
  866  0000189c  afc1fff4	sw	-12(r30),r1
  867  000018a0          	L41_LF2:
  868  000018a0  8fc10000	lw	r1,(r30)
  869  000018a4  90220000	lbu	r2,(r1)
  870  000018a8  64410000	snei	r1,r2,#0
  871  000018ac  1420000c	bnez	r1,L43_LF2
  872  000018b0  54000000	nop; delay slot nop
  873  000018b4  08000060	j	L42_LF2
  874  000018b8  54000000	nop; delay slot nop
  875  000018bc          	L43_LF2:
  876  000018bc  23bdfff0	addi	r29,r29,#-16
  877  000018c0  001d0820	add	r1,r0,r29
  878  000018c4  8fc20000	lw	r2,(r30)
  879  000018c8  ac220000	sw	(r1),r2
  880  000018cc  8fc20004	lw	r2,4(r30)
  881  000018d0  ac220004	sw	4(r1),r2
  882  000018d4  8fc2fff4	lw	r2,-12(r30)
  883  000018d8  ac220008	sw	8(r1),r2
  884  000018dc  0ffffdc0	jal	_dstrncmp
  885  000018e0  54000000	nop; delay slot nop
  886  000018e4  23bd0010	addi	r29,r29,#16
  887  000018e8  64220000	snei	r2,r1,#0
  888  000018ec  14400010	bnez	r2,L44_LF2
  889  000018f0  54000000	nop; delay slot nop
  890  000018f4  8fc10000	lw	r1,(r30)
  891  000018f8  08000028	j	L40_LF2
  892  000018fc  54000000	nop; delay slot nop
  893  00001900          	L44_LF2:
  894  00001900  8fc20000	lw	r2,(r30)
  895  00001904  20410001	addi	r1,r2,#1
  896  00001908  00011020	add	r2,r0,r1
  897  0000190c  afc20000	sw	(r30),r2
  898  00001910  0bffff8c	j	L41_LF2
  899  00001914  54000000	nop; delay slot nop
  900  00001918          	L42_LF2:
  901  00001918  20010000	addi	r1,r0,#0
  902  0000191c  08000004	j	L40_LF2
  903  00001920  54000000	nop; delay slot nop
  904  00001924          	L40_LF2:
  905  00001924  8fa20000	lw	r2,0(r29)
  906  00001928  8fdffff8	lw	r31,-8(r30)
  907  0000192c  001ee820	add	r29,r0,r30
  908  00001930  8fdefffc	lw	r30,-4(r30)
  909  00001934  4be00000	jr	r31
  910  00001938  54000000	nop
  911  0000193c          	.endproc _dstrstr
  912  0000193c          	.align 2
  913  0000193c          	.proc _dmindex
  914  0000193c          	.global _dmindex
  915  0000193c          	_dmindex:
  916                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  917  0000193c  afbefffc	sw	-4(r29),r30; push fp
  918  00001940  001df020	add	r30,r0,r29; fp = sp
  919  00001944  afbffff8	sw	-8(r29),r31; push ret addr
  920  00001948  2fbd0018	subui	r29,r29,#24; alloc local storage
  921  0000194c  afa20000	sw	0(r29),r2
  922  00001950  54000000	nop
  923  00001954          	L46_LF2:
  924  00001954  8fc10000	lw	r1,(r30)
  925  00001958  90220000	lbu	r2,(r1)
  926  0000195c  64410000	snei	r1,r2,#0
  927  00001960  1420000c	bnez	r1,L48_LF2
  928  00001964  54000000	nop; delay slot nop
  929  00001968  08000070	j	L47_LF2
  930  0000196c  54000000	nop; delay slot nop
  931  00001970          	L48_LF2:
  932  00001970  8fc10004	lw	r1,4(r30)
  933  00001974  afc1fff4	sw	-12(r30),r1
  934  00001978          	L49_LF2:
  935  00001978  8fc1fff4	lw	r1,-12(r30)
  936  0000197c  90220000	lbu	r2,(r1)
  937  00001980  64410000	snei	r1,r2,#0
  938  00001984  1420000c	bnez	r1,L52_LF2
  939  00001988  54000000	nop; delay slot nop
  940  0000198c  08000044	j	L50_LF2
  941  00001990  54000000	nop; delay slot nop
  942  00001994          	L52_LF2:
  943  00001994  8fc10000	lw	r1,(r30)
  944  00001998  8fc2fff4	lw	r2,-12(r30)
  945  0000199c  90210000	lbu	r1,(r1)
  946  000019a0  90420000	lbu	r2,(r2)
  947  000019a4  00220828	seq	r1,r1,r2
  948  000019a8  10200010	beqz	r1,L51_LF2
  949  000019ac  54000000	nop; delay slot nop
  950  000019b0  8fc10000	lw	r1,(r30)
  951  000019b4  08000030	j	L45_LF2
  952  000019b8  54000000	nop; delay slot nop
  953  000019bc          	L53_LF2:
  954  000019bc          	L51_LF2:
  955  000019bc  8fc2fff4	lw	r2,-12(r30)
  956  000019c0  20410001	addi	r1,r2,#1
  957  000019c4  00011020	add	r2,r0,r1
  958  000019c8  afc2fff4	sw	-12(r30),r2
  959  000019cc  0bffffa8	j	L49_LF2
  960  000019d0  54000000	nop; delay slot nop
  961  000019d4          	L50_LF2:
  962  000019d4  0bffff7c	j	L46_LF2
  963  000019d8  54000000	nop; delay slot nop
  964  000019dc          	L47_LF2:
  965  000019dc  20010000	addi	r1,r0,#0
  966  000019e0  08000004	j	L45_LF2
  967  000019e4  54000000	nop; delay slot nop
  968  000019e8          	L45_LF2:
  969  000019e8  8fa20000	lw	r2,0(r29)
  970  000019ec  8fdffff8	lw	r31,-8(r30)
  971  000019f0  001ee820	add	r29,r0,r30
  972  000019f4  8fdefffc	lw	r30,-4(r30)
  973  000019f8  4be00000	jr	r31
  974  000019fc  54000000	nop
  975  00001a00          	.endproc _dmindex
  976  00001a00          	.align 2
  977  00001a00          	.proc _dindex
  978  00001a00          	.global _dindex
  979  00001a00          	_dindex:
  980                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  981  00001a00  afbefffc	sw	-4(r29),r30; push fp
  982  00001a04  001df020	add	r30,r0,r29; fp = sp
  983  00001a08  afbffff8	sw	-8(r29),r31; push ret addr
  984  00001a0c  2fbd0010	subui	r29,r29,#16; alloc local storage
  985  00001a10  afa20000	sw	0(r29),r2
  986  00001a14  54000000	nop
  987  00001a18          	L55_LF2:
  988  00001a18  8fc10000	lw	r1,(r30)
  989  00001a1c  90220000	lbu	r2,(r1)
  990  00001a20  64410000	snei	r1,r2,#0
  991  00001a24  1420000c	bnez	r1,L57_LF2
  992  00001a28  54000000	nop; delay slot nop
  993  00001a2c  08000040	j	L56_LF2
  994  00001a30  54000000	nop; delay slot nop
  995  00001a34          	L57_LF2:
  996  00001a34  8fc10000	lw	r1,(r30)
  997  00001a38  90220000	lbu	r2,(r1)
  998  00001a3c  8fc10004	lw	r1,4(r30)
  999  00001a40  00411028	seq	r2,r2,r1
 1000  00001a44  10400010	beqz	r2,L58_LF2
 1001  00001a48  54000000	nop; delay slot nop
 1002  00001a4c  8fc10000	lw	r1,(r30)
 1003  00001a50  08000028	j	L54_LF2
 1004  00001a54  54000000	nop; delay slot nop
 1005  00001a58          	L58_LF2:
 1006  00001a58  8fc20000	lw	r2,(r30)
 1007  00001a5c  20410001	addi	r1,r2,#1
 1008  00001a60  00011020	add	r2,r0,r1
 1009  00001a64  afc20000	sw	(r30),r2
 1010  00001a68  0bffffac	j	L55_LF2
 1011  00001a6c  54000000	nop; delay slot nop
 1012  00001a70          	L56_LF2:
 1013  00001a70  20010000	addi	r1,r0,#0
 1014  00001a74  08000004	j	L54_LF2
 1015  00001a78  54000000	nop; delay slot nop
 1016  00001a7c          	L54_LF2:
 1017  00001a7c  8fa20000	lw	r2,0(r29)
 1018  00001a80  8fdffff8	lw	r31,-8(r30)
 1019  00001a84  001ee820	add	r29,r0,r30
 1020  00001a88  8fdefffc	lw	r30,-4(r30)
 1021  00001a8c  4be00000	jr	r31
 1022  00001a90  54000000	nop
 1023  00001a94          	.endproc _dindex
 1024  00001a94          	.align 2
 1025  00001a94          	.proc _ditoa
 1026  00001a94          	.global _ditoa
 1027  00001a94          	_ditoa:
 1028                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1029  00001a94  afbefffc	sw	-4(r29),r30; push fp
 1030  00001a98  001df020	add	r30,r0,r29; fp = sp
 1031  00001a9c  afbffff8	sw	-8(r29),r31; push ret addr
 1032  00001aa0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1033  00001aa4  afa20000	sw	0(r29),r2
 1034  00001aa8  afa30004	sw	4(r29),r3
 1035  00001aac  8fc10000	lw	r1,(r30)
 1036  00001ab0  68220000	slti	r2,r1,#0
 1037  00001ab4  1040002c	beqz	r2,L60_LF2
 1038  00001ab8  54000000	nop; delay slot nop
 1039  00001abc  8fc10004	lw	r1,4(r30)
 1040  00001ac0  20220001	addi	r2,r1,#1
 1041  00001ac4  afc20004	sw	4(r30),r2
 1042  00001ac8  2002002d	addi	r2,r0,(#0x2d)&0xff
 1043  00001acc  a0220000	sb	(r1),r2
 1044  00001ad0  8fc10000	lw	r1,(r30)
 1045  00001ad4  00011022	sub	r2,r0,r1
 1046  00001ad8  afc20000	sw	(r30),r2
 1047  00001adc  08000118	j	L61_LF2
 1048  00001ae0  54000000	nop; delay slot nop
 1049  00001ae4          	L60_LF2:
 1050  00001ae4  8fc10000	lw	r1,(r30)
 1051  00001ae8  64220000	snei	r2,r1,#0
 1052  00001aec  14400020	bnez	r2,L62_LF2
 1053  00001af0  54000000	nop; delay slot nop
 1054  00001af4  8fc10004	lw	r1,4(r30)
 1055  00001af8  20220001	addi	r2,r1,#1
 1056  00001afc  afc20004	sw	4(r30),r2
 1057  00001b00  20020030	addi	r2,r0,(#0x30)&0xff
 1058  00001b04  a0220000	sb	(r1),r2
 1059  00001b08  080000ec	j	L61_LF2
 1060  00001b0c  54000000	nop; delay slot nop
 1061  00001b10          	L62_LF2:
 1062  00001b10  20010001	addi	r1,r0,#1
 1063  00001b14  afc1fff4	sw	-12(r30),r1
 1064  00001b18          	L64_LF2:
 1065  00001b18  8fc1fff4	lw	r1,-12(r30)
 1066  00001b1c  8fc20000	lw	r2,(r30)
 1067  00001b20  0022082c	sle	r1,r1,r2
 1068  00001b24  1420000c	bnez	r1,L66_LF2
 1069  00001b28  54000000	nop; delay slot nop
 1070  00001b2c  08000024	j	L65_LF2
 1071  00001b30  54000000	nop; delay slot nop
 1072  00001b34          	L67_LF2:
 1073  00001b34          	L66_LF2:
 1074  00001b34  8fc1fff4	lw	r1,-12(r30)
 1075  00001b38  00011820	add	r3,r0,r1
 1076  00001b3c  50620002	slli	r2,r3,#0x2
 1077  00001b40  00411020	add	r2,r2,r1
 1078  00001b44  50410001	slli	r1,r2,#0x1
 1079  00001b48  afc1fff4	sw	-12(r30),r1
 1080  00001b4c  0bffffc8	j	L64_LF2
 1081  00001b50  54000000	nop; delay slot nop
 1082  00001b54          	L65_LF2:
 1083  00001b54  54000000	nop
 1084  00001b58          	L68_LF2:
 1085  00001b58  8fc1fff4	lw	r1,-12(r30)
 1086  00001b5c  2002000a	addi	r2,r0,#10
 1087  00001b60  00200035	movi2fp	f0,r1
 1088  00001b64  00400835	movi2fp	f1,r2
 1089  00001b68  0401000f	div	f0,f0,f1
 1090  00001b6c  00000834	movfp2i	r1,f0
 1091  00001b70  afc1fff4	sw	-12(r30),r1
 1092  00001b74  8fc10004	lw	r1,4(r30)
 1093  00001b78  20220001	addi	r2,r1,#1
 1094  00001b7c  afc20004	sw	4(r30),r2
 1095  00001b80  8fc20000	lw	r2,(r30)
 1096  00001b84  8fc3fff4	lw	r3,-12(r30)
 1097  00001b88  00400035	movi2fp	f0,r2
 1098  00001b8c  00600835	movi2fp	f1,r3
 1099  00001b90  0401000f	div	f0,f0,f1
 1100  00001b94  00001034	movfp2i	r2,f0
 1101  00001b98  00021820	add	r3,r0,r2
 1102  00001b9c  20620030	addi	r2,r3,#48
 1103  00001ba0  a0220000	sb	(r1),r2
 1104  00001ba4  8fc10000	lw	r1,(r30)
 1105  00001ba8  8fc3fff4	lw	r3,-12(r30)
 1106  00001bac  00200035	movi2fp	f0,r1
 1107  00001bb0  00600835	movi2fp	f1,r3
 1108  00001bb4  0401000f	div	f0,f0,f1
 1109  00001bb8  00001034	movfp2i	r2,f0
 1110  00001bbc  8fc3fff4	lw	r3,-12(r30)
 1111  00001bc0  00400035	movi2fp	f0,r2
 1112  00001bc4  00600835	movi2fp	f1,r3
 1113  00001bc8  0401000e	mult	f0,f0,f1
 1114  00001bcc  00001034	movfp2i	r2,f0
 1115  00001bd0  00220822	sub	r1,r1,r2
 1116  00001bd4  afc10000	sw	(r30),r1
 1117  00001bd8          	L70_LF2:
 1118  00001bd8  8fc1fff4	lw	r1,-12(r30)
 1119  00001bdc  6c220001	sgti	r2,r1,#1
 1120  00001be0  1440000c	bnez	r2,L71_LF2
 1121  00001be4  54000000	nop; delay slot nop
 1122  00001be8  0800000c	j	L61_LF2
 1123  00001bec  54000000	nop; delay slot nop
 1124  00001bf0          	L71_LF2:
 1125  00001bf0  0bffff64	j	L68_LF2
 1126  00001bf4  54000000	nop; delay slot nop
 1127  00001bf8          	L69_LF2:
 1128  00001bf8          	L63_LF2:
 1129  00001bf8          	L61_LF2:
 1130  00001bf8  8fc10004	lw	r1,4(r30)
 1131  00001bfc  20020000	addi	r2,r0,(#0x0)&0xff
 1132  00001c00  a0220000	sb	(r1),r2
 1133  00001c04          	L59_LF2:
 1134  00001c04  8fa20000	lw	r2,0(r29)
 1135  00001c08  8fa30004	lw	r3,4(r29)
 1136  00001c0c  8fdffff8	lw	r31,-8(r30)
 1137  00001c10  001ee820	add	r29,r0,r30
 1138  00001c14  8fdefffc	lw	r30,-4(r30)
 1139  00001c18  4be00000	jr	r31
 1140  00001c1c  54000000	nop
 1141  00001c20          	.endproc _ditoa
 1142  00001c20          	.align 2
 1143  00001c20          	.proc _dstrtol
 1144  00001c20          	.global _dstrtol
 1145  00001c20          	_dstrtol:
 1146                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1147  00001c20  afbefffc	sw	-4(r29),r30; push fp
 1148  00001c24  001df020	add	r30,r0,r29; fp = sp
 1149  00001c28  afbffff8	sw	-8(r29),r31; push ret addr
 1150  00001c2c  2fbd0020	subui	r29,r29,#32; alloc local storage
 1151  00001c30  afa20000	sw	0(r29),r2
 1152  00001c34  20010000	addi	r1,r0,#0
 1153  00001c38  afc1fff4	sw	-12(r30),r1
 1154  00001c3c          	L73_LF2:
 1155  00001c3c  8fc10000	lw	r1,(r30)
 1156  00001c40  90220000	lbu	r2,(r1)
 1157  00001c44  60410020	seqi	r1,r2,#32
 1158  00001c48  14200034	bnez	r1,L75_LF2
 1159  00001c4c  54000000	nop; delay slot nop
 1160  00001c50  8fc10000	lw	r1,(r30)
 1161  00001c54  90220000	lbu	r2,(r1)
 1162  00001c58  60410009	seqi	r1,r2,#9
 1163  00001c5c  14200020	bnez	r1,L75_LF2
 1164  00001c60  54000000	nop; delay slot nop
 1165  00001c64  8fc10000	lw	r1,(r30)
 1166  00001c68  90220000	lbu	r2,(r1)
 1167  00001c6c  6041000a	seqi	r1,r2,#10
 1168  00001c70  1420000c	bnez	r1,L75_LF2
 1169  00001c74  54000000	nop; delay slot nop
 1170  00001c78  0800001c	j	L74_LF2
 1171  00001c7c  54000000	nop; delay slot nop
 1172  00001c80          	L75_LF2:
 1173  00001c80  8fc20000	lw	r2,(r30)
 1174  00001c84  20410001	addi	r1,r2,#1
 1175  00001c88  00011020	add	r2,r0,r1
 1176  00001c8c  afc20000	sw	(r30),r2
 1177  00001c90  0bffffa8	j	L73_LF2
 1178  00001c94  54000000	nop; delay slot nop
 1179  00001c98          	L74_LF2:
 1180  00001c98  8fc10004	lw	r1,4(r30)
 1181  00001c9c  64220000	snei	r2,r1,#0
 1182  00001ca0  10400010	beqz	r2,L76_LF2
 1183  00001ca4  54000000	nop; delay slot nop
 1184  00001ca8  8fc10004	lw	r1,4(r30)
 1185  00001cac  8fc20000	lw	r2,(r30)
 1186  00001cb0  ac220000	sw	(r1),r2
 1187  00001cb4          	L76_LF2:
 1188  00001cb4  8fc10000	lw	r1,(r30)
 1189  00001cb8  90220000	lbu	r2,(r1)
 1190  00001cbc  64410000	snei	r1,r2,#0
 1191  00001cc0  14200010	bnez	r1,L77_LF2
 1192  00001cc4  54000000	nop; delay slot nop
 1193  00001cc8  8fc1fff4	lw	r1,-12(r30)
 1194  00001ccc  08000294	j	L72_LF2
 1195  00001cd0  54000000	nop; delay slot nop
 1196  00001cd4          	L77_LF2:
 1197  00001cd4  8fc10000	lw	r1,(r30)
 1198  00001cd8  90220000	lbu	r2,(r1)
 1199  00001cdc  6041002d	seqi	r1,r2,#45
 1200  00001ce0  10200024	beqz	r1,L78_LF2
 1201  00001ce4  54000000	nop; delay slot nop
 1202  00001ce8  2001ffff	addi	r1,r0,#-1
 1203  00001cec  afc1ffec	sw	-20(r30),r1
 1204  00001cf0  8fc20000	lw	r2,(r30)
 1205  00001cf4  20410001	addi	r1,r2,#1
 1206  00001cf8  00011020	add	r2,r0,r1
 1207  00001cfc  afc20000	sw	(r30),r2
 1208  00001d00  0800000c	j	L79_LF2
 1209  00001d04  54000000	nop; delay slot nop
 1210  00001d08          	L78_LF2:
 1211  00001d08  20010001	addi	r1,r0,#1
 1212  00001d0c  afc1ffec	sw	-20(r30),r1
 1213  00001d10          	L79_LF2:
 1214  00001d10  8fc10008	lw	r1,8(r30)
 1215  00001d14  64220000	snei	r2,r1,#0
 1216  00001d18  14400090	bnez	r2,L80_LF2
 1217  00001d1c  54000000	nop; delay slot nop
 1218  00001d20  8fc10000	lw	r1,(r30)
 1219  00001d24  90220000	lbu	r2,(r1)
 1220  00001d28  60410030	seqi	r1,r2,#48
 1221  00001d2c  10200074	beqz	r1,L81_LF2
 1222  00001d30  54000000	nop; delay slot nop
 1223  00001d34  8fc20000	lw	r2,(r30)
 1224  00001d38  20410001	addi	r1,r2,#1
 1225  00001d3c  00011020	add	r2,r0,r1
 1226  00001d40  afc20000	sw	(r30),r2
 1227  00001d44  8fc10000	lw	r1,(r30)
 1228  00001d48  90220000	lbu	r2,(r1)
 1229  00001d4c  60410078	seqi	r1,r2,#120
 1230  00001d50  14200020	bnez	r1,L83_LF2
 1231  00001d54  54000000	nop; delay slot nop
 1232  00001d58  8fc10000	lw	r1,(r30)
 1233  00001d5c  90220000	lbu	r2,(r1)
 1234  00001d60  60410058	seqi	r1,r2,#88
 1235  00001d64  1420000c	bnez	r1,L83_LF2
 1236  00001d68  54000000	nop; delay slot nop
 1237  00001d6c  08000024	j	L82_LF2
 1238  00001d70  54000000	nop; delay slot nop
 1239  00001d74          	L83_LF2:
 1240  00001d74  20010010	addi	r1,r0,#16
 1241  00001d78  afc10008	sw	8(r30),r1
 1242  00001d7c  8fc20000	lw	r2,(r30)
 1243  00001d80  20410001	addi	r1,r2,#1
 1244  00001d84  00011020	add	r2,r0,r1
 1245  00001d88  afc20000	sw	(r30),r2
 1246  00001d8c  0800000c	j	L84_LF2
 1247  00001d90  54000000	nop; delay slot nop
 1248  00001d94          	L82_LF2:
 1249  00001d94  20010008	addi	r1,r0,#8
 1250  00001d98  afc10008	sw	8(r30),r1
 1251  00001d9c          	L84_LF2:
 1252  00001d9c  0800000c	j	L80_LF2
 1253  00001da0  54000000	nop; delay slot nop
 1254  00001da4          	L81_LF2:
 1255  00001da4  2001000a	addi	r1,r0,#10
 1256  00001da8  afc10008	sw	8(r30),r1
 1257  00001dac          	L85_LF2:
 1258  00001dac          	L80_LF2:
 1259  00001dac  8fc10008	lw	r1,8(r30)
 1260  00001db0  70220000	slei	r2,r1,#0
 1261  00001db4  1440001c	bnez	r2,L87_LF2
 1262  00001db8  54000000	nop; delay slot nop
 1263  00001dbc  8fc10008	lw	r1,8(r30)
 1264  00001dc0  6c220010	sgti	r2,r1,#16
 1265  00001dc4  1440000c	bnez	r2,L87_LF2
 1266  00001dc8  54000000	nop; delay slot nop
 1267  00001dcc  08000010	j	L86_LF2
 1268  00001dd0  54000000	nop; delay slot nop
 1269  00001dd4          	L87_LF2:
 1270  00001dd4  8fc1fff4	lw	r1,-12(r30)
 1271  00001dd8  08000188	j	L72_LF2
 1272  00001ddc  54000000	nop; delay slot nop
 1273  00001de0          	L86_LF2:
 1274  00001de0  54000000	nop
 1275  00001de4          	L88_LF2:
 1276  00001de4  8fc10000	lw	r1,(r30)
 1277  00001de8  90220000	lbu	r2,(r1)
 1278  00001dec  6c41002f	sgtui	r1,r2,#47
 1279  00001df0  10200030	beqz	r1,L91_LF2
 1280  00001df4  54000000	nop; delay slot nop
 1281  00001df8  8fc10000	lw	r1,(r30)
 1282  00001dfc  90220000	lbu	r2,(r1)
 1283  00001e00  70410039	sleui	r1,r2,#57
 1284  00001e04  1020001c	beqz	r1,L91_LF2
 1285  00001e08  54000000	nop; delay slot nop
 1286  00001e0c  8fc10000	lw	r1,(r30)
 1287  00001e10  90220000	lbu	r2,(r1)
 1288  00001e14  2041ffd0	addi	r1,r2,#-48
 1289  00001e18  afc1fff0	sw	-16(r30),r1
 1290  00001e1c  0800008c	j	L92_LF2
 1291  00001e20  54000000	nop; delay slot nop
 1292  00001e24          	L91_LF2:
 1293  00001e24  8fc10000	lw	r1,(r30)
 1294  00001e28  90220000	lbu	r2,(r1)
 1295  00001e2c  6c410060	sgtui	r1,r2,#96
 1296  00001e30  10200030	beqz	r1,L93_LF2
 1297  00001e34  54000000	nop; delay slot nop
 1298  00001e38  8fc10000	lw	r1,(r30)
 1299  00001e3c  90220000	lbu	r2,(r1)
 1300  00001e40  7041007a	sleui	r1,r2,#122
 1301  00001e44  1020001c	beqz	r1,L93_LF2
 1302  00001e48  54000000	nop; delay slot nop
 1303  00001e4c  8fc10000	lw	r1,(r30)
 1304  00001e50  90220000	lbu	r2,(r1)
 1305  00001e54  2041ffa9	addi	r1,r2,#-87
 1306  00001e58  afc1fff0	sw	-16(r30),r1
 1307  00001e5c  0800004c	j	L92_LF2
 1308  00001e60  54000000	nop; delay slot nop
 1309  00001e64          	L93_LF2:
 1310  00001e64  8fc10000	lw	r1,(r30)
 1311  00001e68  90220000	lbu	r2,(r1)
 1312  00001e6c  6c410040	sgtui	r1,r2,#64
 1313  00001e70  10200030	beqz	r1,L95_LF2
 1314  00001e74  54000000	nop; delay slot nop
 1315  00001e78  8fc10000	lw	r1,(r30)
 1316  00001e7c  90220000	lbu	r2,(r1)
 1317  00001e80  7041005a	sleui	r1,r2,#90
 1318  00001e84  1020001c	beqz	r1,L95_LF2
 1319  00001e88  54000000	nop; delay slot nop
 1320  00001e8c  8fc10000	lw	r1,(r30)
 1321  00001e90  90220000	lbu	r2,(r1)
 1322  00001e94  2041ffc9	addi	r1,r2,#-55
 1323  00001e98  afc1fff0	sw	-16(r30),r1
 1324  00001e9c  0800000c	j	L92_LF2
 1325  00001ea0  54000000	nop; delay slot nop
 1326  00001ea4          	L95_LF2:
 1327  00001ea4  200103e8	addi	r1,r0,#1000
 1328  00001ea8  afc1fff0	sw	-16(r30),r1
 1329  00001eac          	L96_LF2:
 1330  00001eac          	L94_LF2:
 1331  00001eac          	L92_LF2:
 1332  00001eac  8fc1fff0	lw	r1,-16(r30)
 1333  00001eb0  8fc20008	lw	r2,8(r30)
 1334  00001eb4  0022082a	slt	r1,r1,r2
 1335  00001eb8  10200040	beqz	r1,L90_LF2
 1336  00001ebc  54000000	nop; delay slot nop
 1337  00001ec0  8fc1fff4	lw	r1,-12(r30)
 1338  00001ec4  8fc20008	lw	r2,8(r30)
 1339  00001ec8  00200035	movi2fp	f0,r1
 1340  00001ecc  00400835	movi2fp	f1,r2
 1341  00001ed0  0401000e	mult	f0,f0,f1
 1342  00001ed4  00000834	movfp2i	r1,f0
 1343  00001ed8  afc1fff4	sw	-12(r30),r1
 1344  00001edc  8fc1fff4	lw	r1,-12(r30)
 1345  00001ee0  8fc2fff0	lw	r2,-16(r30)
 1346  00001ee4  00220820	add	r1,r1,r2
 1347  00001ee8  afc1fff4	sw	-12(r30),r1
 1348  00001eec  8fc20000	lw	r2,(r30)
 1349  00001ef0  20410001	addi	r1,r2,#1
 1350  00001ef4  00011020	add	r2,r0,r1
 1351  00001ef8  afc20000	sw	(r30),r2
 1352  00001efc          	L97_LF2:
 1353  00001efc          	L90_LF2:
 1354  00001efc  8fc1fff0	lw	r1,-16(r30)
 1355  00001f00  8fc20008	lw	r2,8(r30)
 1356  00001f04  0022082a	slt	r1,r1,r2
 1357  00001f08  1420000c	bnez	r1,L98_LF2
 1358  00001f0c  54000000	nop; delay slot nop
 1359  00001f10  0800000c	j	L89_LF2
 1360  00001f14  54000000	nop; delay slot nop
 1361  00001f18          	L98_LF2:
 1362  00001f18  0bfffec8	j	L88_LF2
 1363  00001f1c  54000000	nop; delay slot nop
 1364  00001f20          	L89_LF2:
 1365  00001f20  8fc10004	lw	r1,4(r30)
 1366  00001f24  64220000	snei	r2,r1,#0
 1367  00001f28  10400010	beqz	r2,L99_LF2
 1368  00001f2c  54000000	nop; delay slot nop
 1369  00001f30  8fc10004	lw	r1,4(r30)
 1370  00001f34  8fc20000	lw	r2,(r30)
 1371  00001f38  ac220000	sw	(r1),r2
 1372  00001f3c          	L99_LF2:
 1373  00001f3c  8fc1fff4	lw	r1,-12(r30)
 1374  00001f40  8fc2ffec	lw	r2,-20(r30)
 1375  00001f44  00200035	movi2fp	f0,r1
 1376  00001f48  00400835	movi2fp	f1,r2
 1377  00001f4c  0401000e	mult	f0,f0,f1
 1378  00001f50  00000834	movfp2i	r1,f0
 1379  00001f54  afc1fff4	sw	-12(r30),r1
 1380  00001f58  8fc1fff4	lw	r1,-12(r30)
 1381  00001f5c  08000004	j	L72_LF2
 1382  00001f60  54000000	nop; delay slot nop
 1383  00001f64          	L72_LF2:
 1384  00001f64  8fa20000	lw	r2,0(r29)
 1385  00001f68  8fdffff8	lw	r31,-8(r30)
 1386  00001f6c  001ee820	add	r29,r0,r30
 1387  00001f70  8fdefffc	lw	r30,-4(r30)
 1388  00001f74  4be00000	jr	r31
 1389  00001f78  54000000	nop
 1390  00001f7c          	.endproc _dstrtol
 1391  00001f7c          	.align 2
 1392  00001f7c          	.proc _bcopy
 1393  00001f7c          	.global _bcopy
 1394  00001f7c          	_bcopy:
 1395                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1396  00001f7c  afbefffc	sw	-4(r29),r30; push fp
 1397  00001f80  001df020	add	r30,r0,r29; fp = sp
 1398  00001f84  afbffff8	sw	-8(r29),r31; push ret addr
 1399  00001f88  2fbd0010	subui	r29,r29,#16; alloc local storage
 1400  00001f8c  afa20000	sw	0(r29),r2
 1401  00001f90  afa30004	sw	4(r29),r3
 1402  00001f94  54000000	nop
 1403  00001f98          	L101_LF2:
 1404  00001f98  8fc10008	lw	r1,8(r30)
 1405  00001f9c  2022ffff	addi	r2,r1,#-1
 1406  00001fa0  afc20008	sw	8(r30),r2
 1407  00001fa4  6c210000	sgti	r1,r1,#0
 1408  00001fa8  1420000c	bnez	r1,L103_LF2
 1409  00001fac  54000000	nop; delay slot nop
 1410  00001fb0  0800002c	j	L102_LF2
 1411  00001fb4  54000000	nop; delay slot nop
 1412  00001fb8          	L103_LF2:
 1413  00001fb8  8fc10004	lw	r1,4(r30)
 1414  00001fbc  20220001	addi	r2,r1,#1
 1415  00001fc0  afc20004	sw	4(r30),r2
 1416  00001fc4  8fc20000	lw	r2,(r30)
 1417  00001fc8  20430001	addi	r3,r2,#1
 1418  00001fcc  afc30000	sw	(r30),r3
 1419  00001fd0  80420000	lb	r2,(r2)
 1420  00001fd4  a0220000	sb	(r1),r2
 1421  00001fd8  0bffffbc	j	L101_LF2
 1422  00001fdc  54000000	nop; delay slot nop
 1423  00001fe0          	L102_LF2:
 1424  00001fe0          	L100_LF2:
 1425  00001fe0  8fa20000	lw	r2,0(r29)
 1426  00001fe4  8fa30004	lw	r3,4(r29)
 1427  00001fe8  8fdffff8	lw	r31,-8(r30)
 1428  00001fec  001ee820	add	r29,r0,r30
 1429  00001ff0  8fdefffc	lw	r30,-4(r30)
 1430  00001ff4  4be00000	jr	r31
 1431  00001ff8  54000000	nop
 1432  00001ffc          	.endproc _bcopy
 1433  00001ffc          	.align 2
 1434  00001ffc          	.proc _bzero
 1435  00001ffc          	.global _bzero
 1436  00001ffc          	_bzero:
 1437                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1438  00001ffc  afbefffc	sw	-4(r29),r30; push fp
 1439  00002000  001df020	add	r30,r0,r29; fp = sp
 1440  00002004  afbffff8	sw	-8(r29),r31; push ret addr
 1441  00002008  2fbd0010	subui	r29,r29,#16; alloc local storage
 1442  0000200c  afa20000	sw	0(r29),r2
 1443  00002010  54000000	nop
 1444  00002014          	L105_LF2:
 1445  00002014  8fc10004	lw	r1,4(r30)
 1446  00002018  2022ffff	addi	r2,r1,#-1
 1447  0000201c  afc20004	sw	4(r30),r2
 1448  00002020  6c210000	sgti	r1,r1,#0
 1449  00002024  1420000c	bnez	r1,L107_LF2
 1450  00002028  54000000	nop; delay slot nop
 1451  0000202c  08000020	j	L106_LF2
 1452  00002030  54000000	nop; delay slot nop
 1453  00002034          	L107_LF2:
 1454  00002034  8fc10000	lw	r1,(r30)
 1455  00002038  20220001	addi	r2,r1,#1
 1456  0000203c  afc20000	sw	(r30),r2
 1457  00002040  20020000	addi	r2,r0,(#0x0)&0xff
 1458  00002044  a0220000	sb	(r1),r2
 1459  00002048  0bffffc8	j	L105_LF2
 1460  0000204c  54000000	nop; delay slot nop
 1461  00002050          	L106_LF2:
 1462  00002050          	L104_LF2:
 1463  00002050  8fa20000	lw	r2,0(r29)
 1464  00002054  8fdffff8	lw	r31,-8(r30)
 1465  00002058  001ee820	add	r29,r0,r30
 1466  0000205c  8fdefffc	lw	r30,-4(r30)
 1467  00002060  4be00000	jr	r31
 1468  00002064  54000000	nop
 1469  00002068          	.endproc _bzero
 1470  00002068          	.align 2
 1471  00002068          	.proc _min
 1472  00002068          	.global _min
 1473  00002068          	_min:
 1474                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1475  00002068  afbefffc	sw	-4(r29),r30; push fp
 1476  0000206c  001df020	add	r30,r0,r29; fp = sp
 1477  00002070  afbffff8	sw	-8(r29),r31; push ret addr
 1478  00002074  2fbd0010	subui	r29,r29,#16; alloc local storage
 1479  00002078  afa20000	sw	0(r29),r2
 1480  0000207c  afa30004	sw	4(r29),r3
 1481  00002080  8fc10000	lw	r1,(r30)
 1482  00002084  8fc20004	lw	r2,4(r30)
 1483  00002088  0022182c	sle	r3,r1,r2
 1484  0000208c  14600008	bnez	r3,L109_LF2
 1485  00002090  54000000	nop; delay slot nop
 1486  00002094  8fc10004	lw	r1,4(r30)
 1487  00002098          	L109_LF2:
 1488  00002098  08000004	j	L108_LF2
 1489  0000209c  54000000	nop; delay slot nop
 1490  000020a0          	L108_LF2:
 1491  000020a0  8fa20000	lw	r2,0(r29)
 1492  000020a4  8fa30004	lw	r3,4(r29)
 1493  000020a8  8fdffff8	lw	r31,-8(r30)
 1494  000020ac  001ee820	add	r29,r0,r30
 1495  000020b0  8fdefffc	lw	r30,-4(r30)
 1496  000020b4  4be00000	jr	r31
 1497  000020b8  54000000	nop
 1498  000020bc          	.endproc _min
 1499  000020bc          	.align 2
 1500  000020bc          	.proc _max
 1501  000020bc          	.global _max
 1502  000020bc          	_max:
 1503                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1504  000020bc  afbefffc	sw	-4(r29),r30; push fp
 1505  000020c0  001df020	add	r30,r0,r29; fp = sp
 1506  000020c4  afbffff8	sw	-8(r29),r31; push ret addr
 1507  000020c8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1508  000020cc  afa20000	sw	0(r29),r2
 1509  000020d0  afa30004	sw	4(r29),r3
 1510  000020d4  8fc10000	lw	r1,(r30)
 1511  000020d8  8fc20004	lw	r2,4(r30)
 1512  000020dc  0022182d	sge	r3,r1,r2
 1513  000020e0  14600008	bnez	r3,L111_LF2
 1514  000020e4  54000000	nop; delay slot nop
 1515  000020e8  8fc10004	lw	r1,4(r30)
 1516  000020ec          	L111_LF2:
 1517  000020ec  08000004	j	L110_LF2
 1518  000020f0  54000000	nop; delay slot nop
 1519  000020f4          	L110_LF2:
 1520  000020f4  8fa20000	lw	r2,0(r29)
 1521  000020f8  8fa30004	lw	r3,4(r29)
 1522  000020fc  8fdffff8	lw	r31,-8(r30)
 1523  00002100  001ee820	add	r29,r0,r30
 1524  00002104  8fdefffc	lw	r30,-4(r30)
 1525  00002108  4be00000	jr	r31
 1526  0000210c  54000000	nop
 1527  00002110          	.endproc _max
 1528                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1529                      ;;;
 1530                      ;;; Most of the traps are called in files from libtraps.
 1533  00002110          	.align 2
 1534  00002110          	.proc _exit
 1535  00002110          	.global _exit
 1536  00002110          	_exit:
 1537  00002110  44000300	trap	#0x300
 1538  00002114  4be00000	jr	r31
 1539  00002118  54000000	nop
 1540  0000211c          	.endproc _exit
 1542                      ; for the benefit of gcc.
 1543  0000211c          	.proc ___main
 1544  0000211c          	.global ___main
 1545  0000211c          	___main:
 1546  0000211c  4be00000	jr	r31
 1547  00002120  54000000	nop
 1548  00002124          	.endproc ___main
 1549  00002124          	.text
 1550  00002124          	.global _etext
 1551  00002124          	_etext:
 1552  00002124          	.align 3
 1553  00002128          	.data
 1554  000030d4          	.global _edata
 1555  000030d4          	_edata:
