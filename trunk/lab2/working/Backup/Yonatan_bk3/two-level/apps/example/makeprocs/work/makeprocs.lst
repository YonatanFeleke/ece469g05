 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 139
    4                      ; Text size: 4192
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <number of hello world processes to create> <number of simul"
   82  00003004  653a2025	
   82  00003008  73203c6e	
   82  0000300c  756d6265	
   82  00003010  72206f66	
   82  00003014  2068656c	
   82  00003018  6c6f2077	
   82  0000301c  6f726c64	
   82  00003020  2070726f	
   82  00003024  63657373	
   82  00003028  65732074	
   82  0000302c  6f206372	
   82  00003030  65617465	
   82  00003034  3e203c6e	
   82  00003038  756d6265	
   82  0000303c  72206f66	
   82  00003040  2073696d	
   82  00003044  756c    	
   83  00003046  74616e65	.ascii "taneous delay processes to create>\n\000"
   83  0000304a  6f757320	
   83  0000304e  64656c61	
   83  00003052  79207072	
   83  00003056  6f636573	
   83  0000305a  73657320	
   83  0000305e  746f2063	
   83  00003062  72656174	
   83  00003066  653e0a00	
   84  0000306a          	.align 2
   85  0000306c          	LC1_LF0:
   86  0000306c  48454c4c	.ascii "HELLLOOOOOO WOOORRRLLLLDDD!!!\n\000"
   86  00003070  4c4f4f4f	
   86  00003074  4f4f4f20	
   86  00003078  574f4f4f	
   86  0000307c  5252524c	
   86  00003080  4c4c4c44	
   86  00003084  44442121	
   86  00003088  210a00  	
   87  0000308b          	.text
   88  000010d4          	.align 2
   89  000010d4          	.proc _main
   90  000010d4          	.global _main
   91  000010d4          	_main:
   92                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
   93  000010d4  afbefffc	sw	-4(r29),r30; push fp
   94  000010d8  001df020	add	r30,r0,r29; fp = sp
   95  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   96  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
   97  000010e4  8fc20000	lw	r2,(r30)
   98  000010e8  8fc30004	lw	r3,4(r30)
   99  000010ec  0c000f68	jal	___main
  100  000010f0  54000000	nop; not filled.
  101  000010f4  64410003	snei	r1,r2,#3
  102  000010f8  10200030	beqz	r1,L16_LF0
  103  000010fc  54000000	nop; not filled.
  104  00001100  23bdfff8	addi	r29,r29,#-8
  105  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  106  00001108  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  107  0000110c  afa40000	sw	(r29),r4
  108  00001110  8c610000	lw	r1,(r3)
  109  00001114  afa10004	sw	4(r29),r1
  110  00001118  0c00007c	jal	_Printf
  111  0000111c  54000000	nop; not filled.
  112  00001120  0c00017c	jal	_Exit
  113  00001124  54000000	nop; not filled.
  114  00001128  23bd0008	addi	r29,r29,#8
  115  0000112c          	L16_LF0:
  116  0000112c  23bdfff8	addi	r29,r29,#-8
  117  00001130  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  118  00001134  2484306c	addui	r4,r4,(LC1_LF0)&0xffff
  119  00001138  afa40000	sw	(r29),r4
  120  0000113c  0c000058	jal	_Printf
  121  00001140  54000000	nop; not filled.
  122  00001144  23bd0008	addi	r29,r29,#8
  123  00001148  0c000f00	jal	_exit
  124  0000114c  54000000	nop
  125  00001150          	.endproc _main
  126                      ;;;
  127                      ;;; Stub functions for DLX traps.
  128                      ;;;
  129                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  130                      ;;;
  131                      ;;; The traps such as Open and Close
  132                      ;;; (note the capital letters) are for use by user programs.  The traps
  133                      ;;; with names such as open and close (lower case) are for use by the OS.
  134                      ;;;
  137  00001150          	.align 2
  139                      ;;; The following are the traps to be used by user-level programs
  140                      ;;;
  142  00001150          	.align 2
  143  00001150          	.proc _Open
  144  00001150          	.global _Open
  145  00001150          	_Open:
  146                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  147                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  148                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  149  00001150  44000213	trap	#0x213
  150  00001154  4be00000	jr	r31
  151  00001158  54000000	nop
  152  0000115c          	.endproc _Open
  154  0000115c          	.proc _Close
  155  0000115c          	.global _Close
  156  0000115c          	_Close:
  157  0000115c  44000214	trap	#0x214
  158  00001160  4be00000	jr	r31
  159  00001164  54000000	nop
  160  00001168          	.endproc _Close
  162  00001168          	.proc _Read
  163  00001168          	.global _Read
  164  00001168          	_Read:
  165  00001168  44000210	trap	#0x210
  166  0000116c  4be00000	jr	r31
  167  00001170  54000000	nop
  168  00001174          	.endproc _Read
  170  00001174          	.proc _Write
  171  00001174          	.global _Write
  172  00001174          	_Write:
  173  00001174  44000211	trap	#0x211
  174  00001178  4be00000	jr	r31
  175  0000117c  54000000	nop
  176  00001180          	.endproc _Write
  178  00001180          	.proc _Lseek
  179  00001180          	.global _Lseek
  180  00001180          	_Lseek:
  181  00001180  44000212	trap	#0x212
  182  00001184  4be00000	jr	r31
  183  00001188  54000000	nop
  184  0000118c          	.endproc _Lseek
  186  0000118c          	.proc _Putchar
  187  0000118c          	.global _Putchar
  188  0000118c          	_Putchar:
  189  0000118c  44000280	trap	#0x280
  190  00001190  4be00000	jr	r31
  191  00001194  54000000	nop
  192  00001198          	.endproc _Putchar
  194  00001198          	.proc _Printf
  195  00001198          	.global _Printf
  196  00001198          	_Printf:
  197  00001198  44000201	trap	#0x201
  198  0000119c  4be00000	jr	r31
  199  000011a0  54000000	nop
  200  000011a4          	.endproc _Printf
  202  000011a4          	.proc _getpid
  203  000011a4          	.global _getpid
  204  000011a4          	_getpid:
  205  000011a4  44000431	trap	#0x431
  206  000011a8  4be00000	jr	r31
  207  000011ac  54000000	nop
  208  000011b0          	.endproc _getpid
  210  000011b0          	.proc _process_create
  211  000011b0          	.global _process_create
  212  000011b0          	_process_create:
  213  000011b0  44000432	trap	#0x432
  214  000011b4  4be00000	jr	r31
  215  000011b8  54000000	nop
  216  000011bc          	.endproc _process_create
  218  000011bc          	.proc _shmget
  219  000011bc          	.global _shmget
  220  000011bc          	_shmget:
  221  000011bc  44000440	trap	#0x440
  222  000011c0  4be00000	jr	r31
  223  000011c4  54000000	nop
  224  000011c8          	.endproc _shmget
  226  000011c8          	.proc _shmat
  227  000011c8          	.global _shmat
  228  000011c8          	_shmat:
  229  000011c8  44000441	trap	#0x441
  230  000011cc  4be00000	jr	r31
  231  000011d0  54000000	nop
  232  000011d4          	.endproc _shmat
  234  000011d4          	.proc _sem_create
  235  000011d4          	.global _sem_create
  236  000011d4          	_sem_create:
  237  000011d4  44000450	trap	#0x450
  238  000011d8  4be00000	jr	r31
  239  000011dc  54000000	nop
  240  000011e0          	.endproc _sem_create
  242  000011e0          	.proc _sem_wait
  243  000011e0          	.global _sem_wait
  244  000011e0          	_sem_wait:
  245  000011e0  44000451	trap	#0x451
  246  000011e4  4be00000	jr	r31
  247  000011e8  54000000	nop
  248  000011ec          	.endproc _sem_wait
  250  000011ec          	.proc _sem_signal
  251  000011ec          	.global _sem_signal
  252  000011ec          	_sem_signal:
  253  000011ec  44000452	trap	#0x452
  254  000011f0  4be00000	jr	r31
  255  000011f4  54000000	nop
  256  000011f8          	.endproc _sem_signal
  258  000011f8          	.proc _lock_create
  259  000011f8          	.global _lock_create
  260  000011f8          	_lock_create:
  261  000011f8  44000453	trap	#0x453
  262  000011fc  4be00000	jr	r31
  263  00001200  54000000	nop
  264  00001204          	.endproc _lock_create
  266  00001204          	.proc _lock_acquire
  267  00001204          	.global _lock_acquire
  268  00001204          	_lock_acquire:
  269  00001204  44000454	trap	#0x454
  270  00001208  4be00000	jr	r31
  271  0000120c  54000000	nop
  272  00001210          	.endproc _lock_acquire
  274  00001210          	.proc _lock_release
  275  00001210          	.global _lock_release
  276  00001210          	_lock_release:
  277  00001210  44000455	trap	#0x455
  278  00001214  4be00000	jr	r31
  279  00001218  54000000	nop
  280  0000121c          	.endproc _lock_release
  282  0000121c          	.proc _cond_create
  283  0000121c          	.global _cond_create
  284  0000121c          	_cond_create:
  285  0000121c  44000456	trap	#0x456
  286  00001220  4be00000	jr	r31
  287  00001224  54000000	nop
  288  00001228          	.endproc _cond_create
  290  00001228          	.proc _cond_wait
  291  00001228          	.global _cond_wait
  292  00001228          	_cond_wait:
  293  00001228  44000457	trap	#0x457
  294  0000122c  4be00000	jr	r31
  295  00001230  54000000	nop
  296  00001234          	.endproc _cond_wait
  298  00001234          	.proc _cond_signal
  299  00001234          	.global _cond_signal
  300  00001234          	_cond_signal:
  301  00001234  44000458	trap	#0x458
  302  00001238  4be00000	jr	r31
  303  0000123c  54000000	nop
  304  00001240          	.endproc _cond_signal
  306  00001240          	.proc _cond_broadcast
  307  00001240          	.global _cond_broadcast
  308  00001240          	_cond_broadcast:
  309  00001240  44000459	trap	#0x459
  310  00001244  4be00000	jr	r31
  311  00001248  54000000	nop
  312  0000124c          	.endproc _cond_broadcast
  314  0000124c          	.proc _mbox_create
  315  0000124c          	.global _mbox_create
  316  0000124c          	_mbox_create:
  317  0000124c  44000460	trap	#0x460
  318  00001250  4be00000	jr	r31
  319  00001254  54000000	nop
  320  00001258          	.endproc _mbox_create
  322  00001258          	.proc _mbox_open
  323  00001258          	.global _mbox_open
  324  00001258          	_mbox_open:
  325  00001258  44000461	trap	#0x461
  326  0000125c  4be00000	jr	r31
  327  00001260  54000000	nop
  328  00001264          	.endproc _mbox_open
  330  00001264          	.proc _mbox_close
  331  00001264          	.global _mbox_close
  332  00001264          	_mbox_close:
  333  00001264  44000462	trap	#0x462
  334  00001268  4be00000	jr	r31
  335  0000126c  54000000	nop
  336  00001270          	.endproc _mbox_close
  338  00001270          	.proc _mbox_send
  339  00001270          	.global _mbox_send
  340  00001270          	_mbox_send:
  341  00001270  44000463	trap	#0x463
  342  00001274  4be00000	jr	r31
  343  00001278  54000000	nop
  344  0000127c          	.endproc _mbox_send
  346  0000127c          	.proc _mbox_recv
  347  0000127c          	.global _mbox_recv
  348  0000127c          	_mbox_recv:
  349  0000127c  44000464	trap	#0x464
  350  00001280  4be00000	jr	r31
  351  00001284  54000000	nop
  352  00001288          	.endproc _mbox_recv
  354  00001288          	.proc _sleep
  355  00001288          	.global _sleep
  356  00001288          	_sleep:
  357  00001288  44000465	trap	#0x465
  358  0000128c  4be00000	jr	r31
  359  00001290  54000000	nop
  360  00001294          	.endproc _sleep
  362  00001294          	.proc _yield
  363  00001294          	.global _yield
  364  00001294          	_yield:
  365  00001294  44000466	trap	#0x466
  366  00001298  4be00000	jr	r31
  367  0000129c  54000000	nop
  368  000012a0          	.endproc _yield
  371  000012a0          	.proc _Exit
  372  000012a0          	.global _Exit
  373  000012a0          	_Exit:
  374  000012a0  44000500	trap	#0x500
  375  000012a4  4be00000	jr	r31
  376  000012a8  54000000	nop
  377  000012ac          	.endproc _Exit
  380  000012ac          	.proc _malloc
  381  000012ac          	.global _malloc
  382  000012ac          	_malloc:
  383  000012ac  44000467	trap	#0x467
  384  000012b0  4be00000	jr	r31
  385  000012b4          	.endproc _malloc
  388  000012b4          	.proc _mfree
  389  000012b4          	.global _mfree
  390  000012b4          	_mfree:
  391  000012b4  44000468	trap	#0x468
  392  000012b8  4be00000	jr	r31
  393  000012bc          	.endproc _mfree
  394                      ; Compiled by GCC
  396  000012bc          	.align 2
  397  000012bc          	.proc _isspace
  398  000012bc          	.global _isspace
  399  000012bc          	_isspace:
  400                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  401  000012bc  afbefffc	sw	-4(r29),r30; push fp
  402  000012c0  001df020	add	r30,r0,r29; fp = sp
  403  000012c4  afbffff8	sw	-8(r29),r31; push ret addr
  404  000012c8  2fbd0018	subui	r29,r29,#24; alloc local storage
  405  000012cc  afa20000	sw	0(r29),r2
  406  000012d0  afa30004	sw	4(r29),r3
  407  000012d4  afa40008	sw	8(r29),r4
  408  000012d8  83c20003	lb	r2,3(r30)
  409  000012dc  20010000	addi	r1,r0,#0
  410  000012e0  304300ff	andi	r3,r2,#0x00ff
  411  000012e4  60640020	seqi	r4,r3,#32
  412  000012e8  1480002c	bnez	r4,L3_LF2
  413  000012ec  54000000	nop; delay slot nop
  414  000012f0  304300ff	andi	r3,r2,#0x00ff
  415  000012f4  60640009	seqi	r4,r3,#9
  416  000012f8  1480001c	bnez	r4,L3_LF2
  417  000012fc  54000000	nop; delay slot nop
  418  00001300  304300ff	andi	r3,r2,#0x00ff
  419  00001304  6064000a	seqi	r4,r3,#10
  420  00001308  1480000c	bnez	r4,L3_LF2
  421  0000130c  54000000	nop; delay slot nop
  422  00001310  08000008	j	L2_LF2
  423  00001314  54000000	nop; delay slot nop
  424  00001318          	L3_LF2:
  425  00001318  20010001	addi	r1,r0,#1
  426  0000131c          	L2_LF2:
  427  0000131c  08000004	j	L1_LF2
  428  00001320  54000000	nop; delay slot nop
  429  00001324          	L1_LF2:
  430  00001324  8fa20000	lw	r2,0(r29)
  431  00001328  8fa30004	lw	r3,4(r29)
  432  0000132c  8fa40008	lw	r4,8(r29)
  433  00001330  8fdffff8	lw	r31,-8(r30)
  434  00001334  001ee820	add	r29,r0,r30
  435  00001338  8fdefffc	lw	r30,-4(r30)
  436  0000133c  4be00000	jr	r31
  437  00001340  54000000	nop
  438  00001344          	.endproc _isspace
  439  00001344          	.align 2
  440  00001344          	.proc _isxdigit
  441  00001344          	.global _isxdigit
  442  00001344          	_isxdigit:
  443                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  444  00001344  afbefffc	sw	-4(r29),r30; push fp
  445  00001348  001df020	add	r30,r0,r29; fp = sp
  446  0000134c  afbffff8	sw	-8(r29),r31; push ret addr
  447  00001350  2fbd0018	subui	r29,r29,#24; alloc local storage
  448  00001354  afa20000	sw	0(r29),r2
  449  00001358  afa30004	sw	4(r29),r3
  450  0000135c  afa40008	sw	8(r29),r4
  451  00001360  83c20003	lb	r2,3(r30)
  452  00001364  20010000	addi	r1,r0,#0
  453  00001368  304300ff	andi	r3,r2,#0x00ff
  454  0000136c  6c64002f	sgtui	r4,r3,#47
  455  00001370  1080001c	beqz	r4,L7_LF2
  456  00001374  54000000	nop; delay slot nop
  457  00001378  304300ff	andi	r3,r2,#0x00ff
  458  0000137c  70640039	sleui	r4,r3,#57
  459  00001380  1480005c	bnez	r4,L6_LF2
  460  00001384  54000000	nop; delay slot nop
  461  00001388  08000004	j	L7_LF2
  462  0000138c  54000000	nop; delay slot nop
  463  00001390          	L7_LF2:
  464  00001390  304300ff	andi	r3,r2,#0x00ff
  465  00001394  6c640060	sgtui	r4,r3,#96
  466  00001398  1080001c	beqz	r4,L8_LF2
  467  0000139c  54000000	nop; delay slot nop
  468  000013a0  304300ff	andi	r3,r2,#0x00ff
  469  000013a4  70640066	sleui	r4,r3,#102
  470  000013a8  14800034	bnez	r4,L6_LF2
  471  000013ac  54000000	nop; delay slot nop
  472  000013b0  08000004	j	L8_LF2
  473  000013b4  54000000	nop; delay slot nop
  474  000013b8          	L8_LF2:
  475  000013b8  304300ff	andi	r3,r2,#0x00ff
  476  000013bc  6c640040	sgtui	r4,r3,#64
  477  000013c0  10800020	beqz	r4,L5_LF2
  478  000013c4  54000000	nop; delay slot nop
  479  000013c8  304300ff	andi	r3,r2,#0x00ff
  480  000013cc  70640041	sleui	r4,r3,#65
  481  000013d0  1480000c	bnez	r4,L6_LF2
  482  000013d4  54000000	nop; delay slot nop
  483  000013d8  08000008	j	L5_LF2
  484  000013dc  54000000	nop; delay slot nop
  485  000013e0          	L6_LF2:
  486  000013e0  20010001	addi	r1,r0,#1
  487  000013e4          	L5_LF2:
  488  000013e4  08000004	j	L4_LF2
  489  000013e8  54000000	nop; delay slot nop
  490  000013ec          	L4_LF2:
  491  000013ec  8fa20000	lw	r2,0(r29)
  492  000013f0  8fa30004	lw	r3,4(r29)
  493  000013f4  8fa40008	lw	r4,8(r29)
  494  000013f8  8fdffff8	lw	r31,-8(r30)
  495  000013fc  001ee820	add	r29,r0,r30
  496  00001400  8fdefffc	lw	r30,-4(r30)
  497  00001404  4be00000	jr	r31
  498  00001408  54000000	nop
  499  0000140c          	.endproc _isxdigit
  500  0000140c          	.align 2
  501  0000140c          	.proc _dstrcpy
  502  0000140c          	.global _dstrcpy
  503  0000140c          	_dstrcpy:
  504                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  505  0000140c  afbefffc	sw	-4(r29),r30; push fp
  506  00001410  001df020	add	r30,r0,r29; fp = sp
  507  00001414  afbffff8	sw	-8(r29),r31; push ret addr
  508  00001418  2fbd0018	subui	r29,r29,#24; alloc local storage
  509  0000141c  afa20000	sw	0(r29),r2
  510  00001420  afa30004	sw	4(r29),r3
  511  00001424  8fc10000	lw	r1,(r30)
  512  00001428  afc1fff4	sw	-12(r30),r1
  513  0000142c          	L10_LF2:
  514  0000142c  8fc10000	lw	r1,(r30)
  515  00001430  20220001	addi	r2,r1,#1
  516  00001434  afc20000	sw	(r30),r2
  517  00001438  8fc20004	lw	r2,4(r30)
  518  0000143c  20430001	addi	r3,r2,#1
  519  00001440  afc30004	sw	4(r30),r3
  520  00001444  80420000	lb	r2,(r2)
  521  00001448  a0220000	sb	(r1),r2
  522  0000144c  a3c2fff3	sb	-13(r30),r2
  523  00001450          	L12_LF2:
  524  00001450  93c1fff3	lbu	r1,-13(r30)
  525  00001454  64220000	snei	r2,r1,#0
  526  00001458  1440000c	bnez	r2,L13_LF2
  527  0000145c  54000000	nop; delay slot nop
  528  00001460  0800000c	j	L11_LF2
  529  00001464  54000000	nop; delay slot nop
  530  00001468          	L13_LF2:
  531  00001468  0bffffc0	j	L10_LF2
  532  0000146c  54000000	nop; delay slot nop
  533  00001470          	L11_LF2:
  534  00001470  8fc1fff4	lw	r1,-12(r30)
  535  00001474  08000004	j	L9_LF2
  536  00001478  54000000	nop; delay slot nop
  537  0000147c          	L9_LF2:
  538  0000147c  8fa20000	lw	r2,0(r29)
  539  00001480  8fa30004	lw	r3,4(r29)
  540  00001484  8fdffff8	lw	r31,-8(r30)
  541  00001488  001ee820	add	r29,r0,r30
  542  0000148c  8fdefffc	lw	r30,-4(r30)
  543  00001490  4be00000	jr	r31
  544  00001494  54000000	nop
  545  00001498          	.endproc _dstrcpy
  546  00001498          	.align 2
  547  00001498          	.proc _dstrncpy
  548  00001498          	.global _dstrncpy
  549  00001498          	_dstrncpy:
  550                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  551  00001498  afbefffc	sw	-4(r29),r30; push fp
  552  0000149c  001df020	add	r30,r0,r29; fp = sp
  553  000014a0  afbffff8	sw	-8(r29),r31; push ret addr
  554  000014a4  2fbd0018	subui	r29,r29,#24; alloc local storage
  555  000014a8  afa20000	sw	0(r29),r2
  556  000014ac  afa30004	sw	4(r29),r3
  557  000014b0  8fc10000	lw	r1,(r30)
  558  000014b4  afc1fff4	sw	-12(r30),r1
  559  000014b8          	L15_LF2:
  560  000014b8  8fc10008	lw	r1,8(r30)
  561  000014bc  2022ffff	addi	r2,r1,#-1
  562  000014c0  afc20008	sw	8(r30),r2
  563  000014c4  70210000	slei	r1,r1,#0
  564  000014c8  1020000c	beqz	r1,L18_LF2
  565  000014cc  54000000	nop; delay slot nop
  566  000014d0  08000048	j	L16_LF2
  567  000014d4  54000000	nop; delay slot nop
  568  000014d8          	L18_LF2:
  569  000014d8  8fc10000	lw	r1,(r30)
  570  000014dc  20220001	addi	r2,r1,#1
  571  000014e0  afc20000	sw	(r30),r2
  572  000014e4  8fc20004	lw	r2,4(r30)
  573  000014e8  20430001	addi	r3,r2,#1
  574  000014ec  afc30004	sw	4(r30),r3
  575  000014f0  80420000	lb	r2,(r2)
  576  000014f4  a0220000	sb	(r1),r2
  577  000014f8  a3c2fff3	sb	-13(r30),r2
  578  000014fc          	L17_LF2:
  579  000014fc  93c1fff3	lbu	r1,-13(r30)
  580  00001500  64220000	snei	r2,r1,#0
  581  00001504  1440000c	bnez	r2,L19_LF2
  582  00001508  54000000	nop; delay slot nop
  583  0000150c  0800000c	j	L16_LF2
  584  00001510  54000000	nop; delay slot nop
  585  00001514          	L19_LF2:
  586  00001514  0bffffa0	j	L15_LF2
  587  00001518  54000000	nop; delay slot nop
  588  0000151c          	L16_LF2:
  589  0000151c  8fc1fff4	lw	r1,-12(r30)
  590  00001520  08000004	j	L14_LF2
  591  00001524  54000000	nop; delay slot nop
  592  00001528          	L14_LF2:
  593  00001528  8fa20000	lw	r2,0(r29)
  594  0000152c  8fa30004	lw	r3,4(r29)
  595  00001530  8fdffff8	lw	r31,-8(r30)
  596  00001534  001ee820	add	r29,r0,r30
  597  00001538  8fdefffc	lw	r30,-4(r30)
  598  0000153c  4be00000	jr	r31
  599  00001540  54000000	nop
  600  00001544          	.endproc _dstrncpy
  601  00001544          	.align 2
  602  00001544          	.proc _dstrcat
  603  00001544          	.global _dstrcat
  604  00001544          	_dstrcat:
  605                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  606  00001544  afbefffc	sw	-4(r29),r30; push fp
  607  00001548  001df020	add	r30,r0,r29; fp = sp
  608  0000154c  afbffff8	sw	-8(r29),r31; push ret addr
  609  00001550  2fbd0018	subui	r29,r29,#24; alloc local storage
  610  00001554  afa20000	sw	0(r29),r2
  611  00001558  8fc10000	lw	r1,(r30)
  612  0000155c  afc1fff4	sw	-12(r30),r1
  613  00001560          	L21_LF2:
  614  00001560  8fc10000	lw	r1,(r30)
  615  00001564  90220000	lbu	r2,(r1)
  616  00001568  64410000	snei	r1,r2,#0
  617  0000156c  1420000c	bnez	r1,L23_LF2
  618  00001570  54000000	nop; delay slot nop
  619  00001574  0800001c	j	L22_LF2
  620  00001578  54000000	nop; delay slot nop
  621  0000157c          	L23_LF2:
  622  0000157c  8fc20000	lw	r2,(r30)
  623  00001580  20410001	addi	r1,r2,#1
  624  00001584  00011020	add	r2,r0,r1
  625  00001588  afc20000	sw	(r30),r2
  626  0000158c  0bffffd0	j	L21_LF2
  627  00001590  54000000	nop; delay slot nop
  628  00001594          	L22_LF2:
  629  00001594  23bdfff8	addi	r29,r29,#-8
  630  00001598  001d0820	add	r1,r0,r29
  631  0000159c  8fc20000	lw	r2,(r30)
  632  000015a0  ac220000	sw	(r1),r2
  633  000015a4  8fc20004	lw	r2,4(r30)
  634  000015a8  ac220004	sw	4(r1),r2
  635  000015ac  0ffffe5c	jal	_dstrcpy
  636  000015b0  54000000	nop; delay slot nop
  637  000015b4  23bd0008	addi	r29,r29,#8
  638  000015b8  8fc1fff4	lw	r1,-12(r30)
  639  000015bc  08000004	j	L20_LF2
  640  000015c0  54000000	nop; delay slot nop
  641  000015c4          	L20_LF2:
  642  000015c4  8fa20000	lw	r2,0(r29)
  643  000015c8  8fdffff8	lw	r31,-8(r30)
  644  000015cc  001ee820	add	r29,r0,r30
  645  000015d0  8fdefffc	lw	r30,-4(r30)
  646  000015d4  4be00000	jr	r31
  647  000015d8  54000000	nop
  648  000015dc          	.endproc _dstrcat
  649  000015dc          	.align 2
  650  000015dc          	.proc _dstrncmp
  651  000015dc          	.global _dstrncmp
  652  000015dc          	_dstrncmp:
  653                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  654  000015dc  afbefffc	sw	-4(r29),r30; push fp
  655  000015e0  001df020	add	r30,r0,r29; fp = sp
  656  000015e4  afbffff8	sw	-8(r29),r31; push ret addr
  657  000015e8  2fbd0018	subui	r29,r29,#24; alloc local storage
  658  000015ec  afa20000	sw	0(r29),r2
  659  000015f0  afa30004	sw	4(r29),r3
  660  000015f4  54000000	nop
  661  000015f8  20010000	addi	r1,r0,#0
  662  000015fc  afc1fff4	sw	-12(r30),r1
  663  00001600          	L25_LF2:
  664  00001600  8fc1fff4	lw	r1,-12(r30)
  665  00001604  8fc20008	lw	r2,8(r30)
  666  00001608  0022082a	slt	r1,r1,r2
  667  0000160c  1420000c	bnez	r1,L28_LF2
  668  00001610  54000000	nop; delay slot nop
  669  00001614  08000088	j	L26_LF2
  670  00001618  54000000	nop; delay slot nop
  671  0000161c          	L28_LF2:
  672  0000161c  8fc10004	lw	r1,4(r30)
  673  00001620  90220000	lbu	r2,(r1)
  674  00001624  64410000	snei	r1,r2,#0
  675  00001628  14200018	bnez	r1,L29_LF2
  676  0000162c  54000000	nop; delay slot nop
  677  00001630  20010000	addi	r1,r0,#0
  678  00001634  080000d8	j	L24_LF2
  679  00001638  54000000	nop; delay slot nop
  680  0000163c  08000028	j	L30_LF2
  681  00001640  54000000	nop; delay slot nop
  682  00001644          	L29_LF2:
  683  00001644  8fc10000	lw	r1,(r30)
  684  00001648  8fc20004	lw	r2,4(r30)
  685  0000164c  90210000	lbu	r1,(r1)
  686  00001650  90420000	lbu	r2,(r2)
  687  00001654  00220829	sne	r1,r1,r2
  688  00001658  1020000c	beqz	r1,L30_LF2
  689  0000165c  54000000	nop; delay slot nop
  690  00001660  0800003c	j	L26_LF2
  691  00001664  54000000	nop; delay slot nop
  692  00001668          	L31_LF2:
  693  00001668          	L30_LF2:
  694  00001668  8fc20000	lw	r2,(r30)
  695  0000166c  20410001	addi	r1,r2,#1
  696  00001670  00011020	add	r2,r0,r1
  697  00001674  afc20000	sw	(r30),r2
  698  00001678  8fc20004	lw	r2,4(r30)
  699  0000167c  20410001	addi	r1,r2,#1
  700  00001680  00011020	add	r2,r0,r1
  701  00001684  afc20004	sw	4(r30),r2
  702  00001688          	L27_LF2:
  703  00001688  8fc2fff4	lw	r2,-12(r30)
  704  0000168c  20410001	addi	r1,r2,#1
  705  00001690  00011020	add	r2,r0,r1
  706  00001694  afc2fff4	sw	-12(r30),r2
  707  00001698  0bffff64	j	L25_LF2
  708  0000169c  54000000	nop; delay slot nop
  709  000016a0          	L26_LF2:
  710  000016a0  8fc1fff4	lw	r1,-12(r30)
  711  000016a4  8fc20008	lw	r2,8(r30)
  712  000016a8  00220828	seq	r1,r1,r2
  713  000016ac  10200018	beqz	r1,L32_LF2
  714  000016b0  54000000	nop; delay slot nop
  715  000016b4  20010000	addi	r1,r0,#0
  716  000016b8  08000054	j	L24_LF2
  717  000016bc  54000000	nop; delay slot nop
  718  000016c0  0800004c	j	L33_LF2
  719  000016c4  54000000	nop; delay slot nop
  720  000016c8          	L32_LF2:
  721  000016c8  8fc20000	lw	r2,(r30)
  722  000016cc  90410000	lbu	r1,(r2)
  723  000016d0  8fc20004	lw	r2,4(r30)
  724  000016d4  90430000	lbu	r3,(r2)
  725  000016d8  00230822	sub	r1,r1,r3
  726  000016dc  74220000	sgei	r2,r1,#0
  727  000016e0  10400020	beqz	r2,L34_LF2
  728  000016e4  54000000	nop; delay slot nop
  729  000016e8  8fc10000	lw	r1,(r30)
  730  000016ec  8fc20004	lw	r2,4(r30)
  731  000016f0  90210000	lbu	r1,(r1)
  732  000016f4  90420000	lbu	r2,(r2)
  733  000016f8  00220829	sne	r1,r1,r2
  734  000016fc  08000008	j	L35_LF2
  735  00001700  54000000	nop; delay slot nop
  736  00001704          	L34_LF2:
  737  00001704  2001ffff	addi	r1,r0,#-1
  738  00001708          	L35_LF2:
  739  00001708  08000004	j	L24_LF2
  740  0000170c  54000000	nop; delay slot nop
  741  00001710          	L33_LF2:
  742  00001710          	L24_LF2:
  743  00001710  8fa20000	lw	r2,0(r29)
  744  00001714  8fa30004	lw	r3,4(r29)
  745  00001718  8fdffff8	lw	r31,-8(r30)
  746  0000171c  001ee820	add	r29,r0,r30
  747  00001720  8fdefffc	lw	r30,-4(r30)
  748  00001724  4be00000	jr	r31
  749  00001728  54000000	nop
  750  0000172c          	.endproc _dstrncmp
  751  0000172c          	.align 2
  752  0000172c          	.proc _dstrlen
  753  0000172c          	.global _dstrlen
  754  0000172c          	_dstrlen:
  755                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  756  0000172c  afbefffc	sw	-4(r29),r30; push fp
  757  00001730  001df020	add	r30,r0,r29; fp = sp
  758  00001734  afbffff8	sw	-8(r29),r31; push ret addr
  759  00001738  2fbd0018	subui	r29,r29,#24; alloc local storage
  760  0000173c  afa20000	sw	0(r29),r2
  761  00001740  20010000	addi	r1,r0,#0
  762  00001744  afc1fff4	sw	-12(r30),r1
  763  00001748          	L37_LF2:
  764  00001748  8fc10000	lw	r1,(r30)
  765  0000174c  20220001	addi	r2,r1,#1
  766  00001750  afc20000	sw	(r30),r2
  767  00001754  90210000	lbu	r1,(r1)
  768  00001758  64220000	snei	r2,r1,#0
  769  0000175c  1440000c	bnez	r2,L39_LF2
  770  00001760  54000000	nop; delay slot nop
  771  00001764  0800001c	j	L38_LF2
  772  00001768  54000000	nop; delay slot nop
  773  0000176c          	L39_LF2:
  774  0000176c  8fc2fff4	lw	r2,-12(r30)
  775  00001770  20410001	addi	r1,r2,#1
  776  00001774  00011020	add	r2,r0,r1
  777  00001778  afc2fff4	sw	-12(r30),r2
  778  0000177c  0bffffc8	j	L37_LF2
  779  00001780  54000000	nop; delay slot nop
  780  00001784          	L38_LF2:
  781  00001784  8fc1fff4	lw	r1,-12(r30)
  782  00001788  08000004	j	L36_LF2
  783  0000178c  54000000	nop; delay slot nop
  784  00001790          	L36_LF2:
  785  00001790  8fa20000	lw	r2,0(r29)
  786  00001794  8fdffff8	lw	r31,-8(r30)
  787  00001798  001ee820	add	r29,r0,r30
  788  0000179c  8fdefffc	lw	r30,-4(r30)
  789  000017a0  4be00000	jr	r31
  790  000017a4  54000000	nop
  791  000017a8          	.endproc _dstrlen
  792  000017a8          	.align 2
  793  000017a8          	.proc _dstrstr
  794  000017a8          	.global _dstrstr
  795  000017a8          	_dstrstr:
  796                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  797  000017a8  afbefffc	sw	-4(r29),r30; push fp
  798  000017ac  001df020	add	r30,r0,r29; fp = sp
  799  000017b0  afbffff8	sw	-8(r29),r31; push ret addr
  800  000017b4  2fbd0018	subui	r29,r29,#24; alloc local storage
  801  000017b8  afa20000	sw	0(r29),r2
  802  000017bc  23bdfff8	addi	r29,r29,#-8
  803  000017c0  001d0820	add	r1,r0,r29
  804  000017c4  8fc20004	lw	r2,4(r30)
  805  000017c8  ac220000	sw	(r1),r2
  806  000017cc  0fffff5c	jal	_dstrlen
  807  000017d0  54000000	nop; delay slot nop
  808  000017d4  23bd0008	addi	r29,r29,#8
  809  000017d8  afc1fff4	sw	-12(r30),r1
  810  000017dc          	L41_LF2:
  811  000017dc  8fc10000	lw	r1,(r30)
  812  000017e0  90220000	lbu	r2,(r1)
  813  000017e4  64410000	snei	r1,r2,#0
  814  000017e8  1420000c	bnez	r1,L43_LF2
  815  000017ec  54000000	nop; delay slot nop
  816  000017f0  08000060	j	L42_LF2
  817  000017f4  54000000	nop; delay slot nop
  818  000017f8          	L43_LF2:
  819  000017f8  23bdfff0	addi	r29,r29,#-16
  820  000017fc  001d0820	add	r1,r0,r29
  821  00001800  8fc20000	lw	r2,(r30)
  822  00001804  ac220000	sw	(r1),r2
  823  00001808  8fc20004	lw	r2,4(r30)
  824  0000180c  ac220004	sw	4(r1),r2
  825  00001810  8fc2fff4	lw	r2,-12(r30)
  826  00001814  ac220008	sw	8(r1),r2
  827  00001818  0ffffdc0	jal	_dstrncmp
  828  0000181c  54000000	nop; delay slot nop
  829  00001820  23bd0010	addi	r29,r29,#16
  830  00001824  64220000	snei	r2,r1,#0
  831  00001828  14400010	bnez	r2,L44_LF2
  832  0000182c  54000000	nop; delay slot nop
  833  00001830  8fc10000	lw	r1,(r30)
  834  00001834  08000028	j	L40_LF2
  835  00001838  54000000	nop; delay slot nop
  836  0000183c          	L44_LF2:
  837  0000183c  8fc20000	lw	r2,(r30)
  838  00001840  20410001	addi	r1,r2,#1
  839  00001844  00011020	add	r2,r0,r1
  840  00001848  afc20000	sw	(r30),r2
  841  0000184c  0bffff8c	j	L41_LF2
  842  00001850  54000000	nop; delay slot nop
  843  00001854          	L42_LF2:
  844  00001854  20010000	addi	r1,r0,#0
  845  00001858  08000004	j	L40_LF2
  846  0000185c  54000000	nop; delay slot nop
  847  00001860          	L40_LF2:
  848  00001860  8fa20000	lw	r2,0(r29)
  849  00001864  8fdffff8	lw	r31,-8(r30)
  850  00001868  001ee820	add	r29,r0,r30
  851  0000186c  8fdefffc	lw	r30,-4(r30)
  852  00001870  4be00000	jr	r31
  853  00001874  54000000	nop
  854  00001878          	.endproc _dstrstr
  855  00001878          	.align 2
  856  00001878          	.proc _dmindex
  857  00001878          	.global _dmindex
  858  00001878          	_dmindex:
  859                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  860  00001878  afbefffc	sw	-4(r29),r30; push fp
  861  0000187c  001df020	add	r30,r0,r29; fp = sp
  862  00001880  afbffff8	sw	-8(r29),r31; push ret addr
  863  00001884  2fbd0018	subui	r29,r29,#24; alloc local storage
  864  00001888  afa20000	sw	0(r29),r2
  865  0000188c  54000000	nop
  866  00001890          	L46_LF2:
  867  00001890  8fc10000	lw	r1,(r30)
  868  00001894  90220000	lbu	r2,(r1)
  869  00001898  64410000	snei	r1,r2,#0
  870  0000189c  1420000c	bnez	r1,L48_LF2
  871  000018a0  54000000	nop; delay slot nop
  872  000018a4  08000070	j	L47_LF2
  873  000018a8  54000000	nop; delay slot nop
  874  000018ac          	L48_LF2:
  875  000018ac  8fc10004	lw	r1,4(r30)
  876  000018b0  afc1fff4	sw	-12(r30),r1
  877  000018b4          	L49_LF2:
  878  000018b4  8fc1fff4	lw	r1,-12(r30)
  879  000018b8  90220000	lbu	r2,(r1)
  880  000018bc  64410000	snei	r1,r2,#0
  881  000018c0  1420000c	bnez	r1,L52_LF2
  882  000018c4  54000000	nop; delay slot nop
  883  000018c8  08000044	j	L50_LF2
  884  000018cc  54000000	nop; delay slot nop
  885  000018d0          	L52_LF2:
  886  000018d0  8fc10000	lw	r1,(r30)
  887  000018d4  8fc2fff4	lw	r2,-12(r30)
  888  000018d8  90210000	lbu	r1,(r1)
  889  000018dc  90420000	lbu	r2,(r2)
  890  000018e0  00220828	seq	r1,r1,r2
  891  000018e4  10200010	beqz	r1,L51_LF2
  892  000018e8  54000000	nop; delay slot nop
  893  000018ec  8fc10000	lw	r1,(r30)
  894  000018f0  08000030	j	L45_LF2
  895  000018f4  54000000	nop; delay slot nop
  896  000018f8          	L53_LF2:
  897  000018f8          	L51_LF2:
  898  000018f8  8fc2fff4	lw	r2,-12(r30)
  899  000018fc  20410001	addi	r1,r2,#1
  900  00001900  00011020	add	r2,r0,r1
  901  00001904  afc2fff4	sw	-12(r30),r2
  902  00001908  0bffffa8	j	L49_LF2
  903  0000190c  54000000	nop; delay slot nop
  904  00001910          	L50_LF2:
  905  00001910  0bffff7c	j	L46_LF2
  906  00001914  54000000	nop; delay slot nop
  907  00001918          	L47_LF2:
  908  00001918  20010000	addi	r1,r0,#0
  909  0000191c  08000004	j	L45_LF2
  910  00001920  54000000	nop; delay slot nop
  911  00001924          	L45_LF2:
  912  00001924  8fa20000	lw	r2,0(r29)
  913  00001928  8fdffff8	lw	r31,-8(r30)
  914  0000192c  001ee820	add	r29,r0,r30
  915  00001930  8fdefffc	lw	r30,-4(r30)
  916  00001934  4be00000	jr	r31
  917  00001938  54000000	nop
  918  0000193c          	.endproc _dmindex
  919  0000193c          	.align 2
  920  0000193c          	.proc _dindex
  921  0000193c          	.global _dindex
  922  0000193c          	_dindex:
  923                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  924  0000193c  afbefffc	sw	-4(r29),r30; push fp
  925  00001940  001df020	add	r30,r0,r29; fp = sp
  926  00001944  afbffff8	sw	-8(r29),r31; push ret addr
  927  00001948  2fbd0010	subui	r29,r29,#16; alloc local storage
  928  0000194c  afa20000	sw	0(r29),r2
  929  00001950  54000000	nop
  930  00001954          	L55_LF2:
  931  00001954  8fc10000	lw	r1,(r30)
  932  00001958  90220000	lbu	r2,(r1)
  933  0000195c  64410000	snei	r1,r2,#0
  934  00001960  1420000c	bnez	r1,L57_LF2
  935  00001964  54000000	nop; delay slot nop
  936  00001968  08000040	j	L56_LF2
  937  0000196c  54000000	nop; delay slot nop
  938  00001970          	L57_LF2:
  939  00001970  8fc10000	lw	r1,(r30)
  940  00001974  90220000	lbu	r2,(r1)
  941  00001978  8fc10004	lw	r1,4(r30)
  942  0000197c  00411028	seq	r2,r2,r1
  943  00001980  10400010	beqz	r2,L58_LF2
  944  00001984  54000000	nop; delay slot nop
  945  00001988  8fc10000	lw	r1,(r30)
  946  0000198c  08000028	j	L54_LF2
  947  00001990  54000000	nop; delay slot nop
  948  00001994          	L58_LF2:
  949  00001994  8fc20000	lw	r2,(r30)
  950  00001998  20410001	addi	r1,r2,#1
  951  0000199c  00011020	add	r2,r0,r1
  952  000019a0  afc20000	sw	(r30),r2
  953  000019a4  0bffffac	j	L55_LF2
  954  000019a8  54000000	nop; delay slot nop
  955  000019ac          	L56_LF2:
  956  000019ac  20010000	addi	r1,r0,#0
  957  000019b0  08000004	j	L54_LF2
  958  000019b4  54000000	nop; delay slot nop
  959  000019b8          	L54_LF2:
  960  000019b8  8fa20000	lw	r2,0(r29)
  961  000019bc  8fdffff8	lw	r31,-8(r30)
  962  000019c0  001ee820	add	r29,r0,r30
  963  000019c4  8fdefffc	lw	r30,-4(r30)
  964  000019c8  4be00000	jr	r31
  965  000019cc  54000000	nop
  966  000019d0          	.endproc _dindex
  967  000019d0          	.align 2
  968  000019d0          	.proc _ditoa
  969  000019d0          	.global _ditoa
  970  000019d0          	_ditoa:
  971                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
  972  000019d0  afbefffc	sw	-4(r29),r30; push fp
  973  000019d4  001df020	add	r30,r0,r29; fp = sp
  974  000019d8  afbffff8	sw	-8(r29),r31; push ret addr
  975  000019dc  2fbd0018	subui	r29,r29,#24; alloc local storage
  976  000019e0  afa20000	sw	0(r29),r2
  977  000019e4  afa30004	sw	4(r29),r3
  978  000019e8  8fc10000	lw	r1,(r30)
  979  000019ec  68220000	slti	r2,r1,#0
  980  000019f0  1040002c	beqz	r2,L60_LF2
  981  000019f4  54000000	nop; delay slot nop
  982  000019f8  8fc10004	lw	r1,4(r30)
  983  000019fc  20220001	addi	r2,r1,#1
  984  00001a00  afc20004	sw	4(r30),r2
  985  00001a04  2002002d	addi	r2,r0,(#0x2d)&0xff
  986  00001a08  a0220000	sb	(r1),r2
  987  00001a0c  8fc10000	lw	r1,(r30)
  988  00001a10  00011022	sub	r2,r0,r1
  989  00001a14  afc20000	sw	(r30),r2
  990  00001a18  08000118	j	L61_LF2
  991  00001a1c  54000000	nop; delay slot nop
  992  00001a20          	L60_LF2:
  993  00001a20  8fc10000	lw	r1,(r30)
  994  00001a24  64220000	snei	r2,r1,#0
  995  00001a28  14400020	bnez	r2,L62_LF2
  996  00001a2c  54000000	nop; delay slot nop
  997  00001a30  8fc10004	lw	r1,4(r30)
  998  00001a34  20220001	addi	r2,r1,#1
  999  00001a38  afc20004	sw	4(r30),r2
 1000  00001a3c  20020030	addi	r2,r0,(#0x30)&0xff
 1001  00001a40  a0220000	sb	(r1),r2
 1002  00001a44  080000ec	j	L61_LF2
 1003  00001a48  54000000	nop; delay slot nop
 1004  00001a4c          	L62_LF2:
 1005  00001a4c  20010001	addi	r1,r0,#1
 1006  00001a50  afc1fff4	sw	-12(r30),r1
 1007  00001a54          	L64_LF2:
 1008  00001a54  8fc1fff4	lw	r1,-12(r30)
 1009  00001a58  8fc20000	lw	r2,(r30)
 1010  00001a5c  0022082c	sle	r1,r1,r2
 1011  00001a60  1420000c	bnez	r1,L66_LF2
 1012  00001a64  54000000	nop; delay slot nop
 1013  00001a68  08000024	j	L65_LF2
 1014  00001a6c  54000000	nop; delay slot nop
 1015  00001a70          	L67_LF2:
 1016  00001a70          	L66_LF2:
 1017  00001a70  8fc1fff4	lw	r1,-12(r30)
 1018  00001a74  00011820	add	r3,r0,r1
 1019  00001a78  50620002	slli	r2,r3,#0x2
 1020  00001a7c  00411020	add	r2,r2,r1
 1021  00001a80  50410001	slli	r1,r2,#0x1
 1022  00001a84  afc1fff4	sw	-12(r30),r1
 1023  00001a88  0bffffc8	j	L64_LF2
 1024  00001a8c  54000000	nop; delay slot nop
 1025  00001a90          	L65_LF2:
 1026  00001a90  54000000	nop
 1027  00001a94          	L68_LF2:
 1028  00001a94  8fc1fff4	lw	r1,-12(r30)
 1029  00001a98  2002000a	addi	r2,r0,#10
 1030  00001a9c  00200035	movi2fp	f0,r1
 1031  00001aa0  00400835	movi2fp	f1,r2
 1032  00001aa4  0401000f	div	f0,f0,f1
 1033  00001aa8  00000834	movfp2i	r1,f0
 1034  00001aac  afc1fff4	sw	-12(r30),r1
 1035  00001ab0  8fc10004	lw	r1,4(r30)
 1036  00001ab4  20220001	addi	r2,r1,#1
 1037  00001ab8  afc20004	sw	4(r30),r2
 1038  00001abc  8fc20000	lw	r2,(r30)
 1039  00001ac0  8fc3fff4	lw	r3,-12(r30)
 1040  00001ac4  00400035	movi2fp	f0,r2
 1041  00001ac8  00600835	movi2fp	f1,r3
 1042  00001acc  0401000f	div	f0,f0,f1
 1043  00001ad0  00001034	movfp2i	r2,f0
 1044  00001ad4  00021820	add	r3,r0,r2
 1045  00001ad8  20620030	addi	r2,r3,#48
 1046  00001adc  a0220000	sb	(r1),r2
 1047  00001ae0  8fc10000	lw	r1,(r30)
 1048  00001ae4  8fc3fff4	lw	r3,-12(r30)
 1049  00001ae8  00200035	movi2fp	f0,r1
 1050  00001aec  00600835	movi2fp	f1,r3
 1051  00001af0  0401000f	div	f0,f0,f1
 1052  00001af4  00001034	movfp2i	r2,f0
 1053  00001af8  8fc3fff4	lw	r3,-12(r30)
 1054  00001afc  00400035	movi2fp	f0,r2
 1055  00001b00  00600835	movi2fp	f1,r3
 1056  00001b04  0401000e	mult	f0,f0,f1
 1057  00001b08  00001034	movfp2i	r2,f0
 1058  00001b0c  00220822	sub	r1,r1,r2
 1059  00001b10  afc10000	sw	(r30),r1
 1060  00001b14          	L70_LF2:
 1061  00001b14  8fc1fff4	lw	r1,-12(r30)
 1062  00001b18  6c220001	sgti	r2,r1,#1
 1063  00001b1c  1440000c	bnez	r2,L71_LF2
 1064  00001b20  54000000	nop; delay slot nop
 1065  00001b24  0800000c	j	L61_LF2
 1066  00001b28  54000000	nop; delay slot nop
 1067  00001b2c          	L71_LF2:
 1068  00001b2c  0bffff64	j	L68_LF2
 1069  00001b30  54000000	nop; delay slot nop
 1070  00001b34          	L69_LF2:
 1071  00001b34          	L63_LF2:
 1072  00001b34          	L61_LF2:
 1073  00001b34  8fc10004	lw	r1,4(r30)
 1074  00001b38  20020000	addi	r2,r0,(#0x0)&0xff
 1075  00001b3c  a0220000	sb	(r1),r2
 1076  00001b40          	L59_LF2:
 1077  00001b40  8fa20000	lw	r2,0(r29)
 1078  00001b44  8fa30004	lw	r3,4(r29)
 1079  00001b48  8fdffff8	lw	r31,-8(r30)
 1080  00001b4c  001ee820	add	r29,r0,r30
 1081  00001b50  8fdefffc	lw	r30,-4(r30)
 1082  00001b54  4be00000	jr	r31
 1083  00001b58  54000000	nop
 1084  00001b5c          	.endproc _ditoa
 1085  00001b5c          	.align 2
 1086  00001b5c          	.proc _dstrtol
 1087  00001b5c          	.global _dstrtol
 1088  00001b5c          	_dstrtol:
 1089                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1090  00001b5c  afbefffc	sw	-4(r29),r30; push fp
 1091  00001b60  001df020	add	r30,r0,r29; fp = sp
 1092  00001b64  afbffff8	sw	-8(r29),r31; push ret addr
 1093  00001b68  2fbd0020	subui	r29,r29,#32; alloc local storage
 1094  00001b6c  afa20000	sw	0(r29),r2
 1095  00001b70  20010000	addi	r1,r0,#0
 1096  00001b74  afc1fff4	sw	-12(r30),r1
 1097  00001b78          	L73_LF2:
 1098  00001b78  8fc10000	lw	r1,(r30)
 1099  00001b7c  90220000	lbu	r2,(r1)
 1100  00001b80  60410020	seqi	r1,r2,#32
 1101  00001b84  14200034	bnez	r1,L75_LF2
 1102  00001b88  54000000	nop; delay slot nop
 1103  00001b8c  8fc10000	lw	r1,(r30)
 1104  00001b90  90220000	lbu	r2,(r1)
 1105  00001b94  60410009	seqi	r1,r2,#9
 1106  00001b98  14200020	bnez	r1,L75_LF2
 1107  00001b9c  54000000	nop; delay slot nop
 1108  00001ba0  8fc10000	lw	r1,(r30)
 1109  00001ba4  90220000	lbu	r2,(r1)
 1110  00001ba8  6041000a	seqi	r1,r2,#10
 1111  00001bac  1420000c	bnez	r1,L75_LF2
 1112  00001bb0  54000000	nop; delay slot nop
 1113  00001bb4  0800001c	j	L74_LF2
 1114  00001bb8  54000000	nop; delay slot nop
 1115  00001bbc          	L75_LF2:
 1116  00001bbc  8fc20000	lw	r2,(r30)
 1117  00001bc0  20410001	addi	r1,r2,#1
 1118  00001bc4  00011020	add	r2,r0,r1
 1119  00001bc8  afc20000	sw	(r30),r2
 1120  00001bcc  0bffffa8	j	L73_LF2
 1121  00001bd0  54000000	nop; delay slot nop
 1122  00001bd4          	L74_LF2:
 1123  00001bd4  8fc10004	lw	r1,4(r30)
 1124  00001bd8  64220000	snei	r2,r1,#0
 1125  00001bdc  10400010	beqz	r2,L76_LF2
 1126  00001be0  54000000	nop; delay slot nop
 1127  00001be4  8fc10004	lw	r1,4(r30)
 1128  00001be8  8fc20000	lw	r2,(r30)
 1129  00001bec  ac220000	sw	(r1),r2
 1130  00001bf0          	L76_LF2:
 1131  00001bf0  8fc10000	lw	r1,(r30)
 1132  00001bf4  90220000	lbu	r2,(r1)
 1133  00001bf8  64410000	snei	r1,r2,#0
 1134  00001bfc  14200010	bnez	r1,L77_LF2
 1135  00001c00  54000000	nop; delay slot nop
 1136  00001c04  8fc1fff4	lw	r1,-12(r30)
 1137  00001c08  08000294	j	L72_LF2
 1138  00001c0c  54000000	nop; delay slot nop
 1139  00001c10          	L77_LF2:
 1140  00001c10  8fc10000	lw	r1,(r30)
 1141  00001c14  90220000	lbu	r2,(r1)
 1142  00001c18  6041002d	seqi	r1,r2,#45
 1143  00001c1c  10200024	beqz	r1,L78_LF2
 1144  00001c20  54000000	nop; delay slot nop
 1145  00001c24  2001ffff	addi	r1,r0,#-1
 1146  00001c28  afc1ffec	sw	-20(r30),r1
 1147  00001c2c  8fc20000	lw	r2,(r30)
 1148  00001c30  20410001	addi	r1,r2,#1
 1149  00001c34  00011020	add	r2,r0,r1
 1150  00001c38  afc20000	sw	(r30),r2
 1151  00001c3c  0800000c	j	L79_LF2
 1152  00001c40  54000000	nop; delay slot nop
 1153  00001c44          	L78_LF2:
 1154  00001c44  20010001	addi	r1,r0,#1
 1155  00001c48  afc1ffec	sw	-20(r30),r1
 1156  00001c4c          	L79_LF2:
 1157  00001c4c  8fc10008	lw	r1,8(r30)
 1158  00001c50  64220000	snei	r2,r1,#0
 1159  00001c54  14400090	bnez	r2,L80_LF2
 1160  00001c58  54000000	nop; delay slot nop
 1161  00001c5c  8fc10000	lw	r1,(r30)
 1162  00001c60  90220000	lbu	r2,(r1)
 1163  00001c64  60410030	seqi	r1,r2,#48
 1164  00001c68  10200074	beqz	r1,L81_LF2
 1165  00001c6c  54000000	nop; delay slot nop
 1166  00001c70  8fc20000	lw	r2,(r30)
 1167  00001c74  20410001	addi	r1,r2,#1
 1168  00001c78  00011020	add	r2,r0,r1
 1169  00001c7c  afc20000	sw	(r30),r2
 1170  00001c80  8fc10000	lw	r1,(r30)
 1171  00001c84  90220000	lbu	r2,(r1)
 1172  00001c88  60410078	seqi	r1,r2,#120
 1173  00001c8c  14200020	bnez	r1,L83_LF2
 1174  00001c90  54000000	nop; delay slot nop
 1175  00001c94  8fc10000	lw	r1,(r30)
 1176  00001c98  90220000	lbu	r2,(r1)
 1177  00001c9c  60410058	seqi	r1,r2,#88
 1178  00001ca0  1420000c	bnez	r1,L83_LF2
 1179  00001ca4  54000000	nop; delay slot nop
 1180  00001ca8  08000024	j	L82_LF2
 1181  00001cac  54000000	nop; delay slot nop
 1182  00001cb0          	L83_LF2:
 1183  00001cb0  20010010	addi	r1,r0,#16
 1184  00001cb4  afc10008	sw	8(r30),r1
 1185  00001cb8  8fc20000	lw	r2,(r30)
 1186  00001cbc  20410001	addi	r1,r2,#1
 1187  00001cc0  00011020	add	r2,r0,r1
 1188  00001cc4  afc20000	sw	(r30),r2
 1189  00001cc8  0800000c	j	L84_LF2
 1190  00001ccc  54000000	nop; delay slot nop
 1191  00001cd0          	L82_LF2:
 1192  00001cd0  20010008	addi	r1,r0,#8
 1193  00001cd4  afc10008	sw	8(r30),r1
 1194  00001cd8          	L84_LF2:
 1195  00001cd8  0800000c	j	L80_LF2
 1196  00001cdc  54000000	nop; delay slot nop
 1197  00001ce0          	L81_LF2:
 1198  00001ce0  2001000a	addi	r1,r0,#10
 1199  00001ce4  afc10008	sw	8(r30),r1
 1200  00001ce8          	L85_LF2:
 1201  00001ce8          	L80_LF2:
 1202  00001ce8  8fc10008	lw	r1,8(r30)
 1203  00001cec  70220000	slei	r2,r1,#0
 1204  00001cf0  1440001c	bnez	r2,L87_LF2
 1205  00001cf4  54000000	nop; delay slot nop
 1206  00001cf8  8fc10008	lw	r1,8(r30)
 1207  00001cfc  6c220010	sgti	r2,r1,#16
 1208  00001d00  1440000c	bnez	r2,L87_LF2
 1209  00001d04  54000000	nop; delay slot nop
 1210  00001d08  08000010	j	L86_LF2
 1211  00001d0c  54000000	nop; delay slot nop
 1212  00001d10          	L87_LF2:
 1213  00001d10  8fc1fff4	lw	r1,-12(r30)
 1214  00001d14  08000188	j	L72_LF2
 1215  00001d18  54000000	nop; delay slot nop
 1216  00001d1c          	L86_LF2:
 1217  00001d1c  54000000	nop
 1218  00001d20          	L88_LF2:
 1219  00001d20  8fc10000	lw	r1,(r30)
 1220  00001d24  90220000	lbu	r2,(r1)
 1221  00001d28  6c41002f	sgtui	r1,r2,#47
 1222  00001d2c  10200030	beqz	r1,L91_LF2
 1223  00001d30  54000000	nop; delay slot nop
 1224  00001d34  8fc10000	lw	r1,(r30)
 1225  00001d38  90220000	lbu	r2,(r1)
 1226  00001d3c  70410039	sleui	r1,r2,#57
 1227  00001d40  1020001c	beqz	r1,L91_LF2
 1228  00001d44  54000000	nop; delay slot nop
 1229  00001d48  8fc10000	lw	r1,(r30)
 1230  00001d4c  90220000	lbu	r2,(r1)
 1231  00001d50  2041ffd0	addi	r1,r2,#-48
 1232  00001d54  afc1fff0	sw	-16(r30),r1
 1233  00001d58  0800008c	j	L92_LF2
 1234  00001d5c  54000000	nop; delay slot nop
 1235  00001d60          	L91_LF2:
 1236  00001d60  8fc10000	lw	r1,(r30)
 1237  00001d64  90220000	lbu	r2,(r1)
 1238  00001d68  6c410060	sgtui	r1,r2,#96
 1239  00001d6c  10200030	beqz	r1,L93_LF2
 1240  00001d70  54000000	nop; delay slot nop
 1241  00001d74  8fc10000	lw	r1,(r30)
 1242  00001d78  90220000	lbu	r2,(r1)
 1243  00001d7c  7041007a	sleui	r1,r2,#122
 1244  00001d80  1020001c	beqz	r1,L93_LF2
 1245  00001d84  54000000	nop; delay slot nop
 1246  00001d88  8fc10000	lw	r1,(r30)
 1247  00001d8c  90220000	lbu	r2,(r1)
 1248  00001d90  2041ffa9	addi	r1,r2,#-87
 1249  00001d94  afc1fff0	sw	-16(r30),r1
 1250  00001d98  0800004c	j	L92_LF2
 1251  00001d9c  54000000	nop; delay slot nop
 1252  00001da0          	L93_LF2:
 1253  00001da0  8fc10000	lw	r1,(r30)
 1254  00001da4  90220000	lbu	r2,(r1)
 1255  00001da8  6c410040	sgtui	r1,r2,#64
 1256  00001dac  10200030	beqz	r1,L95_LF2
 1257  00001db0  54000000	nop; delay slot nop
 1258  00001db4  8fc10000	lw	r1,(r30)
 1259  00001db8  90220000	lbu	r2,(r1)
 1260  00001dbc  7041005a	sleui	r1,r2,#90
 1261  00001dc0  1020001c	beqz	r1,L95_LF2
 1262  00001dc4  54000000	nop; delay slot nop
 1263  00001dc8  8fc10000	lw	r1,(r30)
 1264  00001dcc  90220000	lbu	r2,(r1)
 1265  00001dd0  2041ffc9	addi	r1,r2,#-55
 1266  00001dd4  afc1fff0	sw	-16(r30),r1
 1267  00001dd8  0800000c	j	L92_LF2
 1268  00001ddc  54000000	nop; delay slot nop
 1269  00001de0          	L95_LF2:
 1270  00001de0  200103e8	addi	r1,r0,#1000
 1271  00001de4  afc1fff0	sw	-16(r30),r1
 1272  00001de8          	L96_LF2:
 1273  00001de8          	L94_LF2:
 1274  00001de8          	L92_LF2:
 1275  00001de8  8fc1fff0	lw	r1,-16(r30)
 1276  00001dec  8fc20008	lw	r2,8(r30)
 1277  00001df0  0022082a	slt	r1,r1,r2
 1278  00001df4  10200040	beqz	r1,L90_LF2
 1279  00001df8  54000000	nop; delay slot nop
 1280  00001dfc  8fc1fff4	lw	r1,-12(r30)
 1281  00001e00  8fc20008	lw	r2,8(r30)
 1282  00001e04  00200035	movi2fp	f0,r1
 1283  00001e08  00400835	movi2fp	f1,r2
 1284  00001e0c  0401000e	mult	f0,f0,f1
 1285  00001e10  00000834	movfp2i	r1,f0
 1286  00001e14  afc1fff4	sw	-12(r30),r1
 1287  00001e18  8fc1fff4	lw	r1,-12(r30)
 1288  00001e1c  8fc2fff0	lw	r2,-16(r30)
 1289  00001e20  00220820	add	r1,r1,r2
 1290  00001e24  afc1fff4	sw	-12(r30),r1
 1291  00001e28  8fc20000	lw	r2,(r30)
 1292  00001e2c  20410001	addi	r1,r2,#1
 1293  00001e30  00011020	add	r2,r0,r1
 1294  00001e34  afc20000	sw	(r30),r2
 1295  00001e38          	L97_LF2:
 1296  00001e38          	L90_LF2:
 1297  00001e38  8fc1fff0	lw	r1,-16(r30)
 1298  00001e3c  8fc20008	lw	r2,8(r30)
 1299  00001e40  0022082a	slt	r1,r1,r2
 1300  00001e44  1420000c	bnez	r1,L98_LF2
 1301  00001e48  54000000	nop; delay slot nop
 1302  00001e4c  0800000c	j	L89_LF2
 1303  00001e50  54000000	nop; delay slot nop
 1304  00001e54          	L98_LF2:
 1305  00001e54  0bfffec8	j	L88_LF2
 1306  00001e58  54000000	nop; delay slot nop
 1307  00001e5c          	L89_LF2:
 1308  00001e5c  8fc10004	lw	r1,4(r30)
 1309  00001e60  64220000	snei	r2,r1,#0
 1310  00001e64  10400010	beqz	r2,L99_LF2
 1311  00001e68  54000000	nop; delay slot nop
 1312  00001e6c  8fc10004	lw	r1,4(r30)
 1313  00001e70  8fc20000	lw	r2,(r30)
 1314  00001e74  ac220000	sw	(r1),r2
 1315  00001e78          	L99_LF2:
 1316  00001e78  8fc1fff4	lw	r1,-12(r30)
 1317  00001e7c  8fc2ffec	lw	r2,-20(r30)
 1318  00001e80  00200035	movi2fp	f0,r1
 1319  00001e84  00400835	movi2fp	f1,r2
 1320  00001e88  0401000e	mult	f0,f0,f1
 1321  00001e8c  00000834	movfp2i	r1,f0
 1322  00001e90  afc1fff4	sw	-12(r30),r1
 1323  00001e94  8fc1fff4	lw	r1,-12(r30)
 1324  00001e98  08000004	j	L72_LF2
 1325  00001e9c  54000000	nop; delay slot nop
 1326  00001ea0          	L72_LF2:
 1327  00001ea0  8fa20000	lw	r2,0(r29)
 1328  00001ea4  8fdffff8	lw	r31,-8(r30)
 1329  00001ea8  001ee820	add	r29,r0,r30
 1330  00001eac  8fdefffc	lw	r30,-4(r30)
 1331  00001eb0  4be00000	jr	r31
 1332  00001eb4  54000000	nop
 1333  00001eb8          	.endproc _dstrtol
 1334  00001eb8          	.align 2
 1335  00001eb8          	.proc _bcopy
 1336  00001eb8          	.global _bcopy
 1337  00001eb8          	_bcopy:
 1338                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1339  00001eb8  afbefffc	sw	-4(r29),r30; push fp
 1340  00001ebc  001df020	add	r30,r0,r29; fp = sp
 1341  00001ec0  afbffff8	sw	-8(r29),r31; push ret addr
 1342  00001ec4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1343  00001ec8  afa20000	sw	0(r29),r2
 1344  00001ecc  afa30004	sw	4(r29),r3
 1345  00001ed0  54000000	nop
 1346  00001ed4          	L101_LF2:
 1347  00001ed4  8fc10008	lw	r1,8(r30)
 1348  00001ed8  2022ffff	addi	r2,r1,#-1
 1349  00001edc  afc20008	sw	8(r30),r2
 1350  00001ee0  6c210000	sgti	r1,r1,#0
 1351  00001ee4  1420000c	bnez	r1,L103_LF2
 1352  00001ee8  54000000	nop; delay slot nop
 1353  00001eec  0800002c	j	L102_LF2
 1354  00001ef0  54000000	nop; delay slot nop
 1355  00001ef4          	L103_LF2:
 1356  00001ef4  8fc10004	lw	r1,4(r30)
 1357  00001ef8  20220001	addi	r2,r1,#1
 1358  00001efc  afc20004	sw	4(r30),r2
 1359  00001f00  8fc20000	lw	r2,(r30)
 1360  00001f04  20430001	addi	r3,r2,#1
 1361  00001f08  afc30000	sw	(r30),r3
 1362  00001f0c  80420000	lb	r2,(r2)
 1363  00001f10  a0220000	sb	(r1),r2
 1364  00001f14  0bffffbc	j	L101_LF2
 1365  00001f18  54000000	nop; delay slot nop
 1366  00001f1c          	L102_LF2:
 1367  00001f1c          	L100_LF2:
 1368  00001f1c  8fa20000	lw	r2,0(r29)
 1369  00001f20  8fa30004	lw	r3,4(r29)
 1370  00001f24  8fdffff8	lw	r31,-8(r30)
 1371  00001f28  001ee820	add	r29,r0,r30
 1372  00001f2c  8fdefffc	lw	r30,-4(r30)
 1373  00001f30  4be00000	jr	r31
 1374  00001f34  54000000	nop
 1375  00001f38          	.endproc _bcopy
 1376  00001f38          	.align 2
 1377  00001f38          	.proc _bzero
 1378  00001f38          	.global _bzero
 1379  00001f38          	_bzero:
 1380                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1381  00001f38  afbefffc	sw	-4(r29),r30; push fp
 1382  00001f3c  001df020	add	r30,r0,r29; fp = sp
 1383  00001f40  afbffff8	sw	-8(r29),r31; push ret addr
 1384  00001f44  2fbd0010	subui	r29,r29,#16; alloc local storage
 1385  00001f48  afa20000	sw	0(r29),r2
 1386  00001f4c  54000000	nop
 1387  00001f50          	L105_LF2:
 1388  00001f50  8fc10004	lw	r1,4(r30)
 1389  00001f54  2022ffff	addi	r2,r1,#-1
 1390  00001f58  afc20004	sw	4(r30),r2
 1391  00001f5c  6c210000	sgti	r1,r1,#0
 1392  00001f60  1420000c	bnez	r1,L107_LF2
 1393  00001f64  54000000	nop; delay slot nop
 1394  00001f68  08000020	j	L106_LF2
 1395  00001f6c  54000000	nop; delay slot nop
 1396  00001f70          	L107_LF2:
 1397  00001f70  8fc10000	lw	r1,(r30)
 1398  00001f74  20220001	addi	r2,r1,#1
 1399  00001f78  afc20000	sw	(r30),r2
 1400  00001f7c  20020000	addi	r2,r0,(#0x0)&0xff
 1401  00001f80  a0220000	sb	(r1),r2
 1402  00001f84  0bffffc8	j	L105_LF2
 1403  00001f88  54000000	nop; delay slot nop
 1404  00001f8c          	L106_LF2:
 1405  00001f8c          	L104_LF2:
 1406  00001f8c  8fa20000	lw	r2,0(r29)
 1407  00001f90  8fdffff8	lw	r31,-8(r30)
 1408  00001f94  001ee820	add	r29,r0,r30
 1409  00001f98  8fdefffc	lw	r30,-4(r30)
 1410  00001f9c  4be00000	jr	r31
 1411  00001fa0  54000000	nop
 1412  00001fa4          	.endproc _bzero
 1413  00001fa4          	.align 2
 1414  00001fa4          	.proc _min
 1415  00001fa4          	.global _min
 1416  00001fa4          	_min:
 1417                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1418  00001fa4  afbefffc	sw	-4(r29),r30; push fp
 1419  00001fa8  001df020	add	r30,r0,r29; fp = sp
 1420  00001fac  afbffff8	sw	-8(r29),r31; push ret addr
 1421  00001fb0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1422  00001fb4  afa20000	sw	0(r29),r2
 1423  00001fb8  afa30004	sw	4(r29),r3
 1424  00001fbc  8fc10000	lw	r1,(r30)
 1425  00001fc0  8fc20004	lw	r2,4(r30)
 1426  00001fc4  0022182c	sle	r3,r1,r2
 1427  00001fc8  14600008	bnez	r3,L109_LF2
 1428  00001fcc  54000000	nop; delay slot nop
 1429  00001fd0  8fc10004	lw	r1,4(r30)
 1430  00001fd4          	L109_LF2:
 1431  00001fd4  08000004	j	L108_LF2
 1432  00001fd8  54000000	nop; delay slot nop
 1433  00001fdc          	L108_LF2:
 1434  00001fdc  8fa20000	lw	r2,0(r29)
 1435  00001fe0  8fa30004	lw	r3,4(r29)
 1436  00001fe4  8fdffff8	lw	r31,-8(r30)
 1437  00001fe8  001ee820	add	r29,r0,r30
 1438  00001fec  8fdefffc	lw	r30,-4(r30)
 1439  00001ff0  4be00000	jr	r31
 1440  00001ff4  54000000	nop
 1441  00001ff8          	.endproc _min
 1442  00001ff8          	.align 2
 1443  00001ff8          	.proc _max
 1444  00001ff8          	.global _max
 1445  00001ff8          	_max:
 1446                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1447  00001ff8  afbefffc	sw	-4(r29),r30; push fp
 1448  00001ffc  001df020	add	r30,r0,r29; fp = sp
 1449  00002000  afbffff8	sw	-8(r29),r31; push ret addr
 1450  00002004  2fbd0010	subui	r29,r29,#16; alloc local storage
 1451  00002008  afa20000	sw	0(r29),r2
 1452  0000200c  afa30004	sw	4(r29),r3
 1453  00002010  8fc10000	lw	r1,(r30)
 1454  00002014  8fc20004	lw	r2,4(r30)
 1455  00002018  0022182d	sge	r3,r1,r2
 1456  0000201c  14600008	bnez	r3,L111_LF2
 1457  00002020  54000000	nop; delay slot nop
 1458  00002024  8fc10004	lw	r1,4(r30)
 1459  00002028          	L111_LF2:
 1460  00002028  08000004	j	L110_LF2
 1461  0000202c  54000000	nop; delay slot nop
 1462  00002030          	L110_LF2:
 1463  00002030  8fa20000	lw	r2,0(r29)
 1464  00002034  8fa30004	lw	r3,4(r29)
 1465  00002038  8fdffff8	lw	r31,-8(r30)
 1466  0000203c  001ee820	add	r29,r0,r30
 1467  00002040  8fdefffc	lw	r30,-4(r30)
 1468  00002044  4be00000	jr	r31
 1469  00002048  54000000	nop
 1470  0000204c          	.endproc _max
 1471                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1472                      ;;;
 1473                      ;;; Most of the traps are called in files from libtraps.
 1476  0000204c          	.align 2
 1477  0000204c          	.proc _exit
 1478  0000204c          	.global _exit
 1479  0000204c          	_exit:
 1480  0000204c  44000300	trap	#0x300
 1481  00002050  4be00000	jr	r31
 1482  00002054  54000000	nop
 1483  00002058          	.endproc _exit
 1485                      ; for the benefit of gcc.
 1486  00002058          	.proc ___main
 1487  00002058          	.global ___main
 1488  00002058          	___main:
 1489  00002058  4be00000	jr	r31
 1490  0000205c  54000000	nop
 1491  00002060          	.endproc ___main
 1492  00002060          	.text
 1493  00002060          	.global _etext
 1494  00002060          	_etext:
 1495  00002060          	.align 3
 1496  00002060          	.data
 1497  0000308b          	.global _edata
 1498  0000308b          	_edata:
