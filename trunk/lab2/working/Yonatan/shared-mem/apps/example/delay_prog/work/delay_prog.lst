 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 200
    4                      ; Text size: 4440
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f70726f	
   82  00003018  63735f63	
   82  0000301c  6f6d706c	
   82  00003020  65746564	
   82  00003024  5f73656d	
   82  00003028  6170686f	
   82  0000302c  72653e0a	
   82  00003030  00      	
   83  00003031          	.align 2
   84  00003034          	LC1_LF0:
   85  00003034  64656c61	.ascii "delay_prog (%d): Delay Start!\n\000"
   85  00003038  795f7072	
   85  0000303c  6f672028	
   85  00003040  2564293a	
   85  00003044  2044656c	
   85  00003048  61792053	
   85  0000304c  74617274	
   85  00003050  210a00  	
   86  00003053          	.align 2
   87  00003054          	LC2_LF0:
   88  00003054  64656c61	.ascii "delay_prog (%d): Delay End!\n\000"
   88  00003058  795f7072	
   88  0000305c  6f672028	
   88  00003060  2564293a	
   88  00003064  2044656c	
   88  00003068  61792045	
   88  0000306c  6e64210a	
   88  00003070  00      	
   89  00003071          	.align 2
   90  00003074          	LC3_LF0:
   91  00003074  68656c6c	.ascii "hello_world (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   91  00003078  6f5f776f	
   91  0000307c  726c6420	
   91  00003080  28256429	
   91  00003084  3a204261	
   91  00003088  64207365	
   91  0000308c  6d617068	
   91  00003090  6f726520	
   91  00003094  735f7072	
   91  00003098  6f63735f	
   91  0000309c  636f6d70	
   91  000030a0  6c657465	
   91  000030a4  64202825	
   91  000030a8  6429210a	
   91  000030ac  00      	
   92  000030ad          	.align 2
   93  000030b0          	LC4_LF0:
   94  000030b0  64656c61	.ascii "delay_prog (%d): Done!\n\000"
   94  000030b4  795f7072	
   94  000030b8  6f672028	
   94  000030bc  2564293a	
   94  000030c0  20446f6e	
   94  000030c4  65210a00	
   95  000030c8          	.text
   96  000010d4          	.align 2
   97  000010d4          	.proc _main
   98  000010d4          	.global _main
   99  000010d4          	_main:
  100                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  101  000010d4  afbefffc	sw	-4(r29),r30; push fp
  102  000010d8  001df020	add	r30,r0,r29; fp = sp
  103  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  104  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  105  000010e4  8fc20000	lw	r2,(r30)
  106  000010e8  8fc30004	lw	r3,4(r30)
  107  000010ec  0c001060	jal	___main
  108  000010f0  54000000	nop; not filled.
  109  000010f4  64410002	snei	r1,r2,#2
  110  000010f8  10200028	beqz	r1,L22_LF0
  111  000010fc  54000000	nop; not filled.
  112  00001100  23bdfff8	addi	r29,r29,#-8
  113  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  114  00001108  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  115  0000110c  afa40000	sw	(r29),r4
  116  00001110  0c000164	jal	_Printf
  117  00001114  54000000	nop; not filled.
  118  00001118  0c00027c	jal	_Exit
  119  0000111c  54000000	nop; not filled.
  120  00001120  23bd0008	addi	r29,r29,#8
  121  00001124          	L22_LF0:
  122  00001124  23bdfff0	addi	r29,r29,#-16
  123  00001128  8c630004	lw	r3,4(r3)
  124  0000112c  afa30000	sw	(r29),r3
  125  00001130  20040000	addi	r4,r0,#0
  126  00001134  afa40004	sw	4(r29),r4
  127  00001138  2004000a	addi	r4,r0,#10
  128  0000113c  afa40008	sw	8(r29),r4
  129  00001140  0c000b10	jal	_dstrtol
  130  00001144  54000000	nop; not filled.
  131  00001148  00011820	add	r3,r0,r1
  132  0000114c  0c000134	jal	_getpid
  133  00001150  54000000	nop; not filled.
  134  00001154  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  135  00001158  24843034	addui	r4,r4,(LC1_LF0)&0xffff
  136  0000115c  afa40000	sw	(r29),r4
  137  00001160  afa10004	sw	4(r29),r1
  138  00001164  0c000110	jal	_Printf
  139  00001168  54000000	nop; not filled.
  140  0000116c  20020000	addi	r2,r0,#0
  141  00001170  23bd0010	addi	r29,r29,#16
  142  00001174  3c1f000f	lhi	r31,#15
  143  00001178  27ff423f	addui	r31,r31,#16959
  144  0000117c          	L25_LF0:
  145  0000117c  20420001	addi	r2,r2,#1
  146  00001180  005f082c	sle	r1,r2,r31
  147  00001184  1420fff4	bnez	r1,L25_LF0
  148  00001188  54000000	nop; not filled.
  149  0000118c  0c0000f4	jal	_getpid
  150  00001190  54000000	nop; not filled.
  151  00001194  23bdfff8	addi	r29,r29,#-8
  152  00001198  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  153  0000119c  24843054	addui	r4,r4,(LC2_LF0)&0xffff
  154  000011a0  afa40000	sw	(r29),r4
  155  000011a4  afa10004	sw	4(r29),r1
  156  000011a8  0c0000cc	jal	_Printf
  157  000011ac  54000000	nop; not filled.
  158  000011b0  afa30000	sw	(r29),r3
  159  000011b4  0c00012c	jal	_sem_signal
  160  000011b8  54000000	nop; not filled.
  161  000011bc  23bd0008	addi	r29,r29,#8
  162  000011c0  64210001	snei	r1,r1,#1
  163  000011c4  10200038	beqz	r1,L28_LF0
  164  000011c8  54000000	nop; not filled.
  165  000011cc  0c0000b4	jal	_getpid
  166  000011d0  54000000	nop; not filled.
  167  000011d4  23bdfff0	addi	r29,r29,#-16
  168  000011d8  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  169  000011dc  24843074	addui	r4,r4,(LC3_LF0)&0xffff
  170  000011e0  afa40000	sw	(r29),r4
  171  000011e4  afa10004	sw	4(r29),r1
  172  000011e8  afa30008	sw	8(r29),r3
  173  000011ec  0c000088	jal	_Printf
  174  000011f0  54000000	nop; not filled.
  175  000011f4  0c0001a0	jal	_Exit
  176  000011f8  54000000	nop; not filled.
  177  000011fc  23bd0010	addi	r29,r29,#16
  178  00001200          	L28_LF0:
  179  00001200  0c000080	jal	_getpid
  180  00001204  54000000	nop; not filled.
  181  00001208  23bdfff8	addi	r29,r29,#-8
  182  0000120c  3c040000	lhi	r4,((LC4_LF0)>>16)&0xffff
  183  00001210  248430b0	addui	r4,r4,(LC4_LF0)&0xffff
  184  00001214  afa40000	sw	(r29),r4
  185  00001218  afa10004	sw	4(r29),r1
  186  0000121c  0c000058	jal	_Printf
  187  00001220  54000000	nop; not filled.
  188  00001224  23bd0008	addi	r29,r29,#8
  189  00001228  0c000f18	jal	_exit
  190  0000122c  54000000	nop
  191  00001230          	.endproc _main
  192                      ;;;
  193                      ;;; Stub functions for DLX traps.
  194                      ;;;
  195                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  196                      ;;;
  197                      ;;; The traps such as Open and Close
  198                      ;;; (note the capital letters) are for use by user programs.  The traps
  199                      ;;; with names such as open and close (lower case) are for use by the OS.
  200                      ;;;
  203  00001230          	.align 2
  205                      ;;; The following are the traps to be used by user-level programs
  206                      ;;;
  208  00001230          	.align 2
  209  00001230          	.proc _Open
  210  00001230          	.global _Open
  211  00001230          	_Open:
  212                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  213                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  214                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  215  00001230  44000213	trap	#0x213
  216  00001234  4be00000	jr	r31
  217  00001238  54000000	nop
  218  0000123c          	.endproc _Open
  220  0000123c          	.proc _Close
  221  0000123c          	.global _Close
  222  0000123c          	_Close:
  223  0000123c  44000214	trap	#0x214
  224  00001240  4be00000	jr	r31
  225  00001244  54000000	nop
  226  00001248          	.endproc _Close
  228  00001248          	.proc _Read
  229  00001248          	.global _Read
  230  00001248          	_Read:
  231  00001248  44000210	trap	#0x210
  232  0000124c  4be00000	jr	r31
  233  00001250  54000000	nop
  234  00001254          	.endproc _Read
  236  00001254          	.proc _Write
  237  00001254          	.global _Write
  238  00001254          	_Write:
  239  00001254  44000211	trap	#0x211
  240  00001258  4be00000	jr	r31
  241  0000125c  54000000	nop
  242  00001260          	.endproc _Write
  244  00001260          	.proc _Lseek
  245  00001260          	.global _Lseek
  246  00001260          	_Lseek:
  247  00001260  44000212	trap	#0x212
  248  00001264  4be00000	jr	r31
  249  00001268  54000000	nop
  250  0000126c          	.endproc _Lseek
  252  0000126c          	.proc _Putchar
  253  0000126c          	.global _Putchar
  254  0000126c          	_Putchar:
  255  0000126c  44000280	trap	#0x280
  256  00001270  4be00000	jr	r31
  257  00001274  54000000	nop
  258  00001278          	.endproc _Putchar
  260  00001278          	.proc _Printf
  261  00001278          	.global _Printf
  262  00001278          	_Printf:
  263  00001278  44000201	trap	#0x201
  264  0000127c  4be00000	jr	r31
  265  00001280  54000000	nop
  266  00001284          	.endproc _Printf
  268  00001284          	.proc _getpid
  269  00001284          	.global _getpid
  270  00001284          	_getpid:
  271  00001284  44000431	trap	#0x431
  272  00001288  4be00000	jr	r31
  273  0000128c  54000000	nop
  274  00001290          	.endproc _getpid
  276  00001290          	.proc _process_create
  277  00001290          	.global _process_create
  278  00001290          	_process_create:
  279  00001290  44000432	trap	#0x432
  280  00001294  4be00000	jr	r31
  281  00001298  54000000	nop
  282  0000129c          	.endproc _process_create
  284  0000129c          	.proc _shmget
  285  0000129c          	.global _shmget
  286  0000129c          	_shmget:
  287  0000129c  44000440	trap	#0x440
  288  000012a0  4be00000	jr	r31
  289  000012a4  54000000	nop
  290  000012a8          	.endproc _shmget
  292  000012a8          	.proc _shmat
  293  000012a8          	.global _shmat
  294  000012a8          	_shmat:
  295  000012a8  44000441	trap	#0x441
  296  000012ac  4be00000	jr	r31
  297  000012b0  54000000	nop
  298  000012b4          	.endproc _shmat
  300  000012b4          	.proc _shmdt
  301  000012b4          	.global _shmdt
  302  000012b4          	_shmdt:
  303  000012b4  44000442	trap	#0x442
  304  000012b8  4be00000	jr	r31
  305  000012bc  54000000	nop
  306  000012c0          	.endproc _shmdt
  308  000012c0          	.proc _shmrm
  309  000012c0          	.global _shmrm
  310  000012c0          	_shmrm:
  311  000012c0  44000443	trap	#0x443
  312  000012c4  4be00000	jr	r31
  313  000012c8  54000000	nop
  314  000012cc          	.endproc _shmrm
  316  000012cc          	.proc _sem_create
  317  000012cc          	.global _sem_create
  318  000012cc          	_sem_create:
  319  000012cc  44000450	trap	#0x450
  320  000012d0  4be00000	jr	r31
  321  000012d4  54000000	nop
  322  000012d8          	.endproc _sem_create
  324  000012d8          	.proc _sem_wait
  325  000012d8          	.global _sem_wait
  326  000012d8          	_sem_wait:
  327  000012d8  44000451	trap	#0x451
  328  000012dc  4be00000	jr	r31
  329  000012e0  54000000	nop
  330  000012e4          	.endproc _sem_wait
  332  000012e4          	.proc _sem_signal
  333  000012e4          	.global _sem_signal
  334  000012e4          	_sem_signal:
  335  000012e4  44000452	trap	#0x452
  336  000012e8  4be00000	jr	r31
  337  000012ec  54000000	nop
  338  000012f0          	.endproc _sem_signal
  340  000012f0          	.proc _lock_create
  341  000012f0          	.global _lock_create
  342  000012f0          	_lock_create:
  343  000012f0  44000453	trap	#0x453
  344  000012f4  4be00000	jr	r31
  345  000012f8  54000000	nop
  346  000012fc          	.endproc _lock_create
  348  000012fc          	.proc _lock_acquire
  349  000012fc          	.global _lock_acquire
  350  000012fc          	_lock_acquire:
  351  000012fc  44000454	trap	#0x454
  352  00001300  4be00000	jr	r31
  353  00001304  54000000	nop
  354  00001308          	.endproc _lock_acquire
  356  00001308          	.proc _lock_release
  357  00001308          	.global _lock_release
  358  00001308          	_lock_release:
  359  00001308  44000455	trap	#0x455
  360  0000130c  4be00000	jr	r31
  361  00001310  54000000	nop
  362  00001314          	.endproc _lock_release
  364  00001314          	.proc _cond_create
  365  00001314          	.global _cond_create
  366  00001314          	_cond_create:
  367  00001314  44000456	trap	#0x456
  368  00001318  4be00000	jr	r31
  369  0000131c  54000000	nop
  370  00001320          	.endproc _cond_create
  372  00001320          	.proc _cond_wait
  373  00001320          	.global _cond_wait
  374  00001320          	_cond_wait:
  375  00001320  44000457	trap	#0x457
  376  00001324  4be00000	jr	r31
  377  00001328  54000000	nop
  378  0000132c          	.endproc _cond_wait
  380  0000132c          	.proc _cond_signal
  381  0000132c          	.global _cond_signal
  382  0000132c          	_cond_signal:
  383  0000132c  44000458	trap	#0x458
  384  00001330  4be00000	jr	r31
  385  00001334  54000000	nop
  386  00001338          	.endproc _cond_signal
  388  00001338          	.proc _cond_broadcast
  389  00001338          	.global _cond_broadcast
  390  00001338          	_cond_broadcast:
  391  00001338  44000459	trap	#0x459
  392  0000133c  4be00000	jr	r31
  393  00001340  54000000	nop
  394  00001344          	.endproc _cond_broadcast
  396  00001344          	.proc _mbox_create
  397  00001344          	.global _mbox_create
  398  00001344          	_mbox_create:
  399  00001344  44000460	trap	#0x460
  400  00001348  4be00000	jr	r31
  401  0000134c  54000000	nop
  402  00001350          	.endproc _mbox_create
  404  00001350          	.proc _mbox_open
  405  00001350          	.global _mbox_open
  406  00001350          	_mbox_open:
  407  00001350  44000461	trap	#0x461
  408  00001354  4be00000	jr	r31
  409  00001358  54000000	nop
  410  0000135c          	.endproc _mbox_open
  412  0000135c          	.proc _mbox_close
  413  0000135c          	.global _mbox_close
  414  0000135c          	_mbox_close:
  415  0000135c  44000462	trap	#0x462
  416  00001360  4be00000	jr	r31
  417  00001364  54000000	nop
  418  00001368          	.endproc _mbox_close
  420  00001368          	.proc _mbox_send
  421  00001368          	.global _mbox_send
  422  00001368          	_mbox_send:
  423  00001368  44000463	trap	#0x463
  424  0000136c  4be00000	jr	r31
  425  00001370  54000000	nop
  426  00001374          	.endproc _mbox_send
  428  00001374          	.proc _mbox_recv
  429  00001374          	.global _mbox_recv
  430  00001374          	_mbox_recv:
  431  00001374  44000464	trap	#0x464
  432  00001378  4be00000	jr	r31
  433  0000137c  54000000	nop
  434  00001380          	.endproc _mbox_recv
  436  00001380          	.proc _sleep
  437  00001380          	.global _sleep
  438  00001380          	_sleep:
  439  00001380  44000465	trap	#0x465
  440  00001384  4be00000	jr	r31
  441  00001388  54000000	nop
  442  0000138c          	.endproc _sleep
  444  0000138c          	.proc _yield
  445  0000138c          	.global _yield
  446  0000138c          	_yield:
  447  0000138c  44000466	trap	#0x466
  448  00001390  4be00000	jr	r31
  449  00001394  54000000	nop
  450  00001398          	.endproc _yield
  453  00001398          	.proc _Exit
  454  00001398          	.global _Exit
  455  00001398          	_Exit:
  456  00001398  44000500	trap	#0x500
  457  0000139c  4be00000	jr	r31
  458  000013a0  54000000	nop
  459  000013a4          	.endproc _Exit
  462  000013a4          	.proc _malloc
  463  000013a4          	.global _malloc
  464  000013a4          	_malloc:
  465  000013a4  44000467	trap	#0x467
  466  000013a8  4be00000	jr	r31
  467  000013ac          	.endproc _malloc
  470  000013ac          	.proc _mfree
  471  000013ac          	.global _mfree
  472  000013ac          	_mfree:
  473  000013ac  44000468	trap	#0x468
  474  000013b0  4be00000	jr	r31
  475  000013b4          	.endproc _mfree
  476                      ; Compiled by GCC
  478  000013b4          	.align 2
  479  000013b4          	.proc _isspace
  480  000013b4          	.global _isspace
  481  000013b4          	_isspace:
  482                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  483  000013b4  afbefffc	sw	-4(r29),r30; push fp
  484  000013b8  001df020	add	r30,r0,r29; fp = sp
  485  000013bc  afbffff8	sw	-8(r29),r31; push ret addr
  486  000013c0  2fbd0018	subui	r29,r29,#24; alloc local storage
  487  000013c4  afa20000	sw	0(r29),r2
  488  000013c8  afa30004	sw	4(r29),r3
  489  000013cc  afa40008	sw	8(r29),r4
  490  000013d0  83c20003	lb	r2,3(r30)
  491  000013d4  20010000	addi	r1,r0,#0
  492  000013d8  304300ff	andi	r3,r2,#0x00ff
  493  000013dc  60640020	seqi	r4,r3,#32
  494  000013e0  1480002c	bnez	r4,L3_LF2
  495  000013e4  54000000	nop; delay slot nop
  496  000013e8  304300ff	andi	r3,r2,#0x00ff
  497  000013ec  60640009	seqi	r4,r3,#9
  498  000013f0  1480001c	bnez	r4,L3_LF2
  499  000013f4  54000000	nop; delay slot nop
  500  000013f8  304300ff	andi	r3,r2,#0x00ff
  501  000013fc  6064000a	seqi	r4,r3,#10
  502  00001400  1480000c	bnez	r4,L3_LF2
  503  00001404  54000000	nop; delay slot nop
  504  00001408  08000008	j	L2_LF2
  505  0000140c  54000000	nop; delay slot nop
  506  00001410          	L3_LF2:
  507  00001410  20010001	addi	r1,r0,#1
  508  00001414          	L2_LF2:
  509  00001414  08000004	j	L1_LF2
  510  00001418  54000000	nop; delay slot nop
  511  0000141c          	L1_LF2:
  512  0000141c  8fa20000	lw	r2,0(r29)
  513  00001420  8fa30004	lw	r3,4(r29)
  514  00001424  8fa40008	lw	r4,8(r29)
  515  00001428  8fdffff8	lw	r31,-8(r30)
  516  0000142c  001ee820	add	r29,r0,r30
  517  00001430  8fdefffc	lw	r30,-4(r30)
  518  00001434  4be00000	jr	r31
  519  00001438  54000000	nop
  520  0000143c          	.endproc _isspace
  521  0000143c          	.align 2
  522  0000143c          	.proc _isxdigit
  523  0000143c          	.global _isxdigit
  524  0000143c          	_isxdigit:
  525                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  526  0000143c  afbefffc	sw	-4(r29),r30; push fp
  527  00001440  001df020	add	r30,r0,r29; fp = sp
  528  00001444  afbffff8	sw	-8(r29),r31; push ret addr
  529  00001448  2fbd0018	subui	r29,r29,#24; alloc local storage
  530  0000144c  afa20000	sw	0(r29),r2
  531  00001450  afa30004	sw	4(r29),r3
  532  00001454  afa40008	sw	8(r29),r4
  533  00001458  83c20003	lb	r2,3(r30)
  534  0000145c  20010000	addi	r1,r0,#0
  535  00001460  304300ff	andi	r3,r2,#0x00ff
  536  00001464  6c64002f	sgtui	r4,r3,#47
  537  00001468  1080001c	beqz	r4,L7_LF2
  538  0000146c  54000000	nop; delay slot nop
  539  00001470  304300ff	andi	r3,r2,#0x00ff
  540  00001474  70640039	sleui	r4,r3,#57
  541  00001478  1480005c	bnez	r4,L6_LF2
  542  0000147c  54000000	nop; delay slot nop
  543  00001480  08000004	j	L7_LF2
  544  00001484  54000000	nop; delay slot nop
  545  00001488          	L7_LF2:
  546  00001488  304300ff	andi	r3,r2,#0x00ff
  547  0000148c  6c640060	sgtui	r4,r3,#96
  548  00001490  1080001c	beqz	r4,L8_LF2
  549  00001494  54000000	nop; delay slot nop
  550  00001498  304300ff	andi	r3,r2,#0x00ff
  551  0000149c  70640066	sleui	r4,r3,#102
  552  000014a0  14800034	bnez	r4,L6_LF2
  553  000014a4  54000000	nop; delay slot nop
  554  000014a8  08000004	j	L8_LF2
  555  000014ac  54000000	nop; delay slot nop
  556  000014b0          	L8_LF2:
  557  000014b0  304300ff	andi	r3,r2,#0x00ff
  558  000014b4  6c640040	sgtui	r4,r3,#64
  559  000014b8  10800020	beqz	r4,L5_LF2
  560  000014bc  54000000	nop; delay slot nop
  561  000014c0  304300ff	andi	r3,r2,#0x00ff
  562  000014c4  70640041	sleui	r4,r3,#65
  563  000014c8  1480000c	bnez	r4,L6_LF2
  564  000014cc  54000000	nop; delay slot nop
  565  000014d0  08000008	j	L5_LF2
  566  000014d4  54000000	nop; delay slot nop
  567  000014d8          	L6_LF2:
  568  000014d8  20010001	addi	r1,r0,#1
  569  000014dc          	L5_LF2:
  570  000014dc  08000004	j	L4_LF2
  571  000014e0  54000000	nop; delay slot nop
  572  000014e4          	L4_LF2:
  573  000014e4  8fa20000	lw	r2,0(r29)
  574  000014e8  8fa30004	lw	r3,4(r29)
  575  000014ec  8fa40008	lw	r4,8(r29)
  576  000014f0  8fdffff8	lw	r31,-8(r30)
  577  000014f4  001ee820	add	r29,r0,r30
  578  000014f8  8fdefffc	lw	r30,-4(r30)
  579  000014fc  4be00000	jr	r31
  580  00001500  54000000	nop
  581  00001504          	.endproc _isxdigit
  582  00001504          	.align 2
  583  00001504          	.proc _dstrcpy
  584  00001504          	.global _dstrcpy
  585  00001504          	_dstrcpy:
  586                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  587  00001504  afbefffc	sw	-4(r29),r30; push fp
  588  00001508  001df020	add	r30,r0,r29; fp = sp
  589  0000150c  afbffff8	sw	-8(r29),r31; push ret addr
  590  00001510  2fbd0018	subui	r29,r29,#24; alloc local storage
  591  00001514  afa20000	sw	0(r29),r2
  592  00001518  afa30004	sw	4(r29),r3
  593  0000151c  8fc10000	lw	r1,(r30)
  594  00001520  afc1fff4	sw	-12(r30),r1
  595  00001524          	L10_LF2:
  596  00001524  8fc10000	lw	r1,(r30)
  597  00001528  20220001	addi	r2,r1,#1
  598  0000152c  afc20000	sw	(r30),r2
  599  00001530  8fc20004	lw	r2,4(r30)
  600  00001534  20430001	addi	r3,r2,#1
  601  00001538  afc30004	sw	4(r30),r3
  602  0000153c  80420000	lb	r2,(r2)
  603  00001540  a0220000	sb	(r1),r2
  604  00001544  a3c2fff3	sb	-13(r30),r2
  605  00001548          	L12_LF2:
  606  00001548  93c1fff3	lbu	r1,-13(r30)
  607  0000154c  64220000	snei	r2,r1,#0
  608  00001550  1440000c	bnez	r2,L13_LF2
  609  00001554  54000000	nop; delay slot nop
  610  00001558  0800000c	j	L11_LF2
  611  0000155c  54000000	nop; delay slot nop
  612  00001560          	L13_LF2:
  613  00001560  0bffffc0	j	L10_LF2
  614  00001564  54000000	nop; delay slot nop
  615  00001568          	L11_LF2:
  616  00001568  8fc1fff4	lw	r1,-12(r30)
  617  0000156c  08000004	j	L9_LF2
  618  00001570  54000000	nop; delay slot nop
  619  00001574          	L9_LF2:
  620  00001574  8fa20000	lw	r2,0(r29)
  621  00001578  8fa30004	lw	r3,4(r29)
  622  0000157c  8fdffff8	lw	r31,-8(r30)
  623  00001580  001ee820	add	r29,r0,r30
  624  00001584  8fdefffc	lw	r30,-4(r30)
  625  00001588  4be00000	jr	r31
  626  0000158c  54000000	nop
  627  00001590          	.endproc _dstrcpy
  628  00001590          	.align 2
  629  00001590          	.proc _dstrncpy
  630  00001590          	.global _dstrncpy
  631  00001590          	_dstrncpy:
  632                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  633  00001590  afbefffc	sw	-4(r29),r30; push fp
  634  00001594  001df020	add	r30,r0,r29; fp = sp
  635  00001598  afbffff8	sw	-8(r29),r31; push ret addr
  636  0000159c  2fbd0018	subui	r29,r29,#24; alloc local storage
  637  000015a0  afa20000	sw	0(r29),r2
  638  000015a4  afa30004	sw	4(r29),r3
  639  000015a8  8fc10000	lw	r1,(r30)
  640  000015ac  afc1fff4	sw	-12(r30),r1
  641  000015b0          	L15_LF2:
  642  000015b0  8fc10008	lw	r1,8(r30)
  643  000015b4  2022ffff	addi	r2,r1,#-1
  644  000015b8  afc20008	sw	8(r30),r2
  645  000015bc  70210000	slei	r1,r1,#0
  646  000015c0  1020000c	beqz	r1,L18_LF2
  647  000015c4  54000000	nop; delay slot nop
  648  000015c8  08000048	j	L16_LF2
  649  000015cc  54000000	nop; delay slot nop
  650  000015d0          	L18_LF2:
  651  000015d0  8fc10000	lw	r1,(r30)
  652  000015d4  20220001	addi	r2,r1,#1
  653  000015d8  afc20000	sw	(r30),r2
  654  000015dc  8fc20004	lw	r2,4(r30)
  655  000015e0  20430001	addi	r3,r2,#1
  656  000015e4  afc30004	sw	4(r30),r3
  657  000015e8  80420000	lb	r2,(r2)
  658  000015ec  a0220000	sb	(r1),r2
  659  000015f0  a3c2fff3	sb	-13(r30),r2
  660  000015f4          	L17_LF2:
  661  000015f4  93c1fff3	lbu	r1,-13(r30)
  662  000015f8  64220000	snei	r2,r1,#0
  663  000015fc  1440000c	bnez	r2,L19_LF2
  664  00001600  54000000	nop; delay slot nop
  665  00001604  0800000c	j	L16_LF2
  666  00001608  54000000	nop; delay slot nop
  667  0000160c          	L19_LF2:
  668  0000160c  0bffffa0	j	L15_LF2
  669  00001610  54000000	nop; delay slot nop
  670  00001614          	L16_LF2:
  671  00001614  8fc1fff4	lw	r1,-12(r30)
  672  00001618  08000004	j	L14_LF2
  673  0000161c  54000000	nop; delay slot nop
  674  00001620          	L14_LF2:
  675  00001620  8fa20000	lw	r2,0(r29)
  676  00001624  8fa30004	lw	r3,4(r29)
  677  00001628  8fdffff8	lw	r31,-8(r30)
  678  0000162c  001ee820	add	r29,r0,r30
  679  00001630  8fdefffc	lw	r30,-4(r30)
  680  00001634  4be00000	jr	r31
  681  00001638  54000000	nop
  682  0000163c          	.endproc _dstrncpy
  683  0000163c          	.align 2
  684  0000163c          	.proc _dstrcat
  685  0000163c          	.global _dstrcat
  686  0000163c          	_dstrcat:
  687                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  688  0000163c  afbefffc	sw	-4(r29),r30; push fp
  689  00001640  001df020	add	r30,r0,r29; fp = sp
  690  00001644  afbffff8	sw	-8(r29),r31; push ret addr
  691  00001648  2fbd0018	subui	r29,r29,#24; alloc local storage
  692  0000164c  afa20000	sw	0(r29),r2
  693  00001650  8fc10000	lw	r1,(r30)
  694  00001654  afc1fff4	sw	-12(r30),r1
  695  00001658          	L21_LF2:
  696  00001658  8fc10000	lw	r1,(r30)
  697  0000165c  90220000	lbu	r2,(r1)
  698  00001660  64410000	snei	r1,r2,#0
  699  00001664  1420000c	bnez	r1,L23_LF2
  700  00001668  54000000	nop; delay slot nop
  701  0000166c  0800001c	j	L22_LF2
  702  00001670  54000000	nop; delay slot nop
  703  00001674          	L23_LF2:
  704  00001674  8fc20000	lw	r2,(r30)
  705  00001678  20410001	addi	r1,r2,#1
  706  0000167c  00011020	add	r2,r0,r1
  707  00001680  afc20000	sw	(r30),r2
  708  00001684  0bffffd0	j	L21_LF2
  709  00001688  54000000	nop; delay slot nop
  710  0000168c          	L22_LF2:
  711  0000168c  23bdfff8	addi	r29,r29,#-8
  712  00001690  001d0820	add	r1,r0,r29
  713  00001694  8fc20000	lw	r2,(r30)
  714  00001698  ac220000	sw	(r1),r2
  715  0000169c  8fc20004	lw	r2,4(r30)
  716  000016a0  ac220004	sw	4(r1),r2
  717  000016a4  0ffffe5c	jal	_dstrcpy
  718  000016a8  54000000	nop; delay slot nop
  719  000016ac  23bd0008	addi	r29,r29,#8
  720  000016b0  8fc1fff4	lw	r1,-12(r30)
  721  000016b4  08000004	j	L20_LF2
  722  000016b8  54000000	nop; delay slot nop
  723  000016bc          	L20_LF2:
  724  000016bc  8fa20000	lw	r2,0(r29)
  725  000016c0  8fdffff8	lw	r31,-8(r30)
  726  000016c4  001ee820	add	r29,r0,r30
  727  000016c8  8fdefffc	lw	r30,-4(r30)
  728  000016cc  4be00000	jr	r31
  729  000016d0  54000000	nop
  730  000016d4          	.endproc _dstrcat
  731  000016d4          	.align 2
  732  000016d4          	.proc _dstrncmp
  733  000016d4          	.global _dstrncmp
  734  000016d4          	_dstrncmp:
  735                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  736  000016d4  afbefffc	sw	-4(r29),r30; push fp
  737  000016d8  001df020	add	r30,r0,r29; fp = sp
  738  000016dc  afbffff8	sw	-8(r29),r31; push ret addr
  739  000016e0  2fbd0018	subui	r29,r29,#24; alloc local storage
  740  000016e4  afa20000	sw	0(r29),r2
  741  000016e8  afa30004	sw	4(r29),r3
  742  000016ec  54000000	nop
  743  000016f0  20010000	addi	r1,r0,#0
  744  000016f4  afc1fff4	sw	-12(r30),r1
  745  000016f8          	L25_LF2:
  746  000016f8  8fc1fff4	lw	r1,-12(r30)
  747  000016fc  8fc20008	lw	r2,8(r30)
  748  00001700  0022082a	slt	r1,r1,r2
  749  00001704  1420000c	bnez	r1,L28_LF2
  750  00001708  54000000	nop; delay slot nop
  751  0000170c  08000088	j	L26_LF2
  752  00001710  54000000	nop; delay slot nop
  753  00001714          	L28_LF2:
  754  00001714  8fc10004	lw	r1,4(r30)
  755  00001718  90220000	lbu	r2,(r1)
  756  0000171c  64410000	snei	r1,r2,#0
  757  00001720  14200018	bnez	r1,L29_LF2
  758  00001724  54000000	nop; delay slot nop
  759  00001728  20010000	addi	r1,r0,#0
  760  0000172c  080000d8	j	L24_LF2
  761  00001730  54000000	nop; delay slot nop
  762  00001734  08000028	j	L30_LF2
  763  00001738  54000000	nop; delay slot nop
  764  0000173c          	L29_LF2:
  765  0000173c  8fc10000	lw	r1,(r30)
  766  00001740  8fc20004	lw	r2,4(r30)
  767  00001744  90210000	lbu	r1,(r1)
  768  00001748  90420000	lbu	r2,(r2)
  769  0000174c  00220829	sne	r1,r1,r2
  770  00001750  1020000c	beqz	r1,L30_LF2
  771  00001754  54000000	nop; delay slot nop
  772  00001758  0800003c	j	L26_LF2
  773  0000175c  54000000	nop; delay slot nop
  774  00001760          	L31_LF2:
  775  00001760          	L30_LF2:
  776  00001760  8fc20000	lw	r2,(r30)
  777  00001764  20410001	addi	r1,r2,#1
  778  00001768  00011020	add	r2,r0,r1
  779  0000176c  afc20000	sw	(r30),r2
  780  00001770  8fc20004	lw	r2,4(r30)
  781  00001774  20410001	addi	r1,r2,#1
  782  00001778  00011020	add	r2,r0,r1
  783  0000177c  afc20004	sw	4(r30),r2
  784  00001780          	L27_LF2:
  785  00001780  8fc2fff4	lw	r2,-12(r30)
  786  00001784  20410001	addi	r1,r2,#1
  787  00001788  00011020	add	r2,r0,r1
  788  0000178c  afc2fff4	sw	-12(r30),r2
  789  00001790  0bffff64	j	L25_LF2
  790  00001794  54000000	nop; delay slot nop
  791  00001798          	L26_LF2:
  792  00001798  8fc1fff4	lw	r1,-12(r30)
  793  0000179c  8fc20008	lw	r2,8(r30)
  794  000017a0  00220828	seq	r1,r1,r2
  795  000017a4  10200018	beqz	r1,L32_LF2
  796  000017a8  54000000	nop; delay slot nop
  797  000017ac  20010000	addi	r1,r0,#0
  798  000017b0  08000054	j	L24_LF2
  799  000017b4  54000000	nop; delay slot nop
  800  000017b8  0800004c	j	L33_LF2
  801  000017bc  54000000	nop; delay slot nop
  802  000017c0          	L32_LF2:
  803  000017c0  8fc20000	lw	r2,(r30)
  804  000017c4  90410000	lbu	r1,(r2)
  805  000017c8  8fc20004	lw	r2,4(r30)
  806  000017cc  90430000	lbu	r3,(r2)
  807  000017d0  00230822	sub	r1,r1,r3
  808  000017d4  74220000	sgei	r2,r1,#0
  809  000017d8  10400020	beqz	r2,L34_LF2
  810  000017dc  54000000	nop; delay slot nop
  811  000017e0  8fc10000	lw	r1,(r30)
  812  000017e4  8fc20004	lw	r2,4(r30)
  813  000017e8  90210000	lbu	r1,(r1)
  814  000017ec  90420000	lbu	r2,(r2)
  815  000017f0  00220829	sne	r1,r1,r2
  816  000017f4  08000008	j	L35_LF2
  817  000017f8  54000000	nop; delay slot nop
  818  000017fc          	L34_LF2:
  819  000017fc  2001ffff	addi	r1,r0,#-1
  820  00001800          	L35_LF2:
  821  00001800  08000004	j	L24_LF2
  822  00001804  54000000	nop; delay slot nop
  823  00001808          	L33_LF2:
  824  00001808          	L24_LF2:
  825  00001808  8fa20000	lw	r2,0(r29)
  826  0000180c  8fa30004	lw	r3,4(r29)
  827  00001810  8fdffff8	lw	r31,-8(r30)
  828  00001814  001ee820	add	r29,r0,r30
  829  00001818  8fdefffc	lw	r30,-4(r30)
  830  0000181c  4be00000	jr	r31
  831  00001820  54000000	nop
  832  00001824          	.endproc _dstrncmp
  833  00001824          	.align 2
  834  00001824          	.proc _dstrlen
  835  00001824          	.global _dstrlen
  836  00001824          	_dstrlen:
  837                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  838  00001824  afbefffc	sw	-4(r29),r30; push fp
  839  00001828  001df020	add	r30,r0,r29; fp = sp
  840  0000182c  afbffff8	sw	-8(r29),r31; push ret addr
  841  00001830  2fbd0018	subui	r29,r29,#24; alloc local storage
  842  00001834  afa20000	sw	0(r29),r2
  843  00001838  20010000	addi	r1,r0,#0
  844  0000183c  afc1fff4	sw	-12(r30),r1
  845  00001840          	L37_LF2:
  846  00001840  8fc10000	lw	r1,(r30)
  847  00001844  20220001	addi	r2,r1,#1
  848  00001848  afc20000	sw	(r30),r2
  849  0000184c  90210000	lbu	r1,(r1)
  850  00001850  64220000	snei	r2,r1,#0
  851  00001854  1440000c	bnez	r2,L39_LF2
  852  00001858  54000000	nop; delay slot nop
  853  0000185c  0800001c	j	L38_LF2
  854  00001860  54000000	nop; delay slot nop
  855  00001864          	L39_LF2:
  856  00001864  8fc2fff4	lw	r2,-12(r30)
  857  00001868  20410001	addi	r1,r2,#1
  858  0000186c  00011020	add	r2,r0,r1
  859  00001870  afc2fff4	sw	-12(r30),r2
  860  00001874  0bffffc8	j	L37_LF2
  861  00001878  54000000	nop; delay slot nop
  862  0000187c          	L38_LF2:
  863  0000187c  8fc1fff4	lw	r1,-12(r30)
  864  00001880  08000004	j	L36_LF2
  865  00001884  54000000	nop; delay slot nop
  866  00001888          	L36_LF2:
  867  00001888  8fa20000	lw	r2,0(r29)
  868  0000188c  8fdffff8	lw	r31,-8(r30)
  869  00001890  001ee820	add	r29,r0,r30
  870  00001894  8fdefffc	lw	r30,-4(r30)
  871  00001898  4be00000	jr	r31
  872  0000189c  54000000	nop
  873  000018a0          	.endproc _dstrlen
  874  000018a0          	.align 2
  875  000018a0          	.proc _dstrstr
  876  000018a0          	.global _dstrstr
  877  000018a0          	_dstrstr:
  878                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  879  000018a0  afbefffc	sw	-4(r29),r30; push fp
  880  000018a4  001df020	add	r30,r0,r29; fp = sp
  881  000018a8  afbffff8	sw	-8(r29),r31; push ret addr
  882  000018ac  2fbd0018	subui	r29,r29,#24; alloc local storage
  883  000018b0  afa20000	sw	0(r29),r2
  884  000018b4  23bdfff8	addi	r29,r29,#-8
  885  000018b8  001d0820	add	r1,r0,r29
  886  000018bc  8fc20004	lw	r2,4(r30)
  887  000018c0  ac220000	sw	(r1),r2
  888  000018c4  0fffff5c	jal	_dstrlen
  889  000018c8  54000000	nop; delay slot nop
  890  000018cc  23bd0008	addi	r29,r29,#8
  891  000018d0  afc1fff4	sw	-12(r30),r1
  892  000018d4          	L41_LF2:
  893  000018d4  8fc10000	lw	r1,(r30)
  894  000018d8  90220000	lbu	r2,(r1)
  895  000018dc  64410000	snei	r1,r2,#0
  896  000018e0  1420000c	bnez	r1,L43_LF2
  897  000018e4  54000000	nop; delay slot nop
  898  000018e8  08000060	j	L42_LF2
  899  000018ec  54000000	nop; delay slot nop
  900  000018f0          	L43_LF2:
  901  000018f0  23bdfff0	addi	r29,r29,#-16
  902  000018f4  001d0820	add	r1,r0,r29
  903  000018f8  8fc20000	lw	r2,(r30)
  904  000018fc  ac220000	sw	(r1),r2
  905  00001900  8fc20004	lw	r2,4(r30)
  906  00001904  ac220004	sw	4(r1),r2
  907  00001908  8fc2fff4	lw	r2,-12(r30)
  908  0000190c  ac220008	sw	8(r1),r2
  909  00001910  0ffffdc0	jal	_dstrncmp
  910  00001914  54000000	nop; delay slot nop
  911  00001918  23bd0010	addi	r29,r29,#16
  912  0000191c  64220000	snei	r2,r1,#0
  913  00001920  14400010	bnez	r2,L44_LF2
  914  00001924  54000000	nop; delay slot nop
  915  00001928  8fc10000	lw	r1,(r30)
  916  0000192c  08000028	j	L40_LF2
  917  00001930  54000000	nop; delay slot nop
  918  00001934          	L44_LF2:
  919  00001934  8fc20000	lw	r2,(r30)
  920  00001938  20410001	addi	r1,r2,#1
  921  0000193c  00011020	add	r2,r0,r1
  922  00001940  afc20000	sw	(r30),r2
  923  00001944  0bffff8c	j	L41_LF2
  924  00001948  54000000	nop; delay slot nop
  925  0000194c          	L42_LF2:
  926  0000194c  20010000	addi	r1,r0,#0
  927  00001950  08000004	j	L40_LF2
  928  00001954  54000000	nop; delay slot nop
  929  00001958          	L40_LF2:
  930  00001958  8fa20000	lw	r2,0(r29)
  931  0000195c  8fdffff8	lw	r31,-8(r30)
  932  00001960  001ee820	add	r29,r0,r30
  933  00001964  8fdefffc	lw	r30,-4(r30)
  934  00001968  4be00000	jr	r31
  935  0000196c  54000000	nop
  936  00001970          	.endproc _dstrstr
  937  00001970          	.align 2
  938  00001970          	.proc _dmindex
  939  00001970          	.global _dmindex
  940  00001970          	_dmindex:
  941                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  942  00001970  afbefffc	sw	-4(r29),r30; push fp
  943  00001974  001df020	add	r30,r0,r29; fp = sp
  944  00001978  afbffff8	sw	-8(r29),r31; push ret addr
  945  0000197c  2fbd0018	subui	r29,r29,#24; alloc local storage
  946  00001980  afa20000	sw	0(r29),r2
  947  00001984  54000000	nop
  948  00001988          	L46_LF2:
  949  00001988  8fc10000	lw	r1,(r30)
  950  0000198c  90220000	lbu	r2,(r1)
  951  00001990  64410000	snei	r1,r2,#0
  952  00001994  1420000c	bnez	r1,L48_LF2
  953  00001998  54000000	nop; delay slot nop
  954  0000199c  08000070	j	L47_LF2
  955  000019a0  54000000	nop; delay slot nop
  956  000019a4          	L48_LF2:
  957  000019a4  8fc10004	lw	r1,4(r30)
  958  000019a8  afc1fff4	sw	-12(r30),r1
  959  000019ac          	L49_LF2:
  960  000019ac  8fc1fff4	lw	r1,-12(r30)
  961  000019b0  90220000	lbu	r2,(r1)
  962  000019b4  64410000	snei	r1,r2,#0
  963  000019b8  1420000c	bnez	r1,L52_LF2
  964  000019bc  54000000	nop; delay slot nop
  965  000019c0  08000044	j	L50_LF2
  966  000019c4  54000000	nop; delay slot nop
  967  000019c8          	L52_LF2:
  968  000019c8  8fc10000	lw	r1,(r30)
  969  000019cc  8fc2fff4	lw	r2,-12(r30)
  970  000019d0  90210000	lbu	r1,(r1)
  971  000019d4  90420000	lbu	r2,(r2)
  972  000019d8  00220828	seq	r1,r1,r2
  973  000019dc  10200010	beqz	r1,L51_LF2
  974  000019e0  54000000	nop; delay slot nop
  975  000019e4  8fc10000	lw	r1,(r30)
  976  000019e8  08000030	j	L45_LF2
  977  000019ec  54000000	nop; delay slot nop
  978  000019f0          	L53_LF2:
  979  000019f0          	L51_LF2:
  980  000019f0  8fc2fff4	lw	r2,-12(r30)
  981  000019f4  20410001	addi	r1,r2,#1
  982  000019f8  00011020	add	r2,r0,r1
  983  000019fc  afc2fff4	sw	-12(r30),r2
  984  00001a00  0bffffa8	j	L49_LF2
  985  00001a04  54000000	nop; delay slot nop
  986  00001a08          	L50_LF2:
  987  00001a08  0bffff7c	j	L46_LF2
  988  00001a0c  54000000	nop; delay slot nop
  989  00001a10          	L47_LF2:
  990  00001a10  20010000	addi	r1,r0,#0
  991  00001a14  08000004	j	L45_LF2
  992  00001a18  54000000	nop; delay slot nop
  993  00001a1c          	L45_LF2:
  994  00001a1c  8fa20000	lw	r2,0(r29)
  995  00001a20  8fdffff8	lw	r31,-8(r30)
  996  00001a24  001ee820	add	r29,r0,r30
  997  00001a28  8fdefffc	lw	r30,-4(r30)
  998  00001a2c  4be00000	jr	r31
  999  00001a30  54000000	nop
 1000  00001a34          	.endproc _dmindex
 1001  00001a34          	.align 2
 1002  00001a34          	.proc _dindex
 1003  00001a34          	.global _dindex
 1004  00001a34          	_dindex:
 1005                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1006  00001a34  afbefffc	sw	-4(r29),r30; push fp
 1007  00001a38  001df020	add	r30,r0,r29; fp = sp
 1008  00001a3c  afbffff8	sw	-8(r29),r31; push ret addr
 1009  00001a40  2fbd0010	subui	r29,r29,#16; alloc local storage
 1010  00001a44  afa20000	sw	0(r29),r2
 1011  00001a48  54000000	nop
 1012  00001a4c          	L55_LF2:
 1013  00001a4c  8fc10000	lw	r1,(r30)
 1014  00001a50  90220000	lbu	r2,(r1)
 1015  00001a54  64410000	snei	r1,r2,#0
 1016  00001a58  1420000c	bnez	r1,L57_LF2
 1017  00001a5c  54000000	nop; delay slot nop
 1018  00001a60  08000040	j	L56_LF2
 1019  00001a64  54000000	nop; delay slot nop
 1020  00001a68          	L57_LF2:
 1021  00001a68  8fc10000	lw	r1,(r30)
 1022  00001a6c  90220000	lbu	r2,(r1)
 1023  00001a70  8fc10004	lw	r1,4(r30)
 1024  00001a74  00411028	seq	r2,r2,r1
 1025  00001a78  10400010	beqz	r2,L58_LF2
 1026  00001a7c  54000000	nop; delay slot nop
 1027  00001a80  8fc10000	lw	r1,(r30)
 1028  00001a84  08000028	j	L54_LF2
 1029  00001a88  54000000	nop; delay slot nop
 1030  00001a8c          	L58_LF2:
 1031  00001a8c  8fc20000	lw	r2,(r30)
 1032  00001a90  20410001	addi	r1,r2,#1
 1033  00001a94  00011020	add	r2,r0,r1
 1034  00001a98  afc20000	sw	(r30),r2
 1035  00001a9c  0bffffac	j	L55_LF2
 1036  00001aa0  54000000	nop; delay slot nop
 1037  00001aa4          	L56_LF2:
 1038  00001aa4  20010000	addi	r1,r0,#0
 1039  00001aa8  08000004	j	L54_LF2
 1040  00001aac  54000000	nop; delay slot nop
 1041  00001ab0          	L54_LF2:
 1042  00001ab0  8fa20000	lw	r2,0(r29)
 1043  00001ab4  8fdffff8	lw	r31,-8(r30)
 1044  00001ab8  001ee820	add	r29,r0,r30
 1045  00001abc  8fdefffc	lw	r30,-4(r30)
 1046  00001ac0  4be00000	jr	r31
 1047  00001ac4  54000000	nop
 1048  00001ac8          	.endproc _dindex
 1049  00001ac8          	.align 2
 1050  00001ac8          	.proc _ditoa
 1051  00001ac8          	.global _ditoa
 1052  00001ac8          	_ditoa:
 1053                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1054  00001ac8  afbefffc	sw	-4(r29),r30; push fp
 1055  00001acc  001df020	add	r30,r0,r29; fp = sp
 1056  00001ad0  afbffff8	sw	-8(r29),r31; push ret addr
 1057  00001ad4  2fbd0018	subui	r29,r29,#24; alloc local storage
 1058  00001ad8  afa20000	sw	0(r29),r2
 1059  00001adc  afa30004	sw	4(r29),r3
 1060  00001ae0  8fc10000	lw	r1,(r30)
 1061  00001ae4  68220000	slti	r2,r1,#0
 1062  00001ae8  1040002c	beqz	r2,L60_LF2
 1063  00001aec  54000000	nop; delay slot nop
 1064  00001af0  8fc10004	lw	r1,4(r30)
 1065  00001af4  20220001	addi	r2,r1,#1
 1066  00001af8  afc20004	sw	4(r30),r2
 1067  00001afc  2002002d	addi	r2,r0,(#0x2d)&0xff
 1068  00001b00  a0220000	sb	(r1),r2
 1069  00001b04  8fc10000	lw	r1,(r30)
 1070  00001b08  00011022	sub	r2,r0,r1
 1071  00001b0c  afc20000	sw	(r30),r2
 1072  00001b10  08000118	j	L61_LF2
 1073  00001b14  54000000	nop; delay slot nop
 1074  00001b18          	L60_LF2:
 1075  00001b18  8fc10000	lw	r1,(r30)
 1076  00001b1c  64220000	snei	r2,r1,#0
 1077  00001b20  14400020	bnez	r2,L62_LF2
 1078  00001b24  54000000	nop; delay slot nop
 1079  00001b28  8fc10004	lw	r1,4(r30)
 1080  00001b2c  20220001	addi	r2,r1,#1
 1081  00001b30  afc20004	sw	4(r30),r2
 1082  00001b34  20020030	addi	r2,r0,(#0x30)&0xff
 1083  00001b38  a0220000	sb	(r1),r2
 1084  00001b3c  080000ec	j	L61_LF2
 1085  00001b40  54000000	nop; delay slot nop
 1086  00001b44          	L62_LF2:
 1087  00001b44  20010001	addi	r1,r0,#1
 1088  00001b48  afc1fff4	sw	-12(r30),r1
 1089  00001b4c          	L64_LF2:
 1090  00001b4c  8fc1fff4	lw	r1,-12(r30)
 1091  00001b50  8fc20000	lw	r2,(r30)
 1092  00001b54  0022082c	sle	r1,r1,r2
 1093  00001b58  1420000c	bnez	r1,L66_LF2
 1094  00001b5c  54000000	nop; delay slot nop
 1095  00001b60  08000024	j	L65_LF2
 1096  00001b64  54000000	nop; delay slot nop
 1097  00001b68          	L67_LF2:
 1098  00001b68          	L66_LF2:
 1099  00001b68  8fc1fff4	lw	r1,-12(r30)
 1100  00001b6c  00011820	add	r3,r0,r1
 1101  00001b70  50620002	slli	r2,r3,#0x2
 1102  00001b74  00411020	add	r2,r2,r1
 1103  00001b78  50410001	slli	r1,r2,#0x1
 1104  00001b7c  afc1fff4	sw	-12(r30),r1
 1105  00001b80  0bffffc8	j	L64_LF2
 1106  00001b84  54000000	nop; delay slot nop
 1107  00001b88          	L65_LF2:
 1108  00001b88  54000000	nop
 1109  00001b8c          	L68_LF2:
 1110  00001b8c  8fc1fff4	lw	r1,-12(r30)
 1111  00001b90  2002000a	addi	r2,r0,#10
 1112  00001b94  00200035	movi2fp	f0,r1
 1113  00001b98  00400835	movi2fp	f1,r2
 1114  00001b9c  0401000f	div	f0,f0,f1
 1115  00001ba0  00000834	movfp2i	r1,f0
 1116  00001ba4  afc1fff4	sw	-12(r30),r1
 1117  00001ba8  8fc10004	lw	r1,4(r30)
 1118  00001bac  20220001	addi	r2,r1,#1
 1119  00001bb0  afc20004	sw	4(r30),r2
 1120  00001bb4  8fc20000	lw	r2,(r30)
 1121  00001bb8  8fc3fff4	lw	r3,-12(r30)
 1122  00001bbc  00400035	movi2fp	f0,r2
 1123  00001bc0  00600835	movi2fp	f1,r3
 1124  00001bc4  0401000f	div	f0,f0,f1
 1125  00001bc8  00001034	movfp2i	r2,f0
 1126  00001bcc  00021820	add	r3,r0,r2
 1127  00001bd0  20620030	addi	r2,r3,#48
 1128  00001bd4  a0220000	sb	(r1),r2
 1129  00001bd8  8fc10000	lw	r1,(r30)
 1130  00001bdc  8fc3fff4	lw	r3,-12(r30)
 1131  00001be0  00200035	movi2fp	f0,r1
 1132  00001be4  00600835	movi2fp	f1,r3
 1133  00001be8  0401000f	div	f0,f0,f1
 1134  00001bec  00001034	movfp2i	r2,f0
 1135  00001bf0  8fc3fff4	lw	r3,-12(r30)
 1136  00001bf4  00400035	movi2fp	f0,r2
 1137  00001bf8  00600835	movi2fp	f1,r3
 1138  00001bfc  0401000e	mult	f0,f0,f1
 1139  00001c00  00001034	movfp2i	r2,f0
 1140  00001c04  00220822	sub	r1,r1,r2
 1141  00001c08  afc10000	sw	(r30),r1
 1142  00001c0c          	L70_LF2:
 1143  00001c0c  8fc1fff4	lw	r1,-12(r30)
 1144  00001c10  6c220001	sgti	r2,r1,#1
 1145  00001c14  1440000c	bnez	r2,L71_LF2
 1146  00001c18  54000000	nop; delay slot nop
 1147  00001c1c  0800000c	j	L61_LF2
 1148  00001c20  54000000	nop; delay slot nop
 1149  00001c24          	L71_LF2:
 1150  00001c24  0bffff64	j	L68_LF2
 1151  00001c28  54000000	nop; delay slot nop
 1152  00001c2c          	L69_LF2:
 1153  00001c2c          	L63_LF2:
 1154  00001c2c          	L61_LF2:
 1155  00001c2c  8fc10004	lw	r1,4(r30)
 1156  00001c30  20020000	addi	r2,r0,(#0x0)&0xff
 1157  00001c34  a0220000	sb	(r1),r2
 1158  00001c38          	L59_LF2:
 1159  00001c38  8fa20000	lw	r2,0(r29)
 1160  00001c3c  8fa30004	lw	r3,4(r29)
 1161  00001c40  8fdffff8	lw	r31,-8(r30)
 1162  00001c44  001ee820	add	r29,r0,r30
 1163  00001c48  8fdefffc	lw	r30,-4(r30)
 1164  00001c4c  4be00000	jr	r31
 1165  00001c50  54000000	nop
 1166  00001c54          	.endproc _ditoa
 1167  00001c54          	.align 2
 1168  00001c54          	.proc _dstrtol
 1169  00001c54          	.global _dstrtol
 1170  00001c54          	_dstrtol:
 1171                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1172  00001c54  afbefffc	sw	-4(r29),r30; push fp
 1173  00001c58  001df020	add	r30,r0,r29; fp = sp
 1174  00001c5c  afbffff8	sw	-8(r29),r31; push ret addr
 1175  00001c60  2fbd0020	subui	r29,r29,#32; alloc local storage
 1176  00001c64  afa20000	sw	0(r29),r2
 1177  00001c68  20010000	addi	r1,r0,#0
 1178  00001c6c  afc1fff4	sw	-12(r30),r1
 1179  00001c70          	L73_LF2:
 1180  00001c70  8fc10000	lw	r1,(r30)
 1181  00001c74  90220000	lbu	r2,(r1)
 1182  00001c78  60410020	seqi	r1,r2,#32
 1183  00001c7c  14200034	bnez	r1,L75_LF2
 1184  00001c80  54000000	nop; delay slot nop
 1185  00001c84  8fc10000	lw	r1,(r30)
 1186  00001c88  90220000	lbu	r2,(r1)
 1187  00001c8c  60410009	seqi	r1,r2,#9
 1188  00001c90  14200020	bnez	r1,L75_LF2
 1189  00001c94  54000000	nop; delay slot nop
 1190  00001c98  8fc10000	lw	r1,(r30)
 1191  00001c9c  90220000	lbu	r2,(r1)
 1192  00001ca0  6041000a	seqi	r1,r2,#10
 1193  00001ca4  1420000c	bnez	r1,L75_LF2
 1194  00001ca8  54000000	nop; delay slot nop
 1195  00001cac  0800001c	j	L74_LF2
 1196  00001cb0  54000000	nop; delay slot nop
 1197  00001cb4          	L75_LF2:
 1198  00001cb4  8fc20000	lw	r2,(r30)
 1199  00001cb8  20410001	addi	r1,r2,#1
 1200  00001cbc  00011020	add	r2,r0,r1
 1201  00001cc0  afc20000	sw	(r30),r2
 1202  00001cc4  0bffffa8	j	L73_LF2
 1203  00001cc8  54000000	nop; delay slot nop
 1204  00001ccc          	L74_LF2:
 1205  00001ccc  8fc10004	lw	r1,4(r30)
 1206  00001cd0  64220000	snei	r2,r1,#0
 1207  00001cd4  10400010	beqz	r2,L76_LF2
 1208  00001cd8  54000000	nop; delay slot nop
 1209  00001cdc  8fc10004	lw	r1,4(r30)
 1210  00001ce0  8fc20000	lw	r2,(r30)
 1211  00001ce4  ac220000	sw	(r1),r2
 1212  00001ce8          	L76_LF2:
 1213  00001ce8  8fc10000	lw	r1,(r30)
 1214  00001cec  90220000	lbu	r2,(r1)
 1215  00001cf0  64410000	snei	r1,r2,#0
 1216  00001cf4  14200010	bnez	r1,L77_LF2
 1217  00001cf8  54000000	nop; delay slot nop
 1218  00001cfc  8fc1fff4	lw	r1,-12(r30)
 1219  00001d00  08000294	j	L72_LF2
 1220  00001d04  54000000	nop; delay slot nop
 1221  00001d08          	L77_LF2:
 1222  00001d08  8fc10000	lw	r1,(r30)
 1223  00001d0c  90220000	lbu	r2,(r1)
 1224  00001d10  6041002d	seqi	r1,r2,#45
 1225  00001d14  10200024	beqz	r1,L78_LF2
 1226  00001d18  54000000	nop; delay slot nop
 1227  00001d1c  2001ffff	addi	r1,r0,#-1
 1228  00001d20  afc1ffec	sw	-20(r30),r1
 1229  00001d24  8fc20000	lw	r2,(r30)
 1230  00001d28  20410001	addi	r1,r2,#1
 1231  00001d2c  00011020	add	r2,r0,r1
 1232  00001d30  afc20000	sw	(r30),r2
 1233  00001d34  0800000c	j	L79_LF2
 1234  00001d38  54000000	nop; delay slot nop
 1235  00001d3c          	L78_LF2:
 1236  00001d3c  20010001	addi	r1,r0,#1
 1237  00001d40  afc1ffec	sw	-20(r30),r1
 1238  00001d44          	L79_LF2:
 1239  00001d44  8fc10008	lw	r1,8(r30)
 1240  00001d48  64220000	snei	r2,r1,#0
 1241  00001d4c  14400090	bnez	r2,L80_LF2
 1242  00001d50  54000000	nop; delay slot nop
 1243  00001d54  8fc10000	lw	r1,(r30)
 1244  00001d58  90220000	lbu	r2,(r1)
 1245  00001d5c  60410030	seqi	r1,r2,#48
 1246  00001d60  10200074	beqz	r1,L81_LF2
 1247  00001d64  54000000	nop; delay slot nop
 1248  00001d68  8fc20000	lw	r2,(r30)
 1249  00001d6c  20410001	addi	r1,r2,#1
 1250  00001d70  00011020	add	r2,r0,r1
 1251  00001d74  afc20000	sw	(r30),r2
 1252  00001d78  8fc10000	lw	r1,(r30)
 1253  00001d7c  90220000	lbu	r2,(r1)
 1254  00001d80  60410078	seqi	r1,r2,#120
 1255  00001d84  14200020	bnez	r1,L83_LF2
 1256  00001d88  54000000	nop; delay slot nop
 1257  00001d8c  8fc10000	lw	r1,(r30)
 1258  00001d90  90220000	lbu	r2,(r1)
 1259  00001d94  60410058	seqi	r1,r2,#88
 1260  00001d98  1420000c	bnez	r1,L83_LF2
 1261  00001d9c  54000000	nop; delay slot nop
 1262  00001da0  08000024	j	L82_LF2
 1263  00001da4  54000000	nop; delay slot nop
 1264  00001da8          	L83_LF2:
 1265  00001da8  20010010	addi	r1,r0,#16
 1266  00001dac  afc10008	sw	8(r30),r1
 1267  00001db0  8fc20000	lw	r2,(r30)
 1268  00001db4  20410001	addi	r1,r2,#1
 1269  00001db8  00011020	add	r2,r0,r1
 1270  00001dbc  afc20000	sw	(r30),r2
 1271  00001dc0  0800000c	j	L84_LF2
 1272  00001dc4  54000000	nop; delay slot nop
 1273  00001dc8          	L82_LF2:
 1274  00001dc8  20010008	addi	r1,r0,#8
 1275  00001dcc  afc10008	sw	8(r30),r1
 1276  00001dd0          	L84_LF2:
 1277  00001dd0  0800000c	j	L80_LF2
 1278  00001dd4  54000000	nop; delay slot nop
 1279  00001dd8          	L81_LF2:
 1280  00001dd8  2001000a	addi	r1,r0,#10
 1281  00001ddc  afc10008	sw	8(r30),r1
 1282  00001de0          	L85_LF2:
 1283  00001de0          	L80_LF2:
 1284  00001de0  8fc10008	lw	r1,8(r30)
 1285  00001de4  70220000	slei	r2,r1,#0
 1286  00001de8  1440001c	bnez	r2,L87_LF2
 1287  00001dec  54000000	nop; delay slot nop
 1288  00001df0  8fc10008	lw	r1,8(r30)
 1289  00001df4  6c220010	sgti	r2,r1,#16
 1290  00001df8  1440000c	bnez	r2,L87_LF2
 1291  00001dfc  54000000	nop; delay slot nop
 1292  00001e00  08000010	j	L86_LF2
 1293  00001e04  54000000	nop; delay slot nop
 1294  00001e08          	L87_LF2:
 1295  00001e08  8fc1fff4	lw	r1,-12(r30)
 1296  00001e0c  08000188	j	L72_LF2
 1297  00001e10  54000000	nop; delay slot nop
 1298  00001e14          	L86_LF2:
 1299  00001e14  54000000	nop
 1300  00001e18          	L88_LF2:
 1301  00001e18  8fc10000	lw	r1,(r30)
 1302  00001e1c  90220000	lbu	r2,(r1)
 1303  00001e20  6c41002f	sgtui	r1,r2,#47
 1304  00001e24  10200030	beqz	r1,L91_LF2
 1305  00001e28  54000000	nop; delay slot nop
 1306  00001e2c  8fc10000	lw	r1,(r30)
 1307  00001e30  90220000	lbu	r2,(r1)
 1308  00001e34  70410039	sleui	r1,r2,#57
 1309  00001e38  1020001c	beqz	r1,L91_LF2
 1310  00001e3c  54000000	nop; delay slot nop
 1311  00001e40  8fc10000	lw	r1,(r30)
 1312  00001e44  90220000	lbu	r2,(r1)
 1313  00001e48  2041ffd0	addi	r1,r2,#-48
 1314  00001e4c  afc1fff0	sw	-16(r30),r1
 1315  00001e50  0800008c	j	L92_LF2
 1316  00001e54  54000000	nop; delay slot nop
 1317  00001e58          	L91_LF2:
 1318  00001e58  8fc10000	lw	r1,(r30)
 1319  00001e5c  90220000	lbu	r2,(r1)
 1320  00001e60  6c410060	sgtui	r1,r2,#96
 1321  00001e64  10200030	beqz	r1,L93_LF2
 1322  00001e68  54000000	nop; delay slot nop
 1323  00001e6c  8fc10000	lw	r1,(r30)
 1324  00001e70  90220000	lbu	r2,(r1)
 1325  00001e74  7041007a	sleui	r1,r2,#122
 1326  00001e78  1020001c	beqz	r1,L93_LF2
 1327  00001e7c  54000000	nop; delay slot nop
 1328  00001e80  8fc10000	lw	r1,(r30)
 1329  00001e84  90220000	lbu	r2,(r1)
 1330  00001e88  2041ffa9	addi	r1,r2,#-87
 1331  00001e8c  afc1fff0	sw	-16(r30),r1
 1332  00001e90  0800004c	j	L92_LF2
 1333  00001e94  54000000	nop; delay slot nop
 1334  00001e98          	L93_LF2:
 1335  00001e98  8fc10000	lw	r1,(r30)
 1336  00001e9c  90220000	lbu	r2,(r1)
 1337  00001ea0  6c410040	sgtui	r1,r2,#64
 1338  00001ea4  10200030	beqz	r1,L95_LF2
 1339  00001ea8  54000000	nop; delay slot nop
 1340  00001eac  8fc10000	lw	r1,(r30)
 1341  00001eb0  90220000	lbu	r2,(r1)
 1342  00001eb4  7041005a	sleui	r1,r2,#90
 1343  00001eb8  1020001c	beqz	r1,L95_LF2
 1344  00001ebc  54000000	nop; delay slot nop
 1345  00001ec0  8fc10000	lw	r1,(r30)
 1346  00001ec4  90220000	lbu	r2,(r1)
 1347  00001ec8  2041ffc9	addi	r1,r2,#-55
 1348  00001ecc  afc1fff0	sw	-16(r30),r1
 1349  00001ed0  0800000c	j	L92_LF2
 1350  00001ed4  54000000	nop; delay slot nop
 1351  00001ed8          	L95_LF2:
 1352  00001ed8  200103e8	addi	r1,r0,#1000
 1353  00001edc  afc1fff0	sw	-16(r30),r1
 1354  00001ee0          	L96_LF2:
 1355  00001ee0          	L94_LF2:
 1356  00001ee0          	L92_LF2:
 1357  00001ee0  8fc1fff0	lw	r1,-16(r30)
 1358  00001ee4  8fc20008	lw	r2,8(r30)
 1359  00001ee8  0022082a	slt	r1,r1,r2
 1360  00001eec  10200040	beqz	r1,L90_LF2
 1361  00001ef0  54000000	nop; delay slot nop
 1362  00001ef4  8fc1fff4	lw	r1,-12(r30)
 1363  00001ef8  8fc20008	lw	r2,8(r30)
 1364  00001efc  00200035	movi2fp	f0,r1
 1365  00001f00  00400835	movi2fp	f1,r2
 1366  00001f04  0401000e	mult	f0,f0,f1
 1367  00001f08  00000834	movfp2i	r1,f0
 1368  00001f0c  afc1fff4	sw	-12(r30),r1
 1369  00001f10  8fc1fff4	lw	r1,-12(r30)
 1370  00001f14  8fc2fff0	lw	r2,-16(r30)
 1371  00001f18  00220820	add	r1,r1,r2
 1372  00001f1c  afc1fff4	sw	-12(r30),r1
 1373  00001f20  8fc20000	lw	r2,(r30)
 1374  00001f24  20410001	addi	r1,r2,#1
 1375  00001f28  00011020	add	r2,r0,r1
 1376  00001f2c  afc20000	sw	(r30),r2
 1377  00001f30          	L97_LF2:
 1378  00001f30          	L90_LF2:
 1379  00001f30  8fc1fff0	lw	r1,-16(r30)
 1380  00001f34  8fc20008	lw	r2,8(r30)
 1381  00001f38  0022082a	slt	r1,r1,r2
 1382  00001f3c  1420000c	bnez	r1,L98_LF2
 1383  00001f40  54000000	nop; delay slot nop
 1384  00001f44  0800000c	j	L89_LF2
 1385  00001f48  54000000	nop; delay slot nop
 1386  00001f4c          	L98_LF2:
 1387  00001f4c  0bfffec8	j	L88_LF2
 1388  00001f50  54000000	nop; delay slot nop
 1389  00001f54          	L89_LF2:
 1390  00001f54  8fc10004	lw	r1,4(r30)
 1391  00001f58  64220000	snei	r2,r1,#0
 1392  00001f5c  10400010	beqz	r2,L99_LF2
 1393  00001f60  54000000	nop; delay slot nop
 1394  00001f64  8fc10004	lw	r1,4(r30)
 1395  00001f68  8fc20000	lw	r2,(r30)
 1396  00001f6c  ac220000	sw	(r1),r2
 1397  00001f70          	L99_LF2:
 1398  00001f70  8fc1fff4	lw	r1,-12(r30)
 1399  00001f74  8fc2ffec	lw	r2,-20(r30)
 1400  00001f78  00200035	movi2fp	f0,r1
 1401  00001f7c  00400835	movi2fp	f1,r2
 1402  00001f80  0401000e	mult	f0,f0,f1
 1403  00001f84  00000834	movfp2i	r1,f0
 1404  00001f88  afc1fff4	sw	-12(r30),r1
 1405  00001f8c  8fc1fff4	lw	r1,-12(r30)
 1406  00001f90  08000004	j	L72_LF2
 1407  00001f94  54000000	nop; delay slot nop
 1408  00001f98          	L72_LF2:
 1409  00001f98  8fa20000	lw	r2,0(r29)
 1410  00001f9c  8fdffff8	lw	r31,-8(r30)
 1411  00001fa0  001ee820	add	r29,r0,r30
 1412  00001fa4  8fdefffc	lw	r30,-4(r30)
 1413  00001fa8  4be00000	jr	r31
 1414  00001fac  54000000	nop
 1415  00001fb0          	.endproc _dstrtol
 1416  00001fb0          	.align 2
 1417  00001fb0          	.proc _bcopy
 1418  00001fb0          	.global _bcopy
 1419  00001fb0          	_bcopy:
 1420                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1421  00001fb0  afbefffc	sw	-4(r29),r30; push fp
 1422  00001fb4  001df020	add	r30,r0,r29; fp = sp
 1423  00001fb8  afbffff8	sw	-8(r29),r31; push ret addr
 1424  00001fbc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1425  00001fc0  afa20000	sw	0(r29),r2
 1426  00001fc4  afa30004	sw	4(r29),r3
 1427  00001fc8  54000000	nop
 1428  00001fcc          	L101_LF2:
 1429  00001fcc  8fc10008	lw	r1,8(r30)
 1430  00001fd0  2022ffff	addi	r2,r1,#-1
 1431  00001fd4  afc20008	sw	8(r30),r2
 1432  00001fd8  6c210000	sgti	r1,r1,#0
 1433  00001fdc  1420000c	bnez	r1,L103_LF2
 1434  00001fe0  54000000	nop; delay slot nop
 1435  00001fe4  0800002c	j	L102_LF2
 1436  00001fe8  54000000	nop; delay slot nop
 1437  00001fec          	L103_LF2:
 1438  00001fec  8fc10004	lw	r1,4(r30)
 1439  00001ff0  20220001	addi	r2,r1,#1
 1440  00001ff4  afc20004	sw	4(r30),r2
 1441  00001ff8  8fc20000	lw	r2,(r30)
 1442  00001ffc  20430001	addi	r3,r2,#1
 1443  00002000  afc30000	sw	(r30),r3
 1444  00002004  80420000	lb	r2,(r2)
 1445  00002008  a0220000	sb	(r1),r2
 1446  0000200c  0bffffbc	j	L101_LF2
 1447  00002010  54000000	nop; delay slot nop
 1448  00002014          	L102_LF2:
 1449  00002014          	L100_LF2:
 1450  00002014  8fa20000	lw	r2,0(r29)
 1451  00002018  8fa30004	lw	r3,4(r29)
 1452  0000201c  8fdffff8	lw	r31,-8(r30)
 1453  00002020  001ee820	add	r29,r0,r30
 1454  00002024  8fdefffc	lw	r30,-4(r30)
 1455  00002028  4be00000	jr	r31
 1456  0000202c  54000000	nop
 1457  00002030          	.endproc _bcopy
 1458  00002030          	.align 2
 1459  00002030          	.proc _bzero
 1460  00002030          	.global _bzero
 1461  00002030          	_bzero:
 1462                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1463  00002030  afbefffc	sw	-4(r29),r30; push fp
 1464  00002034  001df020	add	r30,r0,r29; fp = sp
 1465  00002038  afbffff8	sw	-8(r29),r31; push ret addr
 1466  0000203c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1467  00002040  afa20000	sw	0(r29),r2
 1468  00002044  54000000	nop
 1469  00002048          	L105_LF2:
 1470  00002048  8fc10004	lw	r1,4(r30)
 1471  0000204c  2022ffff	addi	r2,r1,#-1
 1472  00002050  afc20004	sw	4(r30),r2
 1473  00002054  6c210000	sgti	r1,r1,#0
 1474  00002058  1420000c	bnez	r1,L107_LF2
 1475  0000205c  54000000	nop; delay slot nop
 1476  00002060  08000020	j	L106_LF2
 1477  00002064  54000000	nop; delay slot nop
 1478  00002068          	L107_LF2:
 1479  00002068  8fc10000	lw	r1,(r30)
 1480  0000206c  20220001	addi	r2,r1,#1
 1481  00002070  afc20000	sw	(r30),r2
 1482  00002074  20020000	addi	r2,r0,(#0x0)&0xff
 1483  00002078  a0220000	sb	(r1),r2
 1484  0000207c  0bffffc8	j	L105_LF2
 1485  00002080  54000000	nop; delay slot nop
 1486  00002084          	L106_LF2:
 1487  00002084          	L104_LF2:
 1488  00002084  8fa20000	lw	r2,0(r29)
 1489  00002088  8fdffff8	lw	r31,-8(r30)
 1490  0000208c  001ee820	add	r29,r0,r30
 1491  00002090  8fdefffc	lw	r30,-4(r30)
 1492  00002094  4be00000	jr	r31
 1493  00002098  54000000	nop
 1494  0000209c          	.endproc _bzero
 1495  0000209c          	.align 2
 1496  0000209c          	.proc _min
 1497  0000209c          	.global _min
 1498  0000209c          	_min:
 1499                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1500  0000209c  afbefffc	sw	-4(r29),r30; push fp
 1501  000020a0  001df020	add	r30,r0,r29; fp = sp
 1502  000020a4  afbffff8	sw	-8(r29),r31; push ret addr
 1503  000020a8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1504  000020ac  afa20000	sw	0(r29),r2
 1505  000020b0  afa30004	sw	4(r29),r3
 1506  000020b4  8fc10000	lw	r1,(r30)
 1507  000020b8  8fc20004	lw	r2,4(r30)
 1508  000020bc  0022182c	sle	r3,r1,r2
 1509  000020c0  14600008	bnez	r3,L109_LF2
 1510  000020c4  54000000	nop; delay slot nop
 1511  000020c8  8fc10004	lw	r1,4(r30)
 1512  000020cc          	L109_LF2:
 1513  000020cc  08000004	j	L108_LF2
 1514  000020d0  54000000	nop; delay slot nop
 1515  000020d4          	L108_LF2:
 1516  000020d4  8fa20000	lw	r2,0(r29)
 1517  000020d8  8fa30004	lw	r3,4(r29)
 1518  000020dc  8fdffff8	lw	r31,-8(r30)
 1519  000020e0  001ee820	add	r29,r0,r30
 1520  000020e4  8fdefffc	lw	r30,-4(r30)
 1521  000020e8  4be00000	jr	r31
 1522  000020ec  54000000	nop
 1523  000020f0          	.endproc _min
 1524  000020f0          	.align 2
 1525  000020f0          	.proc _max
 1526  000020f0          	.global _max
 1527  000020f0          	_max:
 1528                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1529  000020f0  afbefffc	sw	-4(r29),r30; push fp
 1530  000020f4  001df020	add	r30,r0,r29; fp = sp
 1531  000020f8  afbffff8	sw	-8(r29),r31; push ret addr
 1532  000020fc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1533  00002100  afa20000	sw	0(r29),r2
 1534  00002104  afa30004	sw	4(r29),r3
 1535  00002108  8fc10000	lw	r1,(r30)
 1536  0000210c  8fc20004	lw	r2,4(r30)
 1537  00002110  0022182d	sge	r3,r1,r2
 1538  00002114  14600008	bnez	r3,L111_LF2
 1539  00002118  54000000	nop; delay slot nop
 1540  0000211c  8fc10004	lw	r1,4(r30)
 1541  00002120          	L111_LF2:
 1542  00002120  08000004	j	L110_LF2
 1543  00002124  54000000	nop; delay slot nop
 1544  00002128          	L110_LF2:
 1545  00002128  8fa20000	lw	r2,0(r29)
 1546  0000212c  8fa30004	lw	r3,4(r29)
 1547  00002130  8fdffff8	lw	r31,-8(r30)
 1548  00002134  001ee820	add	r29,r0,r30
 1549  00002138  8fdefffc	lw	r30,-4(r30)
 1550  0000213c  4be00000	jr	r31
 1551  00002140  54000000	nop
 1552  00002144          	.endproc _max
 1553                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1554                      ;;;
 1555                      ;;; Most of the traps are called in files from libtraps.
 1558  00002144          	.align 2
 1559  00002144          	.proc _exit
 1560  00002144          	.global _exit
 1561  00002144          	_exit:
 1562  00002144  44000300	trap	#0x300
 1563  00002148  4be00000	jr	r31
 1564  0000214c  54000000	nop
 1565  00002150          	.endproc _exit
 1567                      ; for the benefit of gcc.
 1568  00002150          	.proc ___main
 1569  00002150          	.global ___main
 1570  00002150          	___main:
 1571  00002150  4be00000	jr	r31
 1572  00002154  54000000	nop
 1573  00002158          	.endproc ___main
 1574  00002158          	.text
 1575  00002158          	.global _etext
 1576  00002158          	_etext:
 1577  00002158          	.align 3
 1578  00002158          	.data
 1579  000030c8          	.global _edata
 1580  000030c8          	_edata:
