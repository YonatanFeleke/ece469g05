 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 1258
    4                      ; Text size: 5344
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  0a2d2d2d	.ascii "\n--------------------------------------------------------------------"
   82  00003004  2d2d2d2d	
   82  00003008  2d2d2d2d	
   82  0000300c  2d2d2d2d	
   82  00003010  2d2d2d2d	
   82  00003014  2d2d2d2d	
   82  00003018  2d2d2d2d	
   82  0000301c  2d2d2d2d	
   82  00003020  2d2d2d2d	
   82  00003024  2d2d2d2d	
   82  00003028  2d2d2d2d	
   82  0000302c  2d2d2d2d	
   82  00003030  2d2d2d2d	
   82  00003034  2d2d2d2d	
   82  00003038  2d2d2d2d	
   82  0000303c  2d2d2d2d	
   82  00003040  2d2d2d2d	
   82  00003044  2d      	
   83  00003045  2d2d2d2d	.ascii "-----------------\n\000"
   83  00003049  2d2d2d2d	
   83  0000304d  2d2d2d2d	
   83  00003051  2d2d2d2d	
   83  00003055  2d0a00  	
   84  00003058          	.align 2
   85  00003058          	LC1_LF0:
   86  00003058  53686172	.ascii "SharedMem_test (%d): TEST #1a: shmget(4k)\n\000"
   86  0000305c  65644d65	
   86  00003060  6d5f7465	
   86  00003064  73742028	
   86  00003068  2564293a	
   86  0000306c  20544553	
   86  00003070  54202331	
   86  00003074  613a2073	
   86  00003078  686d6765	
   86  0000307c  7428346b	
   86  00003080  290a00  	
   87  00003083          	.align 2
   88  00003084          	LC2_LF0:
   89  00003084  53686765	.ascii "Shget(0x1000) returned: %d\n\n\000"
   89  00003088  74283078	
   89  0000308c  31303030	
   89  00003090  29207265	
   89  00003094  7475726e	
   89  00003098  65643a20	
   89  0000309c  25640a0a	
   89  000030a0  00      	
   90  000030a1          	.align 2
   91  000030a4          	LC3_LF0:
   92  000030a4  53686172	.ascii "SharedMem_test (%d): TEST #1b: shmget(4k)\n\000"
   92  000030a8  65644d65	
   92  000030ac  6d5f7465	
   92  000030b0  73742028	
   92  000030b4  2564293a	
   92  000030b8  20544553	
   92  000030bc  54202331	
   92  000030c0  623a2073	
   92  000030c4  686d6765	
   92  000030c8  7428346b	
   92  000030cc  290a00  	
   93  000030cf          	.align 2
   94  000030d0          	LC4_LF0:
   95  000030d0  53686172	.ascii "SharedMem_test (%d): TEST #1c: shmget(8k)\n\000"
   95  000030d4  65644d65	
   95  000030d8  6d5f7465	
   95  000030dc  73742028	
   95  000030e0  2564293a	
   95  000030e4  20544553	
   95  000030e8  54202331	
   95  000030ec  633a2073	
   95  000030f0  686d6765	
   95  000030f4  7428386b	
   95  000030f8  290a00  	
   96  000030fb          	.align 2
   97  000030fc          	LC5_LF0:
   98  000030fc  53686765	.ascii "Shget(0x200) returned: %d____SHOULD FAIL\n\n\000"
   98  00003100  74283078	
   98  00003104  32303029	
   98  00003108  20726574	
   98  0000310c  75726e65	
   98  00003110  643a2025	
   98  00003114  645f5f5f	
   98  00003118  5f53484f	
   98  0000311c  554c4420	
   98  00003120  4641494c	
   98  00003124  0a0a00  	
   99  00003127          	.align 2
  100  00003128          	LC6_LF0:
  101  00003128  53686172	.ascii "SharedMem_test (%d): TEST #1d: shmget(4k)\n\000"
  101  0000312c  65644d65	
  101  00003130  6d5f7465	
  101  00003134  73742028	
  101  00003138  2564293a	
  101  0000313c  20544553	
  101  00003140  54202331	
  101  00003144  643a2073	
  101  00003148  686d6765	
  101  0000314c  7428346b	
  101  00003150  290a00  	
  102  00003153          	.align 2
  103  00003154          	LC7_LF0:
  104  00003154  53686765	.ascii "Shget(0x1000) returned: %d\n\000"
  104  00003158  74283078	
  104  0000315c  31303030	
  104  00003160  29207265	
  104  00003164  7475726e	
  104  00003168  65643a20	
  104  0000316c  25640a00	
  105  00003170          	.align 2
  106  00003170          	LC8_LF0:
  107  00003170  5f5f5f5f	.ascii "__________________________________________________\n\000"
  107  00003174  5f5f5f5f	
  107  00003178  5f5f5f5f	
  107  0000317c  5f5f5f5f	
  107  00003180  5f5f5f5f	
  107  00003184  5f5f5f5f	
  107  00003188  5f5f5f5f	
  107  0000318c  5f5f5f5f	
  107  00003190  5f5f5f5f	
  107  00003194  5f5f5f5f	
  107  00003198  5f5f5f5f	
  107  0000319c  5f5f5f5f	
  107  000031a0  5f5f0a00	
  108  000031a4          	.align 2
  109  000031a4          	LC9_LF0:
  110  000031a4  53686172	.ascii "SharedMem_test (%d): TEST #2a1: shmat(%d,0x1000)\n\000"
  110  000031a8  65644d65	
  110  000031ac  6d5f7465	
  110  000031b0  73742028	
  110  000031b4  2564293a	
  110  000031b8  20544553	
  110  000031bc  54202332	
  110  000031c0  61313a20	
  110  000031c4  73686d61	
  110  000031c8  74282564	
  110  000031cc  2c307831	
  110  000031d0  30303029	
  110  000031d4  0a00    	
  111  000031d6          	.align 2
  112  000031d8          	LC10_LF0:
  113  000031d8  73686d61	.ascii "shmat(9,0x1000) returned: %d______SHOULD FAIL: Invalid Handle\n\n\000"
  113  000031dc  7428392c	
  113  000031e0  30783130	
  113  000031e4  30302920	
  113  000031e8  72657475	
  113  000031ec  726e6564	
  113  000031f0  3a202564	
  113  000031f4  5f5f5f5f	
  113  000031f8  5f5f5348	
  113  000031fc  4f554c44	
  113  00003200  20464149	
  113  00003204  4c3a2049	
  113  00003208  6e76616c	
  113  0000320c  69642048	
  113  00003210  616e646c	
  113  00003214  650a0a00	
  114  00003218          	.align 2
  115  00003218          	LC11_LF0:
  116  00003218  53686172	.ascii "SharedMem_test (%d): TEST #2a2: shmat(%d,0x1000)\n\000"
  116  0000321c  65644d65	
  116  00003220  6d5f7465	
  116  00003224  73742028	
  116  00003228  2564293a	
  116  0000322c  20544553	
  116  00003230  54202332	
  116  00003234  61323a20	
  116  00003238  73686d61	
  116  0000323c  74282564	
  116  00003240  2c307831	
  116  00003244  30303029	
  116  00003248  0a00    	
  117  0000324a          	.align 2
  118  0000324c          	LC12_LF0:
  119  0000324c  73686d61	.ascii "shmat(%d,0x1000) returned: %d______SHOULD FAIL: code&data\n\n\000"
  119  00003250  74282564	
  119  00003254  2c307831	
  119  00003258  30303029	
  119  0000325c  20726574	
  119  00003260  75726e65	
  119  00003264  643a2025	
  119  00003268  645f5f5f	
  119  0000326c  5f5f5f53	
  119  00003270  484f554c	
  119  00003274  44204641	
  119  00003278  494c3a20	
  119  0000327c  636f6465	
  119  00003280  26646174	
  119  00003284  610a0a00	
  120  00003288          	.align 2
  121  00003288          	LC13_LF0:
  122  00003288  53686172	.ascii "SharedMem_test (%d): TEST #2b: shmat(%d,0x4000)\n\000"
  122  0000328c  65644d65	
  122  00003290  6d5f7465	
  122  00003294  73742028	
  122  00003298  2564293a	
  122  0000329c  20544553	
  122  000032a0  54202332	
  122  000032a4  623a2073	
  122  000032a8  686d6174	
  122  000032ac  2825642c	
  122  000032b0  30783430	
  122  000032b4  3030290a	
  122  000032b8  00      	
  123  000032b9          	.align 2
  124  000032bc          	LC14_LF0:
  125  000032bc  73686d61	.ascii "shmat( %d , 0x4000) returned: %d. CorrectVal:16384or0x4000\n\n\000"
  125  000032c0  74282025	
  125  000032c4  64202c20	
  125  000032c8  30783430	
  125  000032cc  30302920	
  125  000032d0  72657475	
  125  000032d4  726e6564	
  125  000032d8  3a202564	
  125  000032dc  2e20436f	
  125  000032e0  72726563	
  125  000032e4  7456616c	
  125  000032e8  3a313633	
  125  000032ec  38346f72	
  125  000032f0  30783430	
  125  000032f4  30300a0a	
  125  000032f8  00      	
  126  000032f9          	.align 2
  127  000032fc          	LC15_LF0:
  128  000032fc  53686172	.ascii "SharedMem_test (%d): TEST #2c: shmat(%d,0x5500)\n\000"
  128  00003300  65644d65	
  128  00003304  6d5f7465	
  128  00003308  73742028	
  128  0000330c  2564293a	
  128  00003310  20544553	
  128  00003314  54202332	
  128  00003318  633a2073	
  128  0000331c  686d6174	
  128  00003320  2825642c	
  128  00003324  30783535	
  128  00003328  3030290a	
  128  0000332c  00      	
  129  0000332d          	.align 2
  130  00003330          	LC16_LF0:
  131  00003330  73686d61	.ascii "shmat(%d,0x5500) returned: %d. CorrectVal:20480or0x5000\n\n\000"
  131  00003334  74282564	
  131  00003338  2c307835	
  131  0000333c  35303029	
  131  00003340  20726574	
  131  00003344  75726e65	
  131  00003348  643a2025	
  131  0000334c  642e2043	
  131  00003350  6f727265	
  131  00003354  63745661	
  131  00003358  6c3a3230	
  131  0000335c  3438306f	
  131  00003360  72307835	
  131  00003364  3030300a	
  131  00003368  0a00    	
  132  0000336a          	.align 2
  133  0000336c          	LC17_LF0:
  134  0000336c  53686172	.ascii "SharedMem_test (%d): TEST #2d: shmat(%d,0x7200)\n\000"
  134  00003370  65644d65	
  134  00003374  6d5f7465	
  134  00003378  73742028	
  134  0000337c  2564293a	
  134  00003380  20544553	
  134  00003384  54202332	
  134  00003388  643a2073	
  134  0000338c  686d6174	
  134  00003390  2825642c	
  134  00003394  30783732	
  134  00003398  3030290a	
  134  0000339c  00      	
  135  0000339d          	.align 2
  136  000033a0          	LC18_LF0:
  137  000033a0  73686d61	.ascii "shmat(%d,0x7200) returned: %d. CorrectVal:28672or0x7000\n\n\000"
  137  000033a4  74282564	
  137  000033a8  2c307837	
  137  000033ac  32303029	
  137  000033b0  20726574	
  137  000033b4  75726e65	
  137  000033b8  643a2025	
  137  000033bc  642e2043	
  137  000033c0  6f727265	
  137  000033c4  63745661	
  137  000033c8  6c3a3238	
  137  000033cc  3637326f	
  137  000033d0  72307837	
  137  000033d4  3030300a	
  137  000033d8  0a00    	
  138  000033da          	.align 2
  139  000033dc          	LC19_LF0:
  140  000033dc  53686172	.ascii "SharedMem_test (%d): TEST #3a: shmdt(0x9000)\n\000"
  140  000033e0  65644d65	
  140  000033e4  6d5f7465	
  140  000033e8  73742028	
  140  000033ec  2564293a	
  140  000033f0  20544553	
  140  000033f4  54202333	
  140  000033f8  613a2073	
  140  000033fc  686d6474	
  140  00003400  28307839	
  140  00003404  30303029	
  140  00003408  0a00    	
  141  0000340a          	.align 2
  142  0000340c          	LC20_LF0:
  143  0000340c  73686d64	.ascii "shmdt(0x9000) returned: %d______SHOULD FAIL random value sent\n\n\000"
  143  00003410  74283078	
  143  00003414  39303030	
  143  00003418  29207265	
  143  0000341c  7475726e	
  143  00003420  65643a20	
  143  00003424  25645f5f	
  143  00003428  5f5f5f5f	
  143  0000342c  53484f55	
  143  00003430  4c442046	
  143  00003434  41494c20	
  143  00003438  72616e64	
  143  0000343c  6f6d2076	
  143  00003440  616c7565	
  143  00003444  2073656e	
  143  00003448  740a0a00	
  144  0000344c          	.align 2
  145  0000344c          	LC21_LF0:
  146  0000344c  53686172	.ascii "SharedMem_test (%d): TEST #3b: shmdt(%d)\n\000"
  146  00003450  65644d65	
  146  00003454  6d5f7465	
  146  00003458  73742028	
  146  0000345c  2564293a	
  146  00003460  20544553	
  146  00003464  54202333	
  146  00003468  623a2073	
  146  0000346c  686d6474	
  146  00003470  28256429	
  146  00003474  0a00    	
  147  00003476          	.align 2
  148  00003478          	LC22_LF0:
  149  00003478  73686d64	.ascii "shmdt(%d) returned: %d\n\n\000"
  149  0000347c  74282564	
  149  00003480  29207265	
  149  00003484  7475726e	
  149  00003488  65643a20	
  149  0000348c  25640a0a	
  149  00003490  00      	
  150  00003491          	.align 2
  151  00003494          	LC23_LF0:
  152  00003494  53686172	.ascii "SharedMem_test (%d): TEST #3c: shmdt(%d)\n\000"
  152  00003498  65644d65	
  152  0000349c  6d5f7465	
  152  000034a0  73742028	
  152  000034a4  2564293a	
  152  000034a8  20544553	
  152  000034ac  54202333	
  152  000034b0  633a2073	
  152  000034b4  686d6474	
  152  000034b8  28256429	
  152  000034bc  0a00    	
  153  000034be          	.align 2
  154  000034c0          	LC24_LF0:
  155  000034c0  53686172	.ascii "SharedMem_test (%d): TEST #3d: shmdt(%d)\n\000"
  155  000034c4  65644d65	
  155  000034c8  6d5f7465	
  155  000034cc  73742028	
  155  000034d0  2564293a	
  155  000034d4  20544553	
  155  000034d8  54202333	
  155  000034dc  643a2073	
  155  000034e0  686d6474	
  155  000034e4  28256429	
  155  000034e8  0a00    	
  156  000034ea          	.text
  157  000010d4          	.align 2
  158  000010d4          	.proc _main
  159  000010d4          	.global _main
  160  000010d4          	_main:
  161                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  162  000010d4  afbefffc	sw	-4(r29),r30; push fp
  163  000010d8  001df020	add	r30,r0,r29; fp = sp
  164  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  165  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  166  000010e4  0c0013f0	jal	___main
  167  000010e8  54000000	nop; not filled.
  168  000010ec  23bdfff8	addi	r29,r29,#-8
  169  000010f0  3c090000	lhi	r9,((LC0_LF0)>>16)&0xffff
  170  000010f4  25293000	addui	r9,r9,(LC0_LF0)&0xffff
  171  000010f8  afa90000	sw	(r29),r9
  172  000010fc  0c000500	jal	_Printf
  173  00001100  54000000	nop; not filled.
  174  00001104  0c000504	jal	_getpid
  175  00001108  54000000	nop; not filled.
  176  0000110c  3c090000	lhi	r9,((LC1_LF0)>>16)&0xffff
  177  00001110  25293058	addui	r9,r9,(LC1_LF0)&0xffff
  178  00001114  afa90000	sw	(r29),r9
  179  00001118  afa10004	sw	4(r29),r1
  180  0000111c  0c0004e0	jal	_Printf
  181  00001120  54000000	nop; not filled.
  182  00001124  20091000	addi	r9,r0,#4096
  183  00001128  afa90000	sw	(r29),r9
  184  0000112c  0c0004f4	jal	_shmget
  185  00001130  54000000	nop; not filled.
  186  00001134  00012020	add	r4,r0,r1
  187  00001138  3c020000	lhi	r2,((LC2_LF0)>>16)&0xffff
  188  0000113c  24423084	addui	r2,r2,(LC2_LF0)&0xffff
  189  00001140  afa20000	sw	(r29),r2
  190  00001144  afa40004	sw	4(r29),r4
  191  00001148  0c0004b4	jal	_Printf
  192  0000114c  54000000	nop; not filled.
  193  00001150  0c0004b8	jal	_getpid
  194  00001154  54000000	nop; not filled.
  195  00001158  3c090000	lhi	r9,((LC3_LF0)>>16)&0xffff
  196  0000115c  252930a4	addui	r9,r9,(LC3_LF0)&0xffff
  197  00001160  afa90000	sw	(r29),r9
  198  00001164  afa10004	sw	4(r29),r1
  199  00001168  0c000494	jal	_Printf
  200  0000116c  54000000	nop; not filled.
  201  00001170  20091000	addi	r9,r0,#4096
  202  00001174  afa90000	sw	(r29),r9
  203  00001178  0c0004a8	jal	_shmget
  204  0000117c  54000000	nop; not filled.
  205  00001180  00013020	add	r6,r0,r1
  206  00001184  afa20000	sw	(r29),r2
  207  00001188  afa60004	sw	4(r29),r6
  208  0000118c  0c000470	jal	_Printf
  209  00001190  54000000	nop; not filled.
  210  00001194  0c000474	jal	_getpid
  211  00001198  54000000	nop; not filled.
  212  0000119c  3c090000	lhi	r9,((LC4_LF0)>>16)&0xffff
  213  000011a0  252930d0	addui	r9,r9,(LC4_LF0)&0xffff
  214  000011a4  afa90000	sw	(r29),r9
  215  000011a8  afa10004	sw	4(r29),r1
  216  000011ac  0c000450	jal	_Printf
  217  000011b0  54000000	nop; not filled.
  218  000011b4  20092000	addi	r9,r0,#8192
  219  000011b8  afa90000	sw	(r29),r9
  220  000011bc  0c000464	jal	_shmget
  221  000011c0  54000000	nop; not filled.
  222  000011c4  00014020	add	r8,r0,r1
  223  000011c8  3c090000	lhi	r9,((LC5_LF0)>>16)&0xffff
  224  000011cc  252930fc	addui	r9,r9,(LC5_LF0)&0xffff
  225  000011d0  afa90000	sw	(r29),r9
  226  000011d4  afa80004	sw	4(r29),r8
  227  000011d8  0c000424	jal	_Printf
  228  000011dc  54000000	nop; not filled.
  229  000011e0  0c000428	jal	_getpid
  230  000011e4  54000000	nop; not filled.
  231  000011e8  3c090000	lhi	r9,((LC6_LF0)>>16)&0xffff
  232  000011ec  25293128	addui	r9,r9,(LC6_LF0)&0xffff
  233  000011f0  afa90000	sw	(r29),r9
  234  000011f4  afa10004	sw	4(r29),r1
  235  000011f8  0c000404	jal	_Printf
  236  000011fc  54000000	nop; not filled.
  237  00001200  20091000	addi	r9,r0,#4096
  238  00001204  afa90000	sw	(r29),r9
  239  00001208  0c000418	jal	_shmget
  240  0000120c  54000000	nop; not filled.
  241  00001210  00014020	add	r8,r0,r1
  242  00001214  3c090000	lhi	r9,((LC7_LF0)>>16)&0xffff
  243  00001218  25293154	addui	r9,r9,(LC7_LF0)&0xffff
  244  0000121c  afa90000	sw	(r29),r9
  245  00001220  afa80004	sw	4(r29),r8
  246  00001224  0c0003d8	jal	_Printf
  247  00001228  54000000	nop; not filled.
  248  0000122c  3c020000	lhi	r2,((LC8_LF0)>>16)&0xffff
  249  00001230  24423170	addui	r2,r2,(LC8_LF0)&0xffff
  250  00001234  afa20000	sw	(r29),r2
  251  00001238  0c0003c4	jal	_Printf
  252  0000123c  54000000	nop; not filled.
  253  00001240  0c0003c8	jal	_getpid
  254  00001244  54000000	nop; not filled.
  255  00001248  23bdfff8	addi	r29,r29,#-8
  256  0000124c  3c090000	lhi	r9,((LC9_LF0)>>16)&0xffff
  257  00001250  252931a4	addui	r9,r9,(LC9_LF0)&0xffff
  258  00001254  afa90000	sw	(r29),r9
  259  00001258  afa10004	sw	4(r29),r1
  260  0000125c  20090009	addi	r9,r0,#9
  261  00001260  afa90008	sw	8(r29),r9
  262  00001264  0c000398	jal	_Printf
  263  00001268  54000000	nop; not filled.
  264  0000126c  afa90000	sw	(r29),r9
  265  00001270  20091000	addi	r9,r0,#4096
  266  00001274  afa90004	sw	4(r29),r9
  267  00001278  0c0003b4	jal	_shmat
  268  0000127c  54000000	nop; not filled.
  269  00001280  00013820	add	r7,r0,r1
  270  00001284  3c090000	lhi	r9,((LC10_LF0)>>16)&0xffff
  271  00001288  252931d8	addui	r9,r9,(LC10_LF0)&0xffff
  272  0000128c  afa90000	sw	(r29),r9
  273  00001290  afa70004	sw	4(r29),r7
  274  00001294  0c000368	jal	_Printf
  275  00001298  54000000	nop; not filled.
  276  0000129c  0c00036c	jal	_getpid
  277  000012a0  54000000	nop; not filled.
  278  000012a4  3c090000	lhi	r9,((LC11_LF0)>>16)&0xffff
  279  000012a8  25293218	addui	r9,r9,(LC11_LF0)&0xffff
  280  000012ac  afa90000	sw	(r29),r9
  281  000012b0  afa10004	sw	4(r29),r1
  282  000012b4  afa40008	sw	8(r29),r4
  283  000012b8  0c000344	jal	_Printf
  284  000012bc  54000000	nop; not filled.
  285  000012c0  afa40000	sw	(r29),r4
  286  000012c4  20091000	addi	r9,r0,#4096
  287  000012c8  afa90004	sw	4(r29),r9
  288  000012cc  0c000360	jal	_shmat
  289  000012d0  54000000	nop; not filled.
  290  000012d4  3c090000	lhi	r9,((LC12_LF0)>>16)&0xffff
  291  000012d8  2529324c	addui	r9,r9,(LC12_LF0)&0xffff
  292  000012dc  afa90000	sw	(r29),r9
  293  000012e0  afa40004	sw	4(r29),r4
  294  000012e4  afa10008	sw	8(r29),r1
  295  000012e8  0c000314	jal	_Printf
  296  000012ec  54000000	nop; not filled.
  297  000012f0  0c000318	jal	_getpid
  298  000012f4  54000000	nop; not filled.
  299  000012f8  3c090000	lhi	r9,((LC13_LF0)>>16)&0xffff
  300  000012fc  25293288	addui	r9,r9,(LC13_LF0)&0xffff
  301  00001300  afa90000	sw	(r29),r9
  302  00001304  afa10004	sw	4(r29),r1
  303  00001308  afa40008	sw	8(r29),r4
  304  0000130c  0c0002f0	jal	_Printf
  305  00001310  54000000	nop; not filled.
  306  00001314  afa40000	sw	(r29),r4
  307  00001318  20094000	addi	r9,r0,#16384
  308  0000131c  afa90004	sw	4(r29),r9
  309  00001320  0c00030c	jal	_shmat
  310  00001324  54000000	nop; not filled.
  311  00001328  00013820	add	r7,r0,r1
  312  0000132c  3c090000	lhi	r9,((LC14_LF0)>>16)&0xffff
  313  00001330  252932bc	addui	r9,r9,(LC14_LF0)&0xffff
  314  00001334  afa90000	sw	(r29),r9
  315  00001338  afa40004	sw	4(r29),r4
  316  0000133c  afa70008	sw	8(r29),r7
  317  00001340  0c0002bc	jal	_Printf
  318  00001344  54000000	nop; not filled.
  319  00001348  0c0002c0	jal	_getpid
  320  0000134c  54000000	nop; not filled.
  321  00001350  3c090000	lhi	r9,((LC15_LF0)>>16)&0xffff
  322  00001354  252932fc	addui	r9,r9,(LC15_LF0)&0xffff
  323  00001358  afa90000	sw	(r29),r9
  324  0000135c  afa10004	sw	4(r29),r1
  325  00001360  afa60008	sw	8(r29),r6
  326  00001364  0c000298	jal	_Printf
  327  00001368  54000000	nop; not filled.
  328  0000136c  afa60000	sw	(r29),r6
  329  00001370  20095500	addi	r9,r0,#21760
  330  00001374  afa90004	sw	4(r29),r9
  331  00001378  0c0002b4	jal	_shmat
  332  0000137c  54000000	nop; not filled.
  333  00001380  00012820	add	r5,r0,r1
  334  00001384  3c090000	lhi	r9,((LC16_LF0)>>16)&0xffff
  335  00001388  25293330	addui	r9,r9,(LC16_LF0)&0xffff
  336  0000138c  afa90000	sw	(r29),r9
  337  00001390  afa60004	sw	4(r29),r6
  338  00001394  afa50008	sw	8(r29),r5
  339  00001398  0c000264	jal	_Printf
  340  0000139c  54000000	nop; not filled.
  341  000013a0  0c000268	jal	_getpid
  342  000013a4  54000000	nop; not filled.
  343  000013a8  3c090000	lhi	r9,((LC17_LF0)>>16)&0xffff
  344  000013ac  2529336c	addui	r9,r9,(LC17_LF0)&0xffff
  345  000013b0  afa90000	sw	(r29),r9
  346  000013b4  afa10004	sw	4(r29),r1
  347  000013b8  afa80008	sw	8(r29),r8
  348  000013bc  0c000240	jal	_Printf
  349  000013c0  54000000	nop; not filled.
  350  000013c4  afa80000	sw	(r29),r8
  351  000013c8  20097200	addi	r9,r0,#29184
  352  000013cc  afa90004	sw	4(r29),r9
  353  000013d0  0c00025c	jal	_shmat
  354  000013d4  54000000	nop; not filled.
  355  000013d8  00011820	add	r3,r0,r1
  356  000013dc  3c090000	lhi	r9,((LC18_LF0)>>16)&0xffff
  357  000013e0  252933a0	addui	r9,r9,(LC18_LF0)&0xffff
  358  000013e4  afa90000	sw	(r29),r9
  359  000013e8  afa80004	sw	4(r29),r8
  360  000013ec  afa30008	sw	8(r29),r3
  361  000013f0  0c00020c	jal	_Printf
  362  000013f4  54000000	nop; not filled.
  363  000013f8  afa20000	sw	(r29),r2
  364  000013fc  0c000200	jal	_Printf
  365  00001400  54000000	nop; not filled.
  366  00001404  0c000204	jal	_getpid
  367  00001408  54000000	nop; not filled.
  368  0000140c  3c090000	lhi	r9,((LC19_LF0)>>16)&0xffff
  369  00001410  252933dc	addui	r9,r9,(LC19_LF0)&0xffff
  370  00001414  afa90000	sw	(r29),r9
  371  00001418  afa10004	sw	4(r29),r1
  372  0000141c  afa70008	sw	8(r29),r7
  373  00001420  0c0001dc	jal	_Printf
  374  00001424  54000000	nop; not filled.
  375  00001428  24099000	addui	r9,r0,#36864
  376  0000142c  afa90000	sw	(r29),r9
  377  00001430  0c000208	jal	_shmdt
  378  00001434  54000000	nop; not filled.
  379  00001438  3c090000	lhi	r9,((LC20_LF0)>>16)&0xffff
  380  0000143c  2529340c	addui	r9,r9,(LC20_LF0)&0xffff
  381  00001440  afa90000	sw	(r29),r9
  382  00001444  afa10004	sw	4(r29),r1
  383  00001448  0c0001b4	jal	_Printf
  384  0000144c  54000000	nop; not filled.
  385  00001450  0c0001b8	jal	_getpid
  386  00001454  54000000	nop; not filled.
  387  00001458  3c090000	lhi	r9,((LC21_LF0)>>16)&0xffff
  388  0000145c  2529344c	addui	r9,r9,(LC21_LF0)&0xffff
  389  00001460  afa90000	sw	(r29),r9
  390  00001464  afa10004	sw	4(r29),r1
  391  00001468  afa70008	sw	8(r29),r7
  392  0000146c  0c000190	jal	_Printf
  393  00001470  54000000	nop; not filled.
  394  00001474  afa70000	sw	(r29),r7
  395  00001478  0c0001c0	jal	_shmdt
  396  0000147c  54000000	nop; not filled.
  397  00001480  3c020000	lhi	r2,((LC22_LF0)>>16)&0xffff
  398  00001484  24423478	addui	r2,r2,(LC22_LF0)&0xffff
  399  00001488  afa20000	sw	(r29),r2
  400  0000148c  afa70004	sw	4(r29),r7
  401  00001490  afa10008	sw	8(r29),r1
  402  00001494  0c000168	jal	_Printf
  403  00001498  54000000	nop; not filled.
  404  0000149c  0c00016c	jal	_getpid
  405  000014a0  54000000	nop; not filled.
  406  000014a4  3c090000	lhi	r9,((LC23_LF0)>>16)&0xffff
  407  000014a8  25293494	addui	r9,r9,(LC23_LF0)&0xffff
  408  000014ac  afa90000	sw	(r29),r9
  409  000014b0  afa10004	sw	4(r29),r1
  410  000014b4  afa50008	sw	8(r29),r5
  411  000014b8  0c000144	jal	_Printf
  412  000014bc  54000000	nop; not filled.
  413  000014c0  afa50000	sw	(r29),r5
  414  000014c4  0c000174	jal	_shmdt
  415  000014c8  54000000	nop; not filled.
  416  000014cc  afa20000	sw	(r29),r2
  417  000014d0  afa50004	sw	4(r29),r5
  418  000014d4  afa10008	sw	8(r29),r1
  419  000014d8  0c000124	jal	_Printf
  420  000014dc  54000000	nop; not filled.
  421  000014e0  0c000128	jal	_getpid
  422  000014e4  54000000	nop; not filled.
  423  000014e8  3c090000	lhi	r9,((LC24_LF0)>>16)&0xffff
  424  000014ec  252934c0	addui	r9,r9,(LC24_LF0)&0xffff
  425  000014f0  afa90000	sw	(r29),r9
  426  000014f4  afa10004	sw	4(r29),r1
  427  000014f8  afa30008	sw	8(r29),r3
  428  000014fc  0c000100	jal	_Printf
  429  00001500  54000000	nop; not filled.
  430  00001504  afa30000	sw	(r29),r3
  431  00001508  0c000130	jal	_shmdt
  432  0000150c  54000000	nop; not filled.
  433  00001510  afa20000	sw	(r29),r2
  434  00001514  afa30004	sw	4(r29),r3
  435  00001518  afa10008	sw	8(r29),r1
  436  0000151c  0c0000e0	jal	_Printf
  437  00001520  54000000	nop; not filled.
  438  00001524  afa40000	sw	(r29),r4
  439  00001528  0c00011c	jal	_shmrm
  440  0000152c  54000000	nop; not filled.
  441  00001530  afa20000	sw	(r29),r2
  442  00001534  afa40004	sw	4(r29),r4
  443  00001538  afa10008	sw	8(r29),r1
  444  0000153c  0c0000c0	jal	_Printf
  445  00001540  54000000	nop; not filled.
  446  00001544  afa60000	sw	(r29),r6
  447  00001548  0c0000fc	jal	_shmrm
  448  0000154c  54000000	nop; not filled.
  449  00001550  afa20000	sw	(r29),r2
  450  00001554  afa60004	sw	4(r29),r6
  451  00001558  afa10008	sw	8(r29),r1
  452  0000155c  0c0000a0	jal	_Printf
  453  00001560  54000000	nop; not filled.
  454  00001564  afa80000	sw	(r29),r8
  455  00001568  0c0000dc	jal	_shmrm
  456  0000156c  54000000	nop; not filled.
  457  00001570  afa20000	sw	(r29),r2
  458  00001574  afa80004	sw	4(r29),r8
  459  00001578  afa10008	sw	8(r29),r1
  460  0000157c  0c000080	jal	_Printf
  461  00001580  54000000	nop; not filled.
  462  00001584  20090009	addi	r9,r0,#9
  463  00001588  afa90000	sw	(r29),r9
  464  0000158c  0c0000b8	jal	_shmrm
  465  00001590  54000000	nop; not filled.
  466  00001594  afa20000	sw	(r29),r2
  467  00001598  afa90004	sw	4(r29),r9
  468  0000159c  afa10008	sw	8(r29),r1
  469  000015a0  0c00005c	jal	_Printf
  470  000015a4  54000000	nop; not filled.
  471  000015a8  20010000	addi	r1,r0,#0
  472  000015ac  23bd0010	addi	r29,r29,#16
  473  000015b0  0c000f18	jal	_exit
  474  000015b4  54000000	nop
  475  000015b8          	.endproc _main
  476                      ;;;
  477                      ;;; Stub functions for DLX traps.
  478                      ;;;
  479                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  480                      ;;;
  481                      ;;; The traps such as Open and Close
  482                      ;;; (note the capital letters) are for use by user programs.  The traps
  483                      ;;; with names such as open and close (lower case) are for use by the OS.
  484                      ;;;
  487  000015b8          	.align 2
  489                      ;;; The following are the traps to be used by user-level programs
  490                      ;;;
  492  000015b8          	.align 2
  493  000015b8          	.proc _Open
  494  000015b8          	.global _Open
  495  000015b8          	_Open:
  496                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  497                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  498                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  499  000015b8  44000213	trap	#0x213
  500  000015bc  4be00000	jr	r31
  501  000015c0  54000000	nop
  502  000015c4          	.endproc _Open
  504  000015c4          	.proc _Close
  505  000015c4          	.global _Close
  506  000015c4          	_Close:
  507  000015c4  44000214	trap	#0x214
  508  000015c8  4be00000	jr	r31
  509  000015cc  54000000	nop
  510  000015d0          	.endproc _Close
  512  000015d0          	.proc _Read
  513  000015d0          	.global _Read
  514  000015d0          	_Read:
  515  000015d0  44000210	trap	#0x210
  516  000015d4  4be00000	jr	r31
  517  000015d8  54000000	nop
  518  000015dc          	.endproc _Read
  520  000015dc          	.proc _Write
  521  000015dc          	.global _Write
  522  000015dc          	_Write:
  523  000015dc  44000211	trap	#0x211
  524  000015e0  4be00000	jr	r31
  525  000015e4  54000000	nop
  526  000015e8          	.endproc _Write
  528  000015e8          	.proc _Lseek
  529  000015e8          	.global _Lseek
  530  000015e8          	_Lseek:
  531  000015e8  44000212	trap	#0x212
  532  000015ec  4be00000	jr	r31
  533  000015f0  54000000	nop
  534  000015f4          	.endproc _Lseek
  536  000015f4          	.proc _Putchar
  537  000015f4          	.global _Putchar
  538  000015f4          	_Putchar:
  539  000015f4  44000280	trap	#0x280
  540  000015f8  4be00000	jr	r31
  541  000015fc  54000000	nop
  542  00001600          	.endproc _Putchar
  544  00001600          	.proc _Printf
  545  00001600          	.global _Printf
  546  00001600          	_Printf:
  547  00001600  44000201	trap	#0x201
  548  00001604  4be00000	jr	r31
  549  00001608  54000000	nop
  550  0000160c          	.endproc _Printf
  552  0000160c          	.proc _getpid
  553  0000160c          	.global _getpid
  554  0000160c          	_getpid:
  555  0000160c  44000431	trap	#0x431
  556  00001610  4be00000	jr	r31
  557  00001614  54000000	nop
  558  00001618          	.endproc _getpid
  560  00001618          	.proc _process_create
  561  00001618          	.global _process_create
  562  00001618          	_process_create:
  563  00001618  44000432	trap	#0x432
  564  0000161c  4be00000	jr	r31
  565  00001620  54000000	nop
  566  00001624          	.endproc _process_create
  568  00001624          	.proc _shmget
  569  00001624          	.global _shmget
  570  00001624          	_shmget:
  571  00001624  44000440	trap	#0x440
  572  00001628  4be00000	jr	r31
  573  0000162c  54000000	nop
  574  00001630          	.endproc _shmget
  576  00001630          	.proc _shmat
  577  00001630          	.global _shmat
  578  00001630          	_shmat:
  579  00001630  44000441	trap	#0x441
  580  00001634  4be00000	jr	r31
  581  00001638  54000000	nop
  582  0000163c          	.endproc _shmat
  584  0000163c          	.proc _shmdt
  585  0000163c          	.global _shmdt
  586  0000163c          	_shmdt:
  587  0000163c  44000442	trap	#0x442
  588  00001640  4be00000	jr	r31
  589  00001644  54000000	nop
  590  00001648          	.endproc _shmdt
  592  00001648          	.proc _shmrm
  593  00001648          	.global _shmrm
  594  00001648          	_shmrm:
  595  00001648  44000443	trap	#0x443
  596  0000164c  4be00000	jr	r31
  597  00001650  54000000	nop
  598  00001654          	.endproc _shmrm
  600  00001654          	.proc _sem_create
  601  00001654          	.global _sem_create
  602  00001654          	_sem_create:
  603  00001654  44000450	trap	#0x450
  604  00001658  4be00000	jr	r31
  605  0000165c  54000000	nop
  606  00001660          	.endproc _sem_create
  608  00001660          	.proc _sem_wait
  609  00001660          	.global _sem_wait
  610  00001660          	_sem_wait:
  611  00001660  44000451	trap	#0x451
  612  00001664  4be00000	jr	r31
  613  00001668  54000000	nop
  614  0000166c          	.endproc _sem_wait
  616  0000166c          	.proc _sem_signal
  617  0000166c          	.global _sem_signal
  618  0000166c          	_sem_signal:
  619  0000166c  44000452	trap	#0x452
  620  00001670  4be00000	jr	r31
  621  00001674  54000000	nop
  622  00001678          	.endproc _sem_signal
  624  00001678          	.proc _lock_create
  625  00001678          	.global _lock_create
  626  00001678          	_lock_create:
  627  00001678  44000453	trap	#0x453
  628  0000167c  4be00000	jr	r31
  629  00001680  54000000	nop
  630  00001684          	.endproc _lock_create
  632  00001684          	.proc _lock_acquire
  633  00001684          	.global _lock_acquire
  634  00001684          	_lock_acquire:
  635  00001684  44000454	trap	#0x454
  636  00001688  4be00000	jr	r31
  637  0000168c  54000000	nop
  638  00001690          	.endproc _lock_acquire
  640  00001690          	.proc _lock_release
  641  00001690          	.global _lock_release
  642  00001690          	_lock_release:
  643  00001690  44000455	trap	#0x455
  644  00001694  4be00000	jr	r31
  645  00001698  54000000	nop
  646  0000169c          	.endproc _lock_release
  648  0000169c          	.proc _cond_create
  649  0000169c          	.global _cond_create
  650  0000169c          	_cond_create:
  651  0000169c  44000456	trap	#0x456
  652  000016a0  4be00000	jr	r31
  653  000016a4  54000000	nop
  654  000016a8          	.endproc _cond_create
  656  000016a8          	.proc _cond_wait
  657  000016a8          	.global _cond_wait
  658  000016a8          	_cond_wait:
  659  000016a8  44000457	trap	#0x457
  660  000016ac  4be00000	jr	r31
  661  000016b0  54000000	nop
  662  000016b4          	.endproc _cond_wait
  664  000016b4          	.proc _cond_signal
  665  000016b4          	.global _cond_signal
  666  000016b4          	_cond_signal:
  667  000016b4  44000458	trap	#0x458
  668  000016b8  4be00000	jr	r31
  669  000016bc  54000000	nop
  670  000016c0          	.endproc _cond_signal
  672  000016c0          	.proc _cond_broadcast
  673  000016c0          	.global _cond_broadcast
  674  000016c0          	_cond_broadcast:
  675  000016c0  44000459	trap	#0x459
  676  000016c4  4be00000	jr	r31
  677  000016c8  54000000	nop
  678  000016cc          	.endproc _cond_broadcast
  680  000016cc          	.proc _mbox_create
  681  000016cc          	.global _mbox_create
  682  000016cc          	_mbox_create:
  683  000016cc  44000460	trap	#0x460
  684  000016d0  4be00000	jr	r31
  685  000016d4  54000000	nop
  686  000016d8          	.endproc _mbox_create
  688  000016d8          	.proc _mbox_open
  689  000016d8          	.global _mbox_open
  690  000016d8          	_mbox_open:
  691  000016d8  44000461	trap	#0x461
  692  000016dc  4be00000	jr	r31
  693  000016e0  54000000	nop
  694  000016e4          	.endproc _mbox_open
  696  000016e4          	.proc _mbox_close
  697  000016e4          	.global _mbox_close
  698  000016e4          	_mbox_close:
  699  000016e4  44000462	trap	#0x462
  700  000016e8  4be00000	jr	r31
  701  000016ec  54000000	nop
  702  000016f0          	.endproc _mbox_close
  704  000016f0          	.proc _mbox_send
  705  000016f0          	.global _mbox_send
  706  000016f0          	_mbox_send:
  707  000016f0  44000463	trap	#0x463
  708  000016f4  4be00000	jr	r31
  709  000016f8  54000000	nop
  710  000016fc          	.endproc _mbox_send
  712  000016fc          	.proc _mbox_recv
  713  000016fc          	.global _mbox_recv
  714  000016fc          	_mbox_recv:
  715  000016fc  44000464	trap	#0x464
  716  00001700  4be00000	jr	r31
  717  00001704  54000000	nop
  718  00001708          	.endproc _mbox_recv
  720  00001708          	.proc _sleep
  721  00001708          	.global _sleep
  722  00001708          	_sleep:
  723  00001708  44000465	trap	#0x465
  724  0000170c  4be00000	jr	r31
  725  00001710  54000000	nop
  726  00001714          	.endproc _sleep
  728  00001714          	.proc _yield
  729  00001714          	.global _yield
  730  00001714          	_yield:
  731  00001714  44000466	trap	#0x466
  732  00001718  4be00000	jr	r31
  733  0000171c  54000000	nop
  734  00001720          	.endproc _yield
  737  00001720          	.proc _Exit
  738  00001720          	.global _Exit
  739  00001720          	_Exit:
  740  00001720  44000500	trap	#0x500
  741  00001724  4be00000	jr	r31
  742  00001728  54000000	nop
  743  0000172c          	.endproc _Exit
  746  0000172c          	.proc _malloc
  747  0000172c          	.global _malloc
  748  0000172c          	_malloc:
  749  0000172c  44000467	trap	#0x467
  750  00001730  4be00000	jr	r31
  751  00001734          	.endproc _malloc
  754  00001734          	.proc _mfree
  755  00001734          	.global _mfree
  756  00001734          	_mfree:
  757  00001734  44000468	trap	#0x468
  758  00001738  4be00000	jr	r31
  759  0000173c          	.endproc _mfree
  760                      ; Compiled by GCC
  762  0000173c          	.align 2
  763  0000173c          	.proc _isspace
  764  0000173c          	.global _isspace
  765  0000173c          	_isspace:
  766                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  767  0000173c  afbefffc	sw	-4(r29),r30; push fp
  768  00001740  001df020	add	r30,r0,r29; fp = sp
  769  00001744  afbffff8	sw	-8(r29),r31; push ret addr
  770  00001748  2fbd0018	subui	r29,r29,#24; alloc local storage
  771  0000174c  afa20000	sw	0(r29),r2
  772  00001750  afa30004	sw	4(r29),r3
  773  00001754  afa40008	sw	8(r29),r4
  774  00001758  83c20003	lb	r2,3(r30)
  775  0000175c  20010000	addi	r1,r0,#0
  776  00001760  304300ff	andi	r3,r2,#0x00ff
  777  00001764  60640020	seqi	r4,r3,#32
  778  00001768  1480002c	bnez	r4,L3_LF2
  779  0000176c  54000000	nop; delay slot nop
  780  00001770  304300ff	andi	r3,r2,#0x00ff
  781  00001774  60640009	seqi	r4,r3,#9
  782  00001778  1480001c	bnez	r4,L3_LF2
  783  0000177c  54000000	nop; delay slot nop
  784  00001780  304300ff	andi	r3,r2,#0x00ff
  785  00001784  6064000a	seqi	r4,r3,#10
  786  00001788  1480000c	bnez	r4,L3_LF2
  787  0000178c  54000000	nop; delay slot nop
  788  00001790  08000008	j	L2_LF2
  789  00001794  54000000	nop; delay slot nop
  790  00001798          	L3_LF2:
  791  00001798  20010001	addi	r1,r0,#1
  792  0000179c          	L2_LF2:
  793  0000179c  08000004	j	L1_LF2
  794  000017a0  54000000	nop; delay slot nop
  795  000017a4          	L1_LF2:
  796  000017a4  8fa20000	lw	r2,0(r29)
  797  000017a8  8fa30004	lw	r3,4(r29)
  798  000017ac  8fa40008	lw	r4,8(r29)
  799  000017b0  8fdffff8	lw	r31,-8(r30)
  800  000017b4  001ee820	add	r29,r0,r30
  801  000017b8  8fdefffc	lw	r30,-4(r30)
  802  000017bc  4be00000	jr	r31
  803  000017c0  54000000	nop
  804  000017c4          	.endproc _isspace
  805  000017c4          	.align 2
  806  000017c4          	.proc _isxdigit
  807  000017c4          	.global _isxdigit
  808  000017c4          	_isxdigit:
  809                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  810  000017c4  afbefffc	sw	-4(r29),r30; push fp
  811  000017c8  001df020	add	r30,r0,r29; fp = sp
  812  000017cc  afbffff8	sw	-8(r29),r31; push ret addr
  813  000017d0  2fbd0018	subui	r29,r29,#24; alloc local storage
  814  000017d4  afa20000	sw	0(r29),r2
  815  000017d8  afa30004	sw	4(r29),r3
  816  000017dc  afa40008	sw	8(r29),r4
  817  000017e0  83c20003	lb	r2,3(r30)
  818  000017e4  20010000	addi	r1,r0,#0
  819  000017e8  304300ff	andi	r3,r2,#0x00ff
  820  000017ec  6c64002f	sgtui	r4,r3,#47
  821  000017f0  1080001c	beqz	r4,L7_LF2
  822  000017f4  54000000	nop; delay slot nop
  823  000017f8  304300ff	andi	r3,r2,#0x00ff
  824  000017fc  70640039	sleui	r4,r3,#57
  825  00001800  1480005c	bnez	r4,L6_LF2
  826  00001804  54000000	nop; delay slot nop
  827  00001808  08000004	j	L7_LF2
  828  0000180c  54000000	nop; delay slot nop
  829  00001810          	L7_LF2:
  830  00001810  304300ff	andi	r3,r2,#0x00ff
  831  00001814  6c640060	sgtui	r4,r3,#96
  832  00001818  1080001c	beqz	r4,L8_LF2
  833  0000181c  54000000	nop; delay slot nop
  834  00001820  304300ff	andi	r3,r2,#0x00ff
  835  00001824  70640066	sleui	r4,r3,#102
  836  00001828  14800034	bnez	r4,L6_LF2
  837  0000182c  54000000	nop; delay slot nop
  838  00001830  08000004	j	L8_LF2
  839  00001834  54000000	nop; delay slot nop
  840  00001838          	L8_LF2:
  841  00001838  304300ff	andi	r3,r2,#0x00ff
  842  0000183c  6c640040	sgtui	r4,r3,#64
  843  00001840  10800020	beqz	r4,L5_LF2
  844  00001844  54000000	nop; delay slot nop
  845  00001848  304300ff	andi	r3,r2,#0x00ff
  846  0000184c  70640041	sleui	r4,r3,#65
  847  00001850  1480000c	bnez	r4,L6_LF2
  848  00001854  54000000	nop; delay slot nop
  849  00001858  08000008	j	L5_LF2
  850  0000185c  54000000	nop; delay slot nop
  851  00001860          	L6_LF2:
  852  00001860  20010001	addi	r1,r0,#1
  853  00001864          	L5_LF2:
  854  00001864  08000004	j	L4_LF2
  855  00001868  54000000	nop; delay slot nop
  856  0000186c          	L4_LF2:
  857  0000186c  8fa20000	lw	r2,0(r29)
  858  00001870  8fa30004	lw	r3,4(r29)
  859  00001874  8fa40008	lw	r4,8(r29)
  860  00001878  8fdffff8	lw	r31,-8(r30)
  861  0000187c  001ee820	add	r29,r0,r30
  862  00001880  8fdefffc	lw	r30,-4(r30)
  863  00001884  4be00000	jr	r31
  864  00001888  54000000	nop
  865  0000188c          	.endproc _isxdigit
  866  0000188c          	.align 2
  867  0000188c          	.proc _dstrcpy
  868  0000188c          	.global _dstrcpy
  869  0000188c          	_dstrcpy:
  870                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  871  0000188c  afbefffc	sw	-4(r29),r30; push fp
  872  00001890  001df020	add	r30,r0,r29; fp = sp
  873  00001894  afbffff8	sw	-8(r29),r31; push ret addr
  874  00001898  2fbd0018	subui	r29,r29,#24; alloc local storage
  875  0000189c  afa20000	sw	0(r29),r2
  876  000018a0  afa30004	sw	4(r29),r3
  877  000018a4  8fc10000	lw	r1,(r30)
  878  000018a8  afc1fff4	sw	-12(r30),r1
  879  000018ac          	L10_LF2:
  880  000018ac  8fc10000	lw	r1,(r30)
  881  000018b0  20220001	addi	r2,r1,#1
  882  000018b4  afc20000	sw	(r30),r2
  883  000018b8  8fc20004	lw	r2,4(r30)
  884  000018bc  20430001	addi	r3,r2,#1
  885  000018c0  afc30004	sw	4(r30),r3
  886  000018c4  80420000	lb	r2,(r2)
  887  000018c8  a0220000	sb	(r1),r2
  888  000018cc  a3c2fff3	sb	-13(r30),r2
  889  000018d0          	L12_LF2:
  890  000018d0  93c1fff3	lbu	r1,-13(r30)
  891  000018d4  64220000	snei	r2,r1,#0
  892  000018d8  1440000c	bnez	r2,L13_LF2
  893  000018dc  54000000	nop; delay slot nop
  894  000018e0  0800000c	j	L11_LF2
  895  000018e4  54000000	nop; delay slot nop
  896  000018e8          	L13_LF2:
  897  000018e8  0bffffc0	j	L10_LF2
  898  000018ec  54000000	nop; delay slot nop
  899  000018f0          	L11_LF2:
  900  000018f0  8fc1fff4	lw	r1,-12(r30)
  901  000018f4  08000004	j	L9_LF2
  902  000018f8  54000000	nop; delay slot nop
  903  000018fc          	L9_LF2:
  904  000018fc  8fa20000	lw	r2,0(r29)
  905  00001900  8fa30004	lw	r3,4(r29)
  906  00001904  8fdffff8	lw	r31,-8(r30)
  907  00001908  001ee820	add	r29,r0,r30
  908  0000190c  8fdefffc	lw	r30,-4(r30)
  909  00001910  4be00000	jr	r31
  910  00001914  54000000	nop
  911  00001918          	.endproc _dstrcpy
  912  00001918          	.align 2
  913  00001918          	.proc _dstrncpy
  914  00001918          	.global _dstrncpy
  915  00001918          	_dstrncpy:
  916                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  917  00001918  afbefffc	sw	-4(r29),r30; push fp
  918  0000191c  001df020	add	r30,r0,r29; fp = sp
  919  00001920  afbffff8	sw	-8(r29),r31; push ret addr
  920  00001924  2fbd0018	subui	r29,r29,#24; alloc local storage
  921  00001928  afa20000	sw	0(r29),r2
  922  0000192c  afa30004	sw	4(r29),r3
  923  00001930  8fc10000	lw	r1,(r30)
  924  00001934  afc1fff4	sw	-12(r30),r1
  925  00001938          	L15_LF2:
  926  00001938  8fc10008	lw	r1,8(r30)
  927  0000193c  2022ffff	addi	r2,r1,#-1
  928  00001940  afc20008	sw	8(r30),r2
  929  00001944  70210000	slei	r1,r1,#0
  930  00001948  1020000c	beqz	r1,L18_LF2
  931  0000194c  54000000	nop; delay slot nop
  932  00001950  08000048	j	L16_LF2
  933  00001954  54000000	nop; delay slot nop
  934  00001958          	L18_LF2:
  935  00001958  8fc10000	lw	r1,(r30)
  936  0000195c  20220001	addi	r2,r1,#1
  937  00001960  afc20000	sw	(r30),r2
  938  00001964  8fc20004	lw	r2,4(r30)
  939  00001968  20430001	addi	r3,r2,#1
  940  0000196c  afc30004	sw	4(r30),r3
  941  00001970  80420000	lb	r2,(r2)
  942  00001974  a0220000	sb	(r1),r2
  943  00001978  a3c2fff3	sb	-13(r30),r2
  944  0000197c          	L17_LF2:
  945  0000197c  93c1fff3	lbu	r1,-13(r30)
  946  00001980  64220000	snei	r2,r1,#0
  947  00001984  1440000c	bnez	r2,L19_LF2
  948  00001988  54000000	nop; delay slot nop
  949  0000198c  0800000c	j	L16_LF2
  950  00001990  54000000	nop; delay slot nop
  951  00001994          	L19_LF2:
  952  00001994  0bffffa0	j	L15_LF2
  953  00001998  54000000	nop; delay slot nop
  954  0000199c          	L16_LF2:
  955  0000199c  8fc1fff4	lw	r1,-12(r30)
  956  000019a0  08000004	j	L14_LF2
  957  000019a4  54000000	nop; delay slot nop
  958  000019a8          	L14_LF2:
  959  000019a8  8fa20000	lw	r2,0(r29)
  960  000019ac  8fa30004	lw	r3,4(r29)
  961  000019b0  8fdffff8	lw	r31,-8(r30)
  962  000019b4  001ee820	add	r29,r0,r30
  963  000019b8  8fdefffc	lw	r30,-4(r30)
  964  000019bc  4be00000	jr	r31
  965  000019c0  54000000	nop
  966  000019c4          	.endproc _dstrncpy
  967  000019c4          	.align 2
  968  000019c4          	.proc _dstrcat
  969  000019c4          	.global _dstrcat
  970  000019c4          	_dstrcat:
  971                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  972  000019c4  afbefffc	sw	-4(r29),r30; push fp
  973  000019c8  001df020	add	r30,r0,r29; fp = sp
  974  000019cc  afbffff8	sw	-8(r29),r31; push ret addr
  975  000019d0  2fbd0018	subui	r29,r29,#24; alloc local storage
  976  000019d4  afa20000	sw	0(r29),r2
  977  000019d8  8fc10000	lw	r1,(r30)
  978  000019dc  afc1fff4	sw	-12(r30),r1
  979  000019e0          	L21_LF2:
  980  000019e0  8fc10000	lw	r1,(r30)
  981  000019e4  90220000	lbu	r2,(r1)
  982  000019e8  64410000	snei	r1,r2,#0
  983  000019ec  1420000c	bnez	r1,L23_LF2
  984  000019f0  54000000	nop; delay slot nop
  985  000019f4  0800001c	j	L22_LF2
  986  000019f8  54000000	nop; delay slot nop
  987  000019fc          	L23_LF2:
  988  000019fc  8fc20000	lw	r2,(r30)
  989  00001a00  20410001	addi	r1,r2,#1
  990  00001a04  00011020	add	r2,r0,r1
  991  00001a08  afc20000	sw	(r30),r2
  992  00001a0c  0bffffd0	j	L21_LF2
  993  00001a10  54000000	nop; delay slot nop
  994  00001a14          	L22_LF2:
  995  00001a14  23bdfff8	addi	r29,r29,#-8
  996  00001a18  001d0820	add	r1,r0,r29
  997  00001a1c  8fc20000	lw	r2,(r30)
  998  00001a20  ac220000	sw	(r1),r2
  999  00001a24  8fc20004	lw	r2,4(r30)
 1000  00001a28  ac220004	sw	4(r1),r2
 1001  00001a2c  0ffffe5c	jal	_dstrcpy
 1002  00001a30  54000000	nop; delay slot nop
 1003  00001a34  23bd0008	addi	r29,r29,#8
 1004  00001a38  8fc1fff4	lw	r1,-12(r30)
 1005  00001a3c  08000004	j	L20_LF2
 1006  00001a40  54000000	nop; delay slot nop
 1007  00001a44          	L20_LF2:
 1008  00001a44  8fa20000	lw	r2,0(r29)
 1009  00001a48  8fdffff8	lw	r31,-8(r30)
 1010  00001a4c  001ee820	add	r29,r0,r30
 1011  00001a50  8fdefffc	lw	r30,-4(r30)
 1012  00001a54  4be00000	jr	r31
 1013  00001a58  54000000	nop
 1014  00001a5c          	.endproc _dstrcat
 1015  00001a5c          	.align 2
 1016  00001a5c          	.proc _dstrncmp
 1017  00001a5c          	.global _dstrncmp
 1018  00001a5c          	_dstrncmp:
 1019                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
 1020  00001a5c  afbefffc	sw	-4(r29),r30; push fp
 1021  00001a60  001df020	add	r30,r0,r29; fp = sp
 1022  00001a64  afbffff8	sw	-8(r29),r31; push ret addr
 1023  00001a68  2fbd0018	subui	r29,r29,#24; alloc local storage
 1024  00001a6c  afa20000	sw	0(r29),r2
 1025  00001a70  afa30004	sw	4(r29),r3
 1026  00001a74  54000000	nop
 1027  00001a78  20010000	addi	r1,r0,#0
 1028  00001a7c  afc1fff4	sw	-12(r30),r1
 1029  00001a80          	L25_LF2:
 1030  00001a80  8fc1fff4	lw	r1,-12(r30)
 1031  00001a84  8fc20008	lw	r2,8(r30)
 1032  00001a88  0022082a	slt	r1,r1,r2
 1033  00001a8c  1420000c	bnez	r1,L28_LF2
 1034  00001a90  54000000	nop; delay slot nop
 1035  00001a94  08000088	j	L26_LF2
 1036  00001a98  54000000	nop; delay slot nop
 1037  00001a9c          	L28_LF2:
 1038  00001a9c  8fc10004	lw	r1,4(r30)
 1039  00001aa0  90220000	lbu	r2,(r1)
 1040  00001aa4  64410000	snei	r1,r2,#0
 1041  00001aa8  14200018	bnez	r1,L29_LF2
 1042  00001aac  54000000	nop; delay slot nop
 1043  00001ab0  20010000	addi	r1,r0,#0
 1044  00001ab4  080000d8	j	L24_LF2
 1045  00001ab8  54000000	nop; delay slot nop
 1046  00001abc  08000028	j	L30_LF2
 1047  00001ac0  54000000	nop; delay slot nop
 1048  00001ac4          	L29_LF2:
 1049  00001ac4  8fc10000	lw	r1,(r30)
 1050  00001ac8  8fc20004	lw	r2,4(r30)
 1051  00001acc  90210000	lbu	r1,(r1)
 1052  00001ad0  90420000	lbu	r2,(r2)
 1053  00001ad4  00220829	sne	r1,r1,r2
 1054  00001ad8  1020000c	beqz	r1,L30_LF2
 1055  00001adc  54000000	nop; delay slot nop
 1056  00001ae0  0800003c	j	L26_LF2
 1057  00001ae4  54000000	nop; delay slot nop
 1058  00001ae8          	L31_LF2:
 1059  00001ae8          	L30_LF2:
 1060  00001ae8  8fc20000	lw	r2,(r30)
 1061  00001aec  20410001	addi	r1,r2,#1
 1062  00001af0  00011020	add	r2,r0,r1
 1063  00001af4  afc20000	sw	(r30),r2
 1064  00001af8  8fc20004	lw	r2,4(r30)
 1065  00001afc  20410001	addi	r1,r2,#1
 1066  00001b00  00011020	add	r2,r0,r1
 1067  00001b04  afc20004	sw	4(r30),r2
 1068  00001b08          	L27_LF2:
 1069  00001b08  8fc2fff4	lw	r2,-12(r30)
 1070  00001b0c  20410001	addi	r1,r2,#1
 1071  00001b10  00011020	add	r2,r0,r1
 1072  00001b14  afc2fff4	sw	-12(r30),r2
 1073  00001b18  0bffff64	j	L25_LF2
 1074  00001b1c  54000000	nop; delay slot nop
 1075  00001b20          	L26_LF2:
 1076  00001b20  8fc1fff4	lw	r1,-12(r30)
 1077  00001b24  8fc20008	lw	r2,8(r30)
 1078  00001b28  00220828	seq	r1,r1,r2
 1079  00001b2c  10200018	beqz	r1,L32_LF2
 1080  00001b30  54000000	nop; delay slot nop
 1081  00001b34  20010000	addi	r1,r0,#0
 1082  00001b38  08000054	j	L24_LF2
 1083  00001b3c  54000000	nop; delay slot nop
 1084  00001b40  0800004c	j	L33_LF2
 1085  00001b44  54000000	nop; delay slot nop
 1086  00001b48          	L32_LF2:
 1087  00001b48  8fc20000	lw	r2,(r30)
 1088  00001b4c  90410000	lbu	r1,(r2)
 1089  00001b50  8fc20004	lw	r2,4(r30)
 1090  00001b54  90430000	lbu	r3,(r2)
 1091  00001b58  00230822	sub	r1,r1,r3
 1092  00001b5c  74220000	sgei	r2,r1,#0
 1093  00001b60  10400020	beqz	r2,L34_LF2
 1094  00001b64  54000000	nop; delay slot nop
 1095  00001b68  8fc10000	lw	r1,(r30)
 1096  00001b6c  8fc20004	lw	r2,4(r30)
 1097  00001b70  90210000	lbu	r1,(r1)
 1098  00001b74  90420000	lbu	r2,(r2)
 1099  00001b78  00220829	sne	r1,r1,r2
 1100  00001b7c  08000008	j	L35_LF2
 1101  00001b80  54000000	nop; delay slot nop
 1102  00001b84          	L34_LF2:
 1103  00001b84  2001ffff	addi	r1,r0,#-1
 1104  00001b88          	L35_LF2:
 1105  00001b88  08000004	j	L24_LF2
 1106  00001b8c  54000000	nop; delay slot nop
 1107  00001b90          	L33_LF2:
 1108  00001b90          	L24_LF2:
 1109  00001b90  8fa20000	lw	r2,0(r29)
 1110  00001b94  8fa30004	lw	r3,4(r29)
 1111  00001b98  8fdffff8	lw	r31,-8(r30)
 1112  00001b9c  001ee820	add	r29,r0,r30
 1113  00001ba0  8fdefffc	lw	r30,-4(r30)
 1114  00001ba4  4be00000	jr	r31
 1115  00001ba8  54000000	nop
 1116  00001bac          	.endproc _dstrncmp
 1117  00001bac          	.align 2
 1118  00001bac          	.proc _dstrlen
 1119  00001bac          	.global _dstrlen
 1120  00001bac          	_dstrlen:
 1121                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
 1122  00001bac  afbefffc	sw	-4(r29),r30; push fp
 1123  00001bb0  001df020	add	r30,r0,r29; fp = sp
 1124  00001bb4  afbffff8	sw	-8(r29),r31; push ret addr
 1125  00001bb8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1126  00001bbc  afa20000	sw	0(r29),r2
 1127  00001bc0  20010000	addi	r1,r0,#0
 1128  00001bc4  afc1fff4	sw	-12(r30),r1
 1129  00001bc8          	L37_LF2:
 1130  00001bc8  8fc10000	lw	r1,(r30)
 1131  00001bcc  20220001	addi	r2,r1,#1
 1132  00001bd0  afc20000	sw	(r30),r2
 1133  00001bd4  90210000	lbu	r1,(r1)
 1134  00001bd8  64220000	snei	r2,r1,#0
 1135  00001bdc  1440000c	bnez	r2,L39_LF2
 1136  00001be0  54000000	nop; delay slot nop
 1137  00001be4  0800001c	j	L38_LF2
 1138  00001be8  54000000	nop; delay slot nop
 1139  00001bec          	L39_LF2:
 1140  00001bec  8fc2fff4	lw	r2,-12(r30)
 1141  00001bf0  20410001	addi	r1,r2,#1
 1142  00001bf4  00011020	add	r2,r0,r1
 1143  00001bf8  afc2fff4	sw	-12(r30),r2
 1144  00001bfc  0bffffc8	j	L37_LF2
 1145  00001c00  54000000	nop; delay slot nop
 1146  00001c04          	L38_LF2:
 1147  00001c04  8fc1fff4	lw	r1,-12(r30)
 1148  00001c08  08000004	j	L36_LF2
 1149  00001c0c  54000000	nop; delay slot nop
 1150  00001c10          	L36_LF2:
 1151  00001c10  8fa20000	lw	r2,0(r29)
 1152  00001c14  8fdffff8	lw	r31,-8(r30)
 1153  00001c18  001ee820	add	r29,r0,r30
 1154  00001c1c  8fdefffc	lw	r30,-4(r30)
 1155  00001c20  4be00000	jr	r31
 1156  00001c24  54000000	nop
 1157  00001c28          	.endproc _dstrlen
 1158  00001c28          	.align 2
 1159  00001c28          	.proc _dstrstr
 1160  00001c28          	.global _dstrstr
 1161  00001c28          	_dstrstr:
 1162                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
 1163  00001c28  afbefffc	sw	-4(r29),r30; push fp
 1164  00001c2c  001df020	add	r30,r0,r29; fp = sp
 1165  00001c30  afbffff8	sw	-8(r29),r31; push ret addr
 1166  00001c34  2fbd0018	subui	r29,r29,#24; alloc local storage
 1167  00001c38  afa20000	sw	0(r29),r2
 1168  00001c3c  23bdfff8	addi	r29,r29,#-8
 1169  00001c40  001d0820	add	r1,r0,r29
 1170  00001c44  8fc20004	lw	r2,4(r30)
 1171  00001c48  ac220000	sw	(r1),r2
 1172  00001c4c  0fffff5c	jal	_dstrlen
 1173  00001c50  54000000	nop; delay slot nop
 1174  00001c54  23bd0008	addi	r29,r29,#8
 1175  00001c58  afc1fff4	sw	-12(r30),r1
 1176  00001c5c          	L41_LF2:
 1177  00001c5c  8fc10000	lw	r1,(r30)
 1178  00001c60  90220000	lbu	r2,(r1)
 1179  00001c64  64410000	snei	r1,r2,#0
 1180  00001c68  1420000c	bnez	r1,L43_LF2
 1181  00001c6c  54000000	nop; delay slot nop
 1182  00001c70  08000060	j	L42_LF2
 1183  00001c74  54000000	nop; delay slot nop
 1184  00001c78          	L43_LF2:
 1185  00001c78  23bdfff0	addi	r29,r29,#-16
 1186  00001c7c  001d0820	add	r1,r0,r29
 1187  00001c80  8fc20000	lw	r2,(r30)
 1188  00001c84  ac220000	sw	(r1),r2
 1189  00001c88  8fc20004	lw	r2,4(r30)
 1190  00001c8c  ac220004	sw	4(r1),r2
 1191  00001c90  8fc2fff4	lw	r2,-12(r30)
 1192  00001c94  ac220008	sw	8(r1),r2
 1193  00001c98  0ffffdc0	jal	_dstrncmp
 1194  00001c9c  54000000	nop; delay slot nop
 1195  00001ca0  23bd0010	addi	r29,r29,#16
 1196  00001ca4  64220000	snei	r2,r1,#0
 1197  00001ca8  14400010	bnez	r2,L44_LF2
 1198  00001cac  54000000	nop; delay slot nop
 1199  00001cb0  8fc10000	lw	r1,(r30)
 1200  00001cb4  08000028	j	L40_LF2
 1201  00001cb8  54000000	nop; delay slot nop
 1202  00001cbc          	L44_LF2:
 1203  00001cbc  8fc20000	lw	r2,(r30)
 1204  00001cc0  20410001	addi	r1,r2,#1
 1205  00001cc4  00011020	add	r2,r0,r1
 1206  00001cc8  afc20000	sw	(r30),r2
 1207  00001ccc  0bffff8c	j	L41_LF2
 1208  00001cd0  54000000	nop; delay slot nop
 1209  00001cd4          	L42_LF2:
 1210  00001cd4  20010000	addi	r1,r0,#0
 1211  00001cd8  08000004	j	L40_LF2
 1212  00001cdc  54000000	nop; delay slot nop
 1213  00001ce0          	L40_LF2:
 1214  00001ce0  8fa20000	lw	r2,0(r29)
 1215  00001ce4  8fdffff8	lw	r31,-8(r30)
 1216  00001ce8  001ee820	add	r29,r0,r30
 1217  00001cec  8fdefffc	lw	r30,-4(r30)
 1218  00001cf0  4be00000	jr	r31
 1219  00001cf4  54000000	nop
 1220  00001cf8          	.endproc _dstrstr
 1221  00001cf8          	.align 2
 1222  00001cf8          	.proc _dmindex
 1223  00001cf8          	.global _dmindex
 1224  00001cf8          	_dmindex:
 1225                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1226  00001cf8  afbefffc	sw	-4(r29),r30; push fp
 1227  00001cfc  001df020	add	r30,r0,r29; fp = sp
 1228  00001d00  afbffff8	sw	-8(r29),r31; push ret addr
 1229  00001d04  2fbd0018	subui	r29,r29,#24; alloc local storage
 1230  00001d08  afa20000	sw	0(r29),r2
 1231  00001d0c  54000000	nop
 1232  00001d10          	L46_LF2:
 1233  00001d10  8fc10000	lw	r1,(r30)
 1234  00001d14  90220000	lbu	r2,(r1)
 1235  00001d18  64410000	snei	r1,r2,#0
 1236  00001d1c  1420000c	bnez	r1,L48_LF2
 1237  00001d20  54000000	nop; delay slot nop
 1238  00001d24  08000070	j	L47_LF2
 1239  00001d28  54000000	nop; delay slot nop
 1240  00001d2c          	L48_LF2:
 1241  00001d2c  8fc10004	lw	r1,4(r30)
 1242  00001d30  afc1fff4	sw	-12(r30),r1
 1243  00001d34          	L49_LF2:
 1244  00001d34  8fc1fff4	lw	r1,-12(r30)
 1245  00001d38  90220000	lbu	r2,(r1)
 1246  00001d3c  64410000	snei	r1,r2,#0
 1247  00001d40  1420000c	bnez	r1,L52_LF2
 1248  00001d44  54000000	nop; delay slot nop
 1249  00001d48  08000044	j	L50_LF2
 1250  00001d4c  54000000	nop; delay slot nop
 1251  00001d50          	L52_LF2:
 1252  00001d50  8fc10000	lw	r1,(r30)
 1253  00001d54  8fc2fff4	lw	r2,-12(r30)
 1254  00001d58  90210000	lbu	r1,(r1)
 1255  00001d5c  90420000	lbu	r2,(r2)
 1256  00001d60  00220828	seq	r1,r1,r2
 1257  00001d64  10200010	beqz	r1,L51_LF2
 1258  00001d68  54000000	nop; delay slot nop
 1259  00001d6c  8fc10000	lw	r1,(r30)
 1260  00001d70  08000030	j	L45_LF2
 1261  00001d74  54000000	nop; delay slot nop
 1262  00001d78          	L53_LF2:
 1263  00001d78          	L51_LF2:
 1264  00001d78  8fc2fff4	lw	r2,-12(r30)
 1265  00001d7c  20410001	addi	r1,r2,#1
 1266  00001d80  00011020	add	r2,r0,r1
 1267  00001d84  afc2fff4	sw	-12(r30),r2
 1268  00001d88  0bffffa8	j	L49_LF2
 1269  00001d8c  54000000	nop; delay slot nop
 1270  00001d90          	L50_LF2:
 1271  00001d90  0bffff7c	j	L46_LF2
 1272  00001d94  54000000	nop; delay slot nop
 1273  00001d98          	L47_LF2:
 1274  00001d98  20010000	addi	r1,r0,#0
 1275  00001d9c  08000004	j	L45_LF2
 1276  00001da0  54000000	nop; delay slot nop
 1277  00001da4          	L45_LF2:
 1278  00001da4  8fa20000	lw	r2,0(r29)
 1279  00001da8  8fdffff8	lw	r31,-8(r30)
 1280  00001dac  001ee820	add	r29,r0,r30
 1281  00001db0  8fdefffc	lw	r30,-4(r30)
 1282  00001db4  4be00000	jr	r31
 1283  00001db8  54000000	nop
 1284  00001dbc          	.endproc _dmindex
 1285  00001dbc          	.align 2
 1286  00001dbc          	.proc _dindex
 1287  00001dbc          	.global _dindex
 1288  00001dbc          	_dindex:
 1289                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1290  00001dbc  afbefffc	sw	-4(r29),r30; push fp
 1291  00001dc0  001df020	add	r30,r0,r29; fp = sp
 1292  00001dc4  afbffff8	sw	-8(r29),r31; push ret addr
 1293  00001dc8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1294  00001dcc  afa20000	sw	0(r29),r2
 1295  00001dd0  54000000	nop
 1296  00001dd4          	L55_LF2:
 1297  00001dd4  8fc10000	lw	r1,(r30)
 1298  00001dd8  90220000	lbu	r2,(r1)
 1299  00001ddc  64410000	snei	r1,r2,#0
 1300  00001de0  1420000c	bnez	r1,L57_LF2
 1301  00001de4  54000000	nop; delay slot nop
 1302  00001de8  08000040	j	L56_LF2
 1303  00001dec  54000000	nop; delay slot nop
 1304  00001df0          	L57_LF2:
 1305  00001df0  8fc10000	lw	r1,(r30)
 1306  00001df4  90220000	lbu	r2,(r1)
 1307  00001df8  8fc10004	lw	r1,4(r30)
 1308  00001dfc  00411028	seq	r2,r2,r1
 1309  00001e00  10400010	beqz	r2,L58_LF2
 1310  00001e04  54000000	nop; delay slot nop
 1311  00001e08  8fc10000	lw	r1,(r30)
 1312  00001e0c  08000028	j	L54_LF2
 1313  00001e10  54000000	nop; delay slot nop
 1314  00001e14          	L58_LF2:
 1315  00001e14  8fc20000	lw	r2,(r30)
 1316  00001e18  20410001	addi	r1,r2,#1
 1317  00001e1c  00011020	add	r2,r0,r1
 1318  00001e20  afc20000	sw	(r30),r2
 1319  00001e24  0bffffac	j	L55_LF2
 1320  00001e28  54000000	nop; delay slot nop
 1321  00001e2c          	L56_LF2:
 1322  00001e2c  20010000	addi	r1,r0,#0
 1323  00001e30  08000004	j	L54_LF2
 1324  00001e34  54000000	nop; delay slot nop
 1325  00001e38          	L54_LF2:
 1326  00001e38  8fa20000	lw	r2,0(r29)
 1327  00001e3c  8fdffff8	lw	r31,-8(r30)
 1328  00001e40  001ee820	add	r29,r0,r30
 1329  00001e44  8fdefffc	lw	r30,-4(r30)
 1330  00001e48  4be00000	jr	r31
 1331  00001e4c  54000000	nop
 1332  00001e50          	.endproc _dindex
 1333  00001e50          	.align 2
 1334  00001e50          	.proc _ditoa
 1335  00001e50          	.global _ditoa
 1336  00001e50          	_ditoa:
 1337                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1338  00001e50  afbefffc	sw	-4(r29),r30; push fp
 1339  00001e54  001df020	add	r30,r0,r29; fp = sp
 1340  00001e58  afbffff8	sw	-8(r29),r31; push ret addr
 1341  00001e5c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1342  00001e60  afa20000	sw	0(r29),r2
 1343  00001e64  afa30004	sw	4(r29),r3
 1344  00001e68  8fc10000	lw	r1,(r30)
 1345  00001e6c  68220000	slti	r2,r1,#0
 1346  00001e70  1040002c	beqz	r2,L60_LF2
 1347  00001e74  54000000	nop; delay slot nop
 1348  00001e78  8fc10004	lw	r1,4(r30)
 1349  00001e7c  20220001	addi	r2,r1,#1
 1350  00001e80  afc20004	sw	4(r30),r2
 1351  00001e84  2002002d	addi	r2,r0,(#0x2d)&0xff
 1352  00001e88  a0220000	sb	(r1),r2
 1353  00001e8c  8fc10000	lw	r1,(r30)
 1354  00001e90  00011022	sub	r2,r0,r1
 1355  00001e94  afc20000	sw	(r30),r2
 1356  00001e98  08000118	j	L61_LF2
 1357  00001e9c  54000000	nop; delay slot nop
 1358  00001ea0          	L60_LF2:
 1359  00001ea0  8fc10000	lw	r1,(r30)
 1360  00001ea4  64220000	snei	r2,r1,#0
 1361  00001ea8  14400020	bnez	r2,L62_LF2
 1362  00001eac  54000000	nop; delay slot nop
 1363  00001eb0  8fc10004	lw	r1,4(r30)
 1364  00001eb4  20220001	addi	r2,r1,#1
 1365  00001eb8  afc20004	sw	4(r30),r2
 1366  00001ebc  20020030	addi	r2,r0,(#0x30)&0xff
 1367  00001ec0  a0220000	sb	(r1),r2
 1368  00001ec4  080000ec	j	L61_LF2
 1369  00001ec8  54000000	nop; delay slot nop
 1370  00001ecc          	L62_LF2:
 1371  00001ecc  20010001	addi	r1,r0,#1
 1372  00001ed0  afc1fff4	sw	-12(r30),r1
 1373  00001ed4          	L64_LF2:
 1374  00001ed4  8fc1fff4	lw	r1,-12(r30)
 1375  00001ed8  8fc20000	lw	r2,(r30)
 1376  00001edc  0022082c	sle	r1,r1,r2
 1377  00001ee0  1420000c	bnez	r1,L66_LF2
 1378  00001ee4  54000000	nop; delay slot nop
 1379  00001ee8  08000024	j	L65_LF2
 1380  00001eec  54000000	nop; delay slot nop
 1381  00001ef0          	L67_LF2:
 1382  00001ef0          	L66_LF2:
 1383  00001ef0  8fc1fff4	lw	r1,-12(r30)
 1384  00001ef4  00011820	add	r3,r0,r1
 1385  00001ef8  50620002	slli	r2,r3,#0x2
 1386  00001efc  00411020	add	r2,r2,r1
 1387  00001f00  50410001	slli	r1,r2,#0x1
 1388  00001f04  afc1fff4	sw	-12(r30),r1
 1389  00001f08  0bffffc8	j	L64_LF2
 1390  00001f0c  54000000	nop; delay slot nop
 1391  00001f10          	L65_LF2:
 1392  00001f10  54000000	nop
 1393  00001f14          	L68_LF2:
 1394  00001f14  8fc1fff4	lw	r1,-12(r30)
 1395  00001f18  2002000a	addi	r2,r0,#10
 1396  00001f1c  00200035	movi2fp	f0,r1
 1397  00001f20  00400835	movi2fp	f1,r2
 1398  00001f24  0401000f	div	f0,f0,f1
 1399  00001f28  00000834	movfp2i	r1,f0
 1400  00001f2c  afc1fff4	sw	-12(r30),r1
 1401  00001f30  8fc10004	lw	r1,4(r30)
 1402  00001f34  20220001	addi	r2,r1,#1
 1403  00001f38  afc20004	sw	4(r30),r2
 1404  00001f3c  8fc20000	lw	r2,(r30)
 1405  00001f40  8fc3fff4	lw	r3,-12(r30)
 1406  00001f44  00400035	movi2fp	f0,r2
 1407  00001f48  00600835	movi2fp	f1,r3
 1408  00001f4c  0401000f	div	f0,f0,f1
 1409  00001f50  00001034	movfp2i	r2,f0
 1410  00001f54  00021820	add	r3,r0,r2
 1411  00001f58  20620030	addi	r2,r3,#48
 1412  00001f5c  a0220000	sb	(r1),r2
 1413  00001f60  8fc10000	lw	r1,(r30)
 1414  00001f64  8fc3fff4	lw	r3,-12(r30)
 1415  00001f68  00200035	movi2fp	f0,r1
 1416  00001f6c  00600835	movi2fp	f1,r3
 1417  00001f70  0401000f	div	f0,f0,f1
 1418  00001f74  00001034	movfp2i	r2,f0
 1419  00001f78  8fc3fff4	lw	r3,-12(r30)
 1420  00001f7c  00400035	movi2fp	f0,r2
 1421  00001f80  00600835	movi2fp	f1,r3
 1422  00001f84  0401000e	mult	f0,f0,f1
 1423  00001f88  00001034	movfp2i	r2,f0
 1424  00001f8c  00220822	sub	r1,r1,r2
 1425  00001f90  afc10000	sw	(r30),r1
 1426  00001f94          	L70_LF2:
 1427  00001f94  8fc1fff4	lw	r1,-12(r30)
 1428  00001f98  6c220001	sgti	r2,r1,#1
 1429  00001f9c  1440000c	bnez	r2,L71_LF2
 1430  00001fa0  54000000	nop; delay slot nop
 1431  00001fa4  0800000c	j	L61_LF2
 1432  00001fa8  54000000	nop; delay slot nop
 1433  00001fac          	L71_LF2:
 1434  00001fac  0bffff64	j	L68_LF2
 1435  00001fb0  54000000	nop; delay slot nop
 1436  00001fb4          	L69_LF2:
 1437  00001fb4          	L63_LF2:
 1438  00001fb4          	L61_LF2:
 1439  00001fb4  8fc10004	lw	r1,4(r30)
 1440  00001fb8  20020000	addi	r2,r0,(#0x0)&0xff
 1441  00001fbc  a0220000	sb	(r1),r2
 1442  00001fc0          	L59_LF2:
 1443  00001fc0  8fa20000	lw	r2,0(r29)
 1444  00001fc4  8fa30004	lw	r3,4(r29)
 1445  00001fc8  8fdffff8	lw	r31,-8(r30)
 1446  00001fcc  001ee820	add	r29,r0,r30
 1447  00001fd0  8fdefffc	lw	r30,-4(r30)
 1448  00001fd4  4be00000	jr	r31
 1449  00001fd8  54000000	nop
 1450  00001fdc          	.endproc _ditoa
 1451  00001fdc          	.align 2
 1452  00001fdc          	.proc _dstrtol
 1453  00001fdc          	.global _dstrtol
 1454  00001fdc          	_dstrtol:
 1455                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1456  00001fdc  afbefffc	sw	-4(r29),r30; push fp
 1457  00001fe0  001df020	add	r30,r0,r29; fp = sp
 1458  00001fe4  afbffff8	sw	-8(r29),r31; push ret addr
 1459  00001fe8  2fbd0020	subui	r29,r29,#32; alloc local storage
 1460  00001fec  afa20000	sw	0(r29),r2
 1461  00001ff0  20010000	addi	r1,r0,#0
 1462  00001ff4  afc1fff4	sw	-12(r30),r1
 1463  00001ff8          	L73_LF2:
 1464  00001ff8  8fc10000	lw	r1,(r30)
 1465  00001ffc  90220000	lbu	r2,(r1)
 1466  00002000  60410020	seqi	r1,r2,#32
 1467  00002004  14200034	bnez	r1,L75_LF2
 1468  00002008  54000000	nop; delay slot nop
 1469  0000200c  8fc10000	lw	r1,(r30)
 1470  00002010  90220000	lbu	r2,(r1)
 1471  00002014  60410009	seqi	r1,r2,#9
 1472  00002018  14200020	bnez	r1,L75_LF2
 1473  0000201c  54000000	nop; delay slot nop
 1474  00002020  8fc10000	lw	r1,(r30)
 1475  00002024  90220000	lbu	r2,(r1)
 1476  00002028  6041000a	seqi	r1,r2,#10
 1477  0000202c  1420000c	bnez	r1,L75_LF2
 1478  00002030  54000000	nop; delay slot nop
 1479  00002034  0800001c	j	L74_LF2
 1480  00002038  54000000	nop; delay slot nop
 1481  0000203c          	L75_LF2:
 1482  0000203c  8fc20000	lw	r2,(r30)
 1483  00002040  20410001	addi	r1,r2,#1
 1484  00002044  00011020	add	r2,r0,r1
 1485  00002048  afc20000	sw	(r30),r2
 1486  0000204c  0bffffa8	j	L73_LF2
 1487  00002050  54000000	nop; delay slot nop
 1488  00002054          	L74_LF2:
 1489  00002054  8fc10004	lw	r1,4(r30)
 1490  00002058  64220000	snei	r2,r1,#0
 1491  0000205c  10400010	beqz	r2,L76_LF2
 1492  00002060  54000000	nop; delay slot nop
 1493  00002064  8fc10004	lw	r1,4(r30)
 1494  00002068  8fc20000	lw	r2,(r30)
 1495  0000206c  ac220000	sw	(r1),r2
 1496  00002070          	L76_LF2:
 1497  00002070  8fc10000	lw	r1,(r30)
 1498  00002074  90220000	lbu	r2,(r1)
 1499  00002078  64410000	snei	r1,r2,#0
 1500  0000207c  14200010	bnez	r1,L77_LF2
 1501  00002080  54000000	nop; delay slot nop
 1502  00002084  8fc1fff4	lw	r1,-12(r30)
 1503  00002088  08000294	j	L72_LF2
 1504  0000208c  54000000	nop; delay slot nop
 1505  00002090          	L77_LF2:
 1506  00002090  8fc10000	lw	r1,(r30)
 1507  00002094  90220000	lbu	r2,(r1)
 1508  00002098  6041002d	seqi	r1,r2,#45
 1509  0000209c  10200024	beqz	r1,L78_LF2
 1510  000020a0  54000000	nop; delay slot nop
 1511  000020a4  2001ffff	addi	r1,r0,#-1
 1512  000020a8  afc1ffec	sw	-20(r30),r1
 1513  000020ac  8fc20000	lw	r2,(r30)
 1514  000020b0  20410001	addi	r1,r2,#1
 1515  000020b4  00011020	add	r2,r0,r1
 1516  000020b8  afc20000	sw	(r30),r2
 1517  000020bc  0800000c	j	L79_LF2
 1518  000020c0  54000000	nop; delay slot nop
 1519  000020c4          	L78_LF2:
 1520  000020c4  20010001	addi	r1,r0,#1
 1521  000020c8  afc1ffec	sw	-20(r30),r1
 1522  000020cc          	L79_LF2:
 1523  000020cc  8fc10008	lw	r1,8(r30)
 1524  000020d0  64220000	snei	r2,r1,#0
 1525  000020d4  14400090	bnez	r2,L80_LF2
 1526  000020d8  54000000	nop; delay slot nop
 1527  000020dc  8fc10000	lw	r1,(r30)
 1528  000020e0  90220000	lbu	r2,(r1)
 1529  000020e4  60410030	seqi	r1,r2,#48
 1530  000020e8  10200074	beqz	r1,L81_LF2
 1531  000020ec  54000000	nop; delay slot nop
 1532  000020f0  8fc20000	lw	r2,(r30)
 1533  000020f4  20410001	addi	r1,r2,#1
 1534  000020f8  00011020	add	r2,r0,r1
 1535  000020fc  afc20000	sw	(r30),r2
 1536  00002100  8fc10000	lw	r1,(r30)
 1537  00002104  90220000	lbu	r2,(r1)
 1538  00002108  60410078	seqi	r1,r2,#120
 1539  0000210c  14200020	bnez	r1,L83_LF2
 1540  00002110  54000000	nop; delay slot nop
 1541  00002114  8fc10000	lw	r1,(r30)
 1542  00002118  90220000	lbu	r2,(r1)
 1543  0000211c  60410058	seqi	r1,r2,#88
 1544  00002120  1420000c	bnez	r1,L83_LF2
 1545  00002124  54000000	nop; delay slot nop
 1546  00002128  08000024	j	L82_LF2
 1547  0000212c  54000000	nop; delay slot nop
 1548  00002130          	L83_LF2:
 1549  00002130  20010010	addi	r1,r0,#16
 1550  00002134  afc10008	sw	8(r30),r1
 1551  00002138  8fc20000	lw	r2,(r30)
 1552  0000213c  20410001	addi	r1,r2,#1
 1553  00002140  00011020	add	r2,r0,r1
 1554  00002144  afc20000	sw	(r30),r2
 1555  00002148  0800000c	j	L84_LF2
 1556  0000214c  54000000	nop; delay slot nop
 1557  00002150          	L82_LF2:
 1558  00002150  20010008	addi	r1,r0,#8
 1559  00002154  afc10008	sw	8(r30),r1
 1560  00002158          	L84_LF2:
 1561  00002158  0800000c	j	L80_LF2
 1562  0000215c  54000000	nop; delay slot nop
 1563  00002160          	L81_LF2:
 1564  00002160  2001000a	addi	r1,r0,#10
 1565  00002164  afc10008	sw	8(r30),r1
 1566  00002168          	L85_LF2:
 1567  00002168          	L80_LF2:
 1568  00002168  8fc10008	lw	r1,8(r30)
 1569  0000216c  70220000	slei	r2,r1,#0
 1570  00002170  1440001c	bnez	r2,L87_LF2
 1571  00002174  54000000	nop; delay slot nop
 1572  00002178  8fc10008	lw	r1,8(r30)
 1573  0000217c  6c220010	sgti	r2,r1,#16
 1574  00002180  1440000c	bnez	r2,L87_LF2
 1575  00002184  54000000	nop; delay slot nop
 1576  00002188  08000010	j	L86_LF2
 1577  0000218c  54000000	nop; delay slot nop
 1578  00002190          	L87_LF2:
 1579  00002190  8fc1fff4	lw	r1,-12(r30)
 1580  00002194  08000188	j	L72_LF2
 1581  00002198  54000000	nop; delay slot nop
 1582  0000219c          	L86_LF2:
 1583  0000219c  54000000	nop
 1584  000021a0          	L88_LF2:
 1585  000021a0  8fc10000	lw	r1,(r30)
 1586  000021a4  90220000	lbu	r2,(r1)
 1587  000021a8  6c41002f	sgtui	r1,r2,#47
 1588  000021ac  10200030	beqz	r1,L91_LF2
 1589  000021b0  54000000	nop; delay slot nop
 1590  000021b4  8fc10000	lw	r1,(r30)
 1591  000021b8  90220000	lbu	r2,(r1)
 1592  000021bc  70410039	sleui	r1,r2,#57
 1593  000021c0  1020001c	beqz	r1,L91_LF2
 1594  000021c4  54000000	nop; delay slot nop
 1595  000021c8  8fc10000	lw	r1,(r30)
 1596  000021cc  90220000	lbu	r2,(r1)
 1597  000021d0  2041ffd0	addi	r1,r2,#-48
 1598  000021d4  afc1fff0	sw	-16(r30),r1
 1599  000021d8  0800008c	j	L92_LF2
 1600  000021dc  54000000	nop; delay slot nop
 1601  000021e0          	L91_LF2:
 1602  000021e0  8fc10000	lw	r1,(r30)
 1603  000021e4  90220000	lbu	r2,(r1)
 1604  000021e8  6c410060	sgtui	r1,r2,#96
 1605  000021ec  10200030	beqz	r1,L93_LF2
 1606  000021f0  54000000	nop; delay slot nop
 1607  000021f4  8fc10000	lw	r1,(r30)
 1608  000021f8  90220000	lbu	r2,(r1)
 1609  000021fc  7041007a	sleui	r1,r2,#122
 1610  00002200  1020001c	beqz	r1,L93_LF2
 1611  00002204  54000000	nop; delay slot nop
 1612  00002208  8fc10000	lw	r1,(r30)
 1613  0000220c  90220000	lbu	r2,(r1)
 1614  00002210  2041ffa9	addi	r1,r2,#-87
 1615  00002214  afc1fff0	sw	-16(r30),r1
 1616  00002218  0800004c	j	L92_LF2
 1617  0000221c  54000000	nop; delay slot nop
 1618  00002220          	L93_LF2:
 1619  00002220  8fc10000	lw	r1,(r30)
 1620  00002224  90220000	lbu	r2,(r1)
 1621  00002228  6c410040	sgtui	r1,r2,#64
 1622  0000222c  10200030	beqz	r1,L95_LF2
 1623  00002230  54000000	nop; delay slot nop
 1624  00002234  8fc10000	lw	r1,(r30)
 1625  00002238  90220000	lbu	r2,(r1)
 1626  0000223c  7041005a	sleui	r1,r2,#90
 1627  00002240  1020001c	beqz	r1,L95_LF2
 1628  00002244  54000000	nop; delay slot nop
 1629  00002248  8fc10000	lw	r1,(r30)
 1630  0000224c  90220000	lbu	r2,(r1)
 1631  00002250  2041ffc9	addi	r1,r2,#-55
 1632  00002254  afc1fff0	sw	-16(r30),r1
 1633  00002258  0800000c	j	L92_LF2
 1634  0000225c  54000000	nop; delay slot nop
 1635  00002260          	L95_LF2:
 1636  00002260  200103e8	addi	r1,r0,#1000
 1637  00002264  afc1fff0	sw	-16(r30),r1
 1638  00002268          	L96_LF2:
 1639  00002268          	L94_LF2:
 1640  00002268          	L92_LF2:
 1641  00002268  8fc1fff0	lw	r1,-16(r30)
 1642  0000226c  8fc20008	lw	r2,8(r30)
 1643  00002270  0022082a	slt	r1,r1,r2
 1644  00002274  10200040	beqz	r1,L90_LF2
 1645  00002278  54000000	nop; delay slot nop
 1646  0000227c  8fc1fff4	lw	r1,-12(r30)
 1647  00002280  8fc20008	lw	r2,8(r30)
 1648  00002284  00200035	movi2fp	f0,r1
 1649  00002288  00400835	movi2fp	f1,r2
 1650  0000228c  0401000e	mult	f0,f0,f1
 1651  00002290  00000834	movfp2i	r1,f0
 1652  00002294  afc1fff4	sw	-12(r30),r1
 1653  00002298  8fc1fff4	lw	r1,-12(r30)
 1654  0000229c  8fc2fff0	lw	r2,-16(r30)
 1655  000022a0  00220820	add	r1,r1,r2
 1656  000022a4  afc1fff4	sw	-12(r30),r1
 1657  000022a8  8fc20000	lw	r2,(r30)
 1658  000022ac  20410001	addi	r1,r2,#1
 1659  000022b0  00011020	add	r2,r0,r1
 1660  000022b4  afc20000	sw	(r30),r2
 1661  000022b8          	L97_LF2:
 1662  000022b8          	L90_LF2:
 1663  000022b8  8fc1fff0	lw	r1,-16(r30)
 1664  000022bc  8fc20008	lw	r2,8(r30)
 1665  000022c0  0022082a	slt	r1,r1,r2
 1666  000022c4  1420000c	bnez	r1,L98_LF2
 1667  000022c8  54000000	nop; delay slot nop
 1668  000022cc  0800000c	j	L89_LF2
 1669  000022d0  54000000	nop; delay slot nop
 1670  000022d4          	L98_LF2:
 1671  000022d4  0bfffec8	j	L88_LF2
 1672  000022d8  54000000	nop; delay slot nop
 1673  000022dc          	L89_LF2:
 1674  000022dc  8fc10004	lw	r1,4(r30)
 1675  000022e0  64220000	snei	r2,r1,#0
 1676  000022e4  10400010	beqz	r2,L99_LF2
 1677  000022e8  54000000	nop; delay slot nop
 1678  000022ec  8fc10004	lw	r1,4(r30)
 1679  000022f0  8fc20000	lw	r2,(r30)
 1680  000022f4  ac220000	sw	(r1),r2
 1681  000022f8          	L99_LF2:
 1682  000022f8  8fc1fff4	lw	r1,-12(r30)
 1683  000022fc  8fc2ffec	lw	r2,-20(r30)
 1684  00002300  00200035	movi2fp	f0,r1
 1685  00002304  00400835	movi2fp	f1,r2
 1686  00002308  0401000e	mult	f0,f0,f1
 1687  0000230c  00000834	movfp2i	r1,f0
 1688  00002310  afc1fff4	sw	-12(r30),r1
 1689  00002314  8fc1fff4	lw	r1,-12(r30)
 1690  00002318  08000004	j	L72_LF2
 1691  0000231c  54000000	nop; delay slot nop
 1692  00002320          	L72_LF2:
 1693  00002320  8fa20000	lw	r2,0(r29)
 1694  00002324  8fdffff8	lw	r31,-8(r30)
 1695  00002328  001ee820	add	r29,r0,r30
 1696  0000232c  8fdefffc	lw	r30,-4(r30)
 1697  00002330  4be00000	jr	r31
 1698  00002334  54000000	nop
 1699  00002338          	.endproc _dstrtol
 1700  00002338          	.align 2
 1701  00002338          	.proc _bcopy
 1702  00002338          	.global _bcopy
 1703  00002338          	_bcopy:
 1704                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1705  00002338  afbefffc	sw	-4(r29),r30; push fp
 1706  0000233c  001df020	add	r30,r0,r29; fp = sp
 1707  00002340  afbffff8	sw	-8(r29),r31; push ret addr
 1708  00002344  2fbd0010	subui	r29,r29,#16; alloc local storage
 1709  00002348  afa20000	sw	0(r29),r2
 1710  0000234c  afa30004	sw	4(r29),r3
 1711  00002350  54000000	nop
 1712  00002354          	L101_LF2:
 1713  00002354  8fc10008	lw	r1,8(r30)
 1714  00002358  2022ffff	addi	r2,r1,#-1
 1715  0000235c  afc20008	sw	8(r30),r2
 1716  00002360  6c210000	sgti	r1,r1,#0
 1717  00002364  1420000c	bnez	r1,L103_LF2
 1718  00002368  54000000	nop; delay slot nop
 1719  0000236c  0800002c	j	L102_LF2
 1720  00002370  54000000	nop; delay slot nop
 1721  00002374          	L103_LF2:
 1722  00002374  8fc10004	lw	r1,4(r30)
 1723  00002378  20220001	addi	r2,r1,#1
 1724  0000237c  afc20004	sw	4(r30),r2
 1725  00002380  8fc20000	lw	r2,(r30)
 1726  00002384  20430001	addi	r3,r2,#1
 1727  00002388  afc30000	sw	(r30),r3
 1728  0000238c  80420000	lb	r2,(r2)
 1729  00002390  a0220000	sb	(r1),r2
 1730  00002394  0bffffbc	j	L101_LF2
 1731  00002398  54000000	nop; delay slot nop
 1732  0000239c          	L102_LF2:
 1733  0000239c          	L100_LF2:
 1734  0000239c  8fa20000	lw	r2,0(r29)
 1735  000023a0  8fa30004	lw	r3,4(r29)
 1736  000023a4  8fdffff8	lw	r31,-8(r30)
 1737  000023a8  001ee820	add	r29,r0,r30
 1738  000023ac  8fdefffc	lw	r30,-4(r30)
 1739  000023b0  4be00000	jr	r31
 1740  000023b4  54000000	nop
 1741  000023b8          	.endproc _bcopy
 1742  000023b8          	.align 2
 1743  000023b8          	.proc _bzero
 1744  000023b8          	.global _bzero
 1745  000023b8          	_bzero:
 1746                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1747  000023b8  afbefffc	sw	-4(r29),r30; push fp
 1748  000023bc  001df020	add	r30,r0,r29; fp = sp
 1749  000023c0  afbffff8	sw	-8(r29),r31; push ret addr
 1750  000023c4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1751  000023c8  afa20000	sw	0(r29),r2
 1752  000023cc  54000000	nop
 1753  000023d0          	L105_LF2:
 1754  000023d0  8fc10004	lw	r1,4(r30)
 1755  000023d4  2022ffff	addi	r2,r1,#-1
 1756  000023d8  afc20004	sw	4(r30),r2
 1757  000023dc  6c210000	sgti	r1,r1,#0
 1758  000023e0  1420000c	bnez	r1,L107_LF2
 1759  000023e4  54000000	nop; delay slot nop
 1760  000023e8  08000020	j	L106_LF2
 1761  000023ec  54000000	nop; delay slot nop
 1762  000023f0          	L107_LF2:
 1763  000023f0  8fc10000	lw	r1,(r30)
 1764  000023f4  20220001	addi	r2,r1,#1
 1765  000023f8  afc20000	sw	(r30),r2
 1766  000023fc  20020000	addi	r2,r0,(#0x0)&0xff
 1767  00002400  a0220000	sb	(r1),r2
 1768  00002404  0bffffc8	j	L105_LF2
 1769  00002408  54000000	nop; delay slot nop
 1770  0000240c          	L106_LF2:
 1771  0000240c          	L104_LF2:
 1772  0000240c  8fa20000	lw	r2,0(r29)
 1773  00002410  8fdffff8	lw	r31,-8(r30)
 1774  00002414  001ee820	add	r29,r0,r30
 1775  00002418  8fdefffc	lw	r30,-4(r30)
 1776  0000241c  4be00000	jr	r31
 1777  00002420  54000000	nop
 1778  00002424          	.endproc _bzero
 1779  00002424          	.align 2
 1780  00002424          	.proc _min
 1781  00002424          	.global _min
 1782  00002424          	_min:
 1783                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1784  00002424  afbefffc	sw	-4(r29),r30; push fp
 1785  00002428  001df020	add	r30,r0,r29; fp = sp
 1786  0000242c  afbffff8	sw	-8(r29),r31; push ret addr
 1787  00002430  2fbd0010	subui	r29,r29,#16; alloc local storage
 1788  00002434  afa20000	sw	0(r29),r2
 1789  00002438  afa30004	sw	4(r29),r3
 1790  0000243c  8fc10000	lw	r1,(r30)
 1791  00002440  8fc20004	lw	r2,4(r30)
 1792  00002444  0022182c	sle	r3,r1,r2
 1793  00002448  14600008	bnez	r3,L109_LF2
 1794  0000244c  54000000	nop; delay slot nop
 1795  00002450  8fc10004	lw	r1,4(r30)
 1796  00002454          	L109_LF2:
 1797  00002454  08000004	j	L108_LF2
 1798  00002458  54000000	nop; delay slot nop
 1799  0000245c          	L108_LF2:
 1800  0000245c  8fa20000	lw	r2,0(r29)
 1801  00002460  8fa30004	lw	r3,4(r29)
 1802  00002464  8fdffff8	lw	r31,-8(r30)
 1803  00002468  001ee820	add	r29,r0,r30
 1804  0000246c  8fdefffc	lw	r30,-4(r30)
 1805  00002470  4be00000	jr	r31
 1806  00002474  54000000	nop
 1807  00002478          	.endproc _min
 1808  00002478          	.align 2
 1809  00002478          	.proc _max
 1810  00002478          	.global _max
 1811  00002478          	_max:
 1812                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1813  00002478  afbefffc	sw	-4(r29),r30; push fp
 1814  0000247c  001df020	add	r30,r0,r29; fp = sp
 1815  00002480  afbffff8	sw	-8(r29),r31; push ret addr
 1816  00002484  2fbd0010	subui	r29,r29,#16; alloc local storage
 1817  00002488  afa20000	sw	0(r29),r2
 1818  0000248c  afa30004	sw	4(r29),r3
 1819  00002490  8fc10000	lw	r1,(r30)
 1820  00002494  8fc20004	lw	r2,4(r30)
 1821  00002498  0022182d	sge	r3,r1,r2
 1822  0000249c  14600008	bnez	r3,L111_LF2
 1823  000024a0  54000000	nop; delay slot nop
 1824  000024a4  8fc10004	lw	r1,4(r30)
 1825  000024a8          	L111_LF2:
 1826  000024a8  08000004	j	L110_LF2
 1827  000024ac  54000000	nop; delay slot nop
 1828  000024b0          	L110_LF2:
 1829  000024b0  8fa20000	lw	r2,0(r29)
 1830  000024b4  8fa30004	lw	r3,4(r29)
 1831  000024b8  8fdffff8	lw	r31,-8(r30)
 1832  000024bc  001ee820	add	r29,r0,r30
 1833  000024c0  8fdefffc	lw	r30,-4(r30)
 1834  000024c4  4be00000	jr	r31
 1835  000024c8  54000000	nop
 1836  000024cc          	.endproc _max
 1837                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1838                      ;;;
 1839                      ;;; Most of the traps are called in files from libtraps.
 1842  000024cc          	.align 2
 1843  000024cc          	.proc _exit
 1844  000024cc          	.global _exit
 1845  000024cc          	_exit:
 1846  000024cc  44000300	trap	#0x300
 1847  000024d0  4be00000	jr	r31
 1848  000024d4  54000000	nop
 1849  000024d8          	.endproc _exit
 1851                      ; for the benefit of gcc.
 1852  000024d8          	.proc ___main
 1853  000024d8          	.global ___main
 1854  000024d8          	___main:
 1855  000024d8  4be00000	jr	r31
 1856  000024dc  54000000	nop
 1857  000024e0          	.endproc ___main
 1858  000024e0          	.text
 1859  000024e0          	.global _etext
 1860  000024e0          	_etext:
 1861  000024e0          	.align 3
 1862  000024e0          	.data
 1863  000034ea          	.global _edata
 1864  000034ea          	_edata:
