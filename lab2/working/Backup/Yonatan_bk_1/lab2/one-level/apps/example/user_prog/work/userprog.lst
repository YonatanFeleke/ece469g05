 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 20480
    3                      ; Data size: 52
    4                      ; Text size: 3948
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x2000
    8                      ; Compiled by GCC
   10  00002000          	.align 2
   11  00002000          	LC0_LF0:
   12  00002000  48656c6c	.ascii "Hello World!\n\000"
   12  00002004  6f20576f	
   12  00002008  726c6421	
   12  0000200c  0a00    	
   13  0000200e          	.align 2
   14  00002010          	LC1_LF0:
   15  00002010  50494420	.ascii "PID obtained from User Program: %d\n\000"
   15  00002014  6f627461	
   15  00002018  696e6564	
   15  0000201c  2066726f	
   15  00002020  6d205573	
   15  00002024  65722050	
   15  00002028  726f6772	
   15  0000202c  616d3a20	
   15  00002030  25640a00	
   16  00002034          	.text
   17  00001000          	.align 2
   18  00001000          	.proc _main
   19  00001000          	.global _main
   20  00001000          	_main:
   21                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
   22  00001000  afbefffc	sw	-4(r29),r30; push fp
   23  00001004  001df020	add	r30,r0,r29; fp = sp
   24  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   25  0000100c  2fbd0008	subui	r29,r29,#8; alloc local storage
   26  00001010  0c000f50	jal	___main
   27  00001014  54000000	nop; not filled.
   28  00001018  23bdfff8	addi	r29,r29,#-8
   29  0000101c  3c020000	lhi	r2,((LC0_LF0)>>16)&0xffff
   30  00001020  24422000	addui	r2,r2,(LC0_LF0)&0xffff
   31  00001024  afa20000	sw	(r29),r2
   32  00001028  0c000078	jal	_Printf
   33  0000102c  54000000	nop; not filled.
   34  00001030  0c00007c	jal	_getpid
   35  00001034  54000000	nop; not filled.
   36  00001038  3c020000	lhi	r2,((LC1_LF0)>>16)&0xffff
   37  0000103c  24422010	addui	r2,r2,(LC1_LF0)&0xffff
   38  00001040  afa20000	sw	(r29),r2
   39  00001044  afa10004	sw	4(r29),r1
   40  00001048  0c000058	jal	_Printf
   41  0000104c  54000000	nop; not filled.
   42  00001050  23bd0008	addi	r29,r29,#8
   43  00001054  0c000f00	jal	_exit
   44  00001058  54000000	nop
   45  0000105c          	.endproc _main
   46                      ;;;
   47                      ;;; Stub functions for DLX traps.
   48                      ;;;
   49                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
   50                      ;;;
   51                      ;;; The traps such as Open and Close
   52                      ;;; (note the capital letters) are for use by user programs.  The traps
   53                      ;;; with names such as open and close (lower case) are for use by the OS.
   54                      ;;;
   57  0000105c          	.align 2
   59                      ;;; The following are the traps to be used by user-level programs
   60                      ;;;
   62  0000105c          	.align 2
   63  0000105c          	.proc _Open
   64  0000105c          	.global _Open
   65  0000105c          	_Open:
   66                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
   67                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
   68                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
   69  0000105c  44000213	trap	#0x213
   70  00001060  4be00000	jr	r31
   71  00001064  54000000	nop
   72  00001068          	.endproc _Open
   74  00001068          	.proc _Close
   75  00001068          	.global _Close
   76  00001068          	_Close:
   77  00001068  44000214	trap	#0x214
   78  0000106c  4be00000	jr	r31
   79  00001070  54000000	nop
   80  00001074          	.endproc _Close
   82  00001074          	.proc _Read
   83  00001074          	.global _Read
   84  00001074          	_Read:
   85  00001074  44000210	trap	#0x210
   86  00001078  4be00000	jr	r31
   87  0000107c  54000000	nop
   88  00001080          	.endproc _Read
   90  00001080          	.proc _Write
   91  00001080          	.global _Write
   92  00001080          	_Write:
   93  00001080  44000211	trap	#0x211
   94  00001084  4be00000	jr	r31
   95  00001088  54000000	nop
   96  0000108c          	.endproc _Write
   98  0000108c          	.proc _Lseek
   99  0000108c          	.global _Lseek
  100  0000108c          	_Lseek:
  101  0000108c  44000212	trap	#0x212
  102  00001090  4be00000	jr	r31
  103  00001094  54000000	nop
  104  00001098          	.endproc _Lseek
  106  00001098          	.proc _Putchar
  107  00001098          	.global _Putchar
  108  00001098          	_Putchar:
  109  00001098  44000280	trap	#0x280
  110  0000109c  4be00000	jr	r31
  111  000010a0  54000000	nop
  112  000010a4          	.endproc _Putchar
  114  000010a4          	.proc _Printf
  115  000010a4          	.global _Printf
  116  000010a4          	_Printf:
  117  000010a4  44000201	trap	#0x201
  118  000010a8  4be00000	jr	r31
  119  000010ac  54000000	nop
  120  000010b0          	.endproc _Printf
  122  000010b0          	.proc _getpid
  123  000010b0          	.global _getpid
  124  000010b0          	_getpid:
  125  000010b0  44000431	trap	#0x431
  126  000010b4  4be00000	jr	r31
  127  000010b8  54000000	nop
  128  000010bc          	.endproc _getpid
  130  000010bc          	.proc _process_create
  131  000010bc          	.global _process_create
  132  000010bc          	_process_create:
  133  000010bc  44000432	trap	#0x432
  134  000010c0  4be00000	jr	r31
  135  000010c4  54000000	nop
  136  000010c8          	.endproc _process_create
  138  000010c8          	.proc _shmget
  139  000010c8          	.global _shmget
  140  000010c8          	_shmget:
  141  000010c8  44000440	trap	#0x440
  142  000010cc  4be00000	jr	r31
  143  000010d0  54000000	nop
  144  000010d4          	.endproc _shmget
  146  000010d4          	.proc _shmat
  147  000010d4          	.global _shmat
  148  000010d4          	_shmat:
  149  000010d4  44000441	trap	#0x441
  150  000010d8  4be00000	jr	r31
  151  000010dc  54000000	nop
  152  000010e0          	.endproc _shmat
  154  000010e0          	.proc _sem_create
  155  000010e0          	.global _sem_create
  156  000010e0          	_sem_create:
  157  000010e0  44000450	trap	#0x450
  158  000010e4  4be00000	jr	r31
  159  000010e8  54000000	nop
  160  000010ec          	.endproc _sem_create
  162  000010ec          	.proc _sem_wait
  163  000010ec          	.global _sem_wait
  164  000010ec          	_sem_wait:
  165  000010ec  44000451	trap	#0x451
  166  000010f0  4be00000	jr	r31
  167  000010f4  54000000	nop
  168  000010f8          	.endproc _sem_wait
  170  000010f8          	.proc _sem_signal
  171  000010f8          	.global _sem_signal
  172  000010f8          	_sem_signal:
  173  000010f8  44000452	trap	#0x452
  174  000010fc  4be00000	jr	r31
  175  00001100  54000000	nop
  176  00001104          	.endproc _sem_signal
  178  00001104          	.proc _lock_create
  179  00001104          	.global _lock_create
  180  00001104          	_lock_create:
  181  00001104  44000453	trap	#0x453
  182  00001108  4be00000	jr	r31
  183  0000110c  54000000	nop
  184  00001110          	.endproc _lock_create
  186  00001110          	.proc _lock_acquire
  187  00001110          	.global _lock_acquire
  188  00001110          	_lock_acquire:
  189  00001110  44000454	trap	#0x454
  190  00001114  4be00000	jr	r31
  191  00001118  54000000	nop
  192  0000111c          	.endproc _lock_acquire
  194  0000111c          	.proc _lock_release
  195  0000111c          	.global _lock_release
  196  0000111c          	_lock_release:
  197  0000111c  44000455	trap	#0x455
  198  00001120  4be00000	jr	r31
  199  00001124  54000000	nop
  200  00001128          	.endproc _lock_release
  202  00001128          	.proc _cond_create
  203  00001128          	.global _cond_create
  204  00001128          	_cond_create:
  205  00001128  44000456	trap	#0x456
  206  0000112c  4be00000	jr	r31
  207  00001130  54000000	nop
  208  00001134          	.endproc _cond_create
  210  00001134          	.proc _cond_wait
  211  00001134          	.global _cond_wait
  212  00001134          	_cond_wait:
  213  00001134  44000457	trap	#0x457
  214  00001138  4be00000	jr	r31
  215  0000113c  54000000	nop
  216  00001140          	.endproc _cond_wait
  218  00001140          	.proc _cond_signal
  219  00001140          	.global _cond_signal
  220  00001140          	_cond_signal:
  221  00001140  44000458	trap	#0x458
  222  00001144  4be00000	jr	r31
  223  00001148  54000000	nop
  224  0000114c          	.endproc _cond_signal
  226  0000114c          	.proc _cond_broadcast
  227  0000114c          	.global _cond_broadcast
  228  0000114c          	_cond_broadcast:
  229  0000114c  44000459	trap	#0x459
  230  00001150  4be00000	jr	r31
  231  00001154  54000000	nop
  232  00001158          	.endproc _cond_broadcast
  234  00001158          	.proc _mbox_create
  235  00001158          	.global _mbox_create
  236  00001158          	_mbox_create:
  237  00001158  44000460	trap	#0x460
  238  0000115c  4be00000	jr	r31
  239  00001160  54000000	nop
  240  00001164          	.endproc _mbox_create
  242  00001164          	.proc _mbox_open
  243  00001164          	.global _mbox_open
  244  00001164          	_mbox_open:
  245  00001164  44000461	trap	#0x461
  246  00001168  4be00000	jr	r31
  247  0000116c  54000000	nop
  248  00001170          	.endproc _mbox_open
  250  00001170          	.proc _mbox_close
  251  00001170          	.global _mbox_close
  252  00001170          	_mbox_close:
  253  00001170  44000462	trap	#0x462
  254  00001174  4be00000	jr	r31
  255  00001178  54000000	nop
  256  0000117c          	.endproc _mbox_close
  258  0000117c          	.proc _mbox_send
  259  0000117c          	.global _mbox_send
  260  0000117c          	_mbox_send:
  261  0000117c  44000463	trap	#0x463
  262  00001180  4be00000	jr	r31
  263  00001184  54000000	nop
  264  00001188          	.endproc _mbox_send
  266  00001188          	.proc _mbox_recv
  267  00001188          	.global _mbox_recv
  268  00001188          	_mbox_recv:
  269  00001188  44000464	trap	#0x464
  270  0000118c  4be00000	jr	r31
  271  00001190  54000000	nop
  272  00001194          	.endproc _mbox_recv
  274  00001194          	.proc _sleep
  275  00001194          	.global _sleep
  276  00001194          	_sleep:
  277  00001194  44000465	trap	#0x465
  278  00001198  4be00000	jr	r31
  279  0000119c  54000000	nop
  280  000011a0          	.endproc _sleep
  282  000011a0          	.proc _yield
  283  000011a0          	.global _yield
  284  000011a0          	_yield:
  285  000011a0  44000466	trap	#0x466
  286  000011a4  4be00000	jr	r31
  287  000011a8  54000000	nop
  288  000011ac          	.endproc _yield
  291  000011ac          	.proc _Exit
  292  000011ac          	.global _Exit
  293  000011ac          	_Exit:
  294  000011ac  44000500	trap	#0x500
  295  000011b0  4be00000	jr	r31
  296  000011b4  54000000	nop
  297  000011b8          	.endproc _Exit
  300  000011b8          	.proc _malloc
  301  000011b8          	.global _malloc
  302  000011b8          	_malloc:
  303  000011b8  44000467	trap	#0x467
  304  000011bc  4be00000	jr	r31
  305  000011c0          	.endproc _malloc
  308  000011c0          	.proc _mfree
  309  000011c0          	.global _mfree
  310  000011c0          	_mfree:
  311  000011c0  44000468	trap	#0x468
  312  000011c4  4be00000	jr	r31
  313  000011c8          	.endproc _mfree
  314                      ; Compiled by GCC
  316  000011c8          	.align 2
  317  000011c8          	.proc _isspace
  318  000011c8          	.global _isspace
  319  000011c8          	_isspace:
  320                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  321  000011c8  afbefffc	sw	-4(r29),r30; push fp
  322  000011cc  001df020	add	r30,r0,r29; fp = sp
  323  000011d0  afbffff8	sw	-8(r29),r31; push ret addr
  324  000011d4  2fbd0018	subui	r29,r29,#24; alloc local storage
  325  000011d8  afa20000	sw	0(r29),r2
  326  000011dc  afa30004	sw	4(r29),r3
  327  000011e0  afa40008	sw	8(r29),r4
  328  000011e4  83c20003	lb	r2,3(r30)
  329  000011e8  20010000	addi	r1,r0,#0
  330  000011ec  304300ff	andi	r3,r2,#0x00ff
  331  000011f0  60640020	seqi	r4,r3,#32
  332  000011f4  1480002c	bnez	r4,L3_LF2
  333  000011f8  54000000	nop; delay slot nop
  334  000011fc  304300ff	andi	r3,r2,#0x00ff
  335  00001200  60640009	seqi	r4,r3,#9
  336  00001204  1480001c	bnez	r4,L3_LF2
  337  00001208  54000000	nop; delay slot nop
  338  0000120c  304300ff	andi	r3,r2,#0x00ff
  339  00001210  6064000a	seqi	r4,r3,#10
  340  00001214  1480000c	bnez	r4,L3_LF2
  341  00001218  54000000	nop; delay slot nop
  342  0000121c  08000008	j	L2_LF2
  343  00001220  54000000	nop; delay slot nop
  344  00001224          	L3_LF2:
  345  00001224  20010001	addi	r1,r0,#1
  346  00001228          	L2_LF2:
  347  00001228  08000004	j	L1_LF2
  348  0000122c  54000000	nop; delay slot nop
  349  00001230          	L1_LF2:
  350  00001230  8fa20000	lw	r2,0(r29)
  351  00001234  8fa30004	lw	r3,4(r29)
  352  00001238  8fa40008	lw	r4,8(r29)
  353  0000123c  8fdffff8	lw	r31,-8(r30)
  354  00001240  001ee820	add	r29,r0,r30
  355  00001244  8fdefffc	lw	r30,-4(r30)
  356  00001248  4be00000	jr	r31
  357  0000124c  54000000	nop
  358  00001250          	.endproc _isspace
  359  00001250          	.align 2
  360  00001250          	.proc _isxdigit
  361  00001250          	.global _isxdigit
  362  00001250          	_isxdigit:
  363                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  364  00001250  afbefffc	sw	-4(r29),r30; push fp
  365  00001254  001df020	add	r30,r0,r29; fp = sp
  366  00001258  afbffff8	sw	-8(r29),r31; push ret addr
  367  0000125c  2fbd0018	subui	r29,r29,#24; alloc local storage
  368  00001260  afa20000	sw	0(r29),r2
  369  00001264  afa30004	sw	4(r29),r3
  370  00001268  afa40008	sw	8(r29),r4
  371  0000126c  83c20003	lb	r2,3(r30)
  372  00001270  20010000	addi	r1,r0,#0
  373  00001274  304300ff	andi	r3,r2,#0x00ff
  374  00001278  6c64002f	sgtui	r4,r3,#47
  375  0000127c  1080001c	beqz	r4,L7_LF2
  376  00001280  54000000	nop; delay slot nop
  377  00001284  304300ff	andi	r3,r2,#0x00ff
  378  00001288  70640039	sleui	r4,r3,#57
  379  0000128c  1480005c	bnez	r4,L6_LF2
  380  00001290  54000000	nop; delay slot nop
  381  00001294  08000004	j	L7_LF2
  382  00001298  54000000	nop; delay slot nop
  383  0000129c          	L7_LF2:
  384  0000129c  304300ff	andi	r3,r2,#0x00ff
  385  000012a0  6c640060	sgtui	r4,r3,#96
  386  000012a4  1080001c	beqz	r4,L8_LF2
  387  000012a8  54000000	nop; delay slot nop
  388  000012ac  304300ff	andi	r3,r2,#0x00ff
  389  000012b0  70640066	sleui	r4,r3,#102
  390  000012b4  14800034	bnez	r4,L6_LF2
  391  000012b8  54000000	nop; delay slot nop
  392  000012bc  08000004	j	L8_LF2
  393  000012c0  54000000	nop; delay slot nop
  394  000012c4          	L8_LF2:
  395  000012c4  304300ff	andi	r3,r2,#0x00ff
  396  000012c8  6c640040	sgtui	r4,r3,#64
  397  000012cc  10800020	beqz	r4,L5_LF2
  398  000012d0  54000000	nop; delay slot nop
  399  000012d4  304300ff	andi	r3,r2,#0x00ff
  400  000012d8  70640041	sleui	r4,r3,#65
  401  000012dc  1480000c	bnez	r4,L6_LF2
  402  000012e0  54000000	nop; delay slot nop
  403  000012e4  08000008	j	L5_LF2
  404  000012e8  54000000	nop; delay slot nop
  405  000012ec          	L6_LF2:
  406  000012ec  20010001	addi	r1,r0,#1
  407  000012f0          	L5_LF2:
  408  000012f0  08000004	j	L4_LF2
  409  000012f4  54000000	nop; delay slot nop
  410  000012f8          	L4_LF2:
  411  000012f8  8fa20000	lw	r2,0(r29)
  412  000012fc  8fa30004	lw	r3,4(r29)
  413  00001300  8fa40008	lw	r4,8(r29)
  414  00001304  8fdffff8	lw	r31,-8(r30)
  415  00001308  001ee820	add	r29,r0,r30
  416  0000130c  8fdefffc	lw	r30,-4(r30)
  417  00001310  4be00000	jr	r31
  418  00001314  54000000	nop
  419  00001318          	.endproc _isxdigit
  420  00001318          	.align 2
  421  00001318          	.proc _dstrcpy
  422  00001318          	.global _dstrcpy
  423  00001318          	_dstrcpy:
  424                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  425  00001318  afbefffc	sw	-4(r29),r30; push fp
  426  0000131c  001df020	add	r30,r0,r29; fp = sp
  427  00001320  afbffff8	sw	-8(r29),r31; push ret addr
  428  00001324  2fbd0018	subui	r29,r29,#24; alloc local storage
  429  00001328  afa20000	sw	0(r29),r2
  430  0000132c  afa30004	sw	4(r29),r3
  431  00001330  8fc10000	lw	r1,(r30)
  432  00001334  afc1fff4	sw	-12(r30),r1
  433  00001338          	L10_LF2:
  434  00001338  8fc10000	lw	r1,(r30)
  435  0000133c  20220001	addi	r2,r1,#1
  436  00001340  afc20000	sw	(r30),r2
  437  00001344  8fc20004	lw	r2,4(r30)
  438  00001348  20430001	addi	r3,r2,#1
  439  0000134c  afc30004	sw	4(r30),r3
  440  00001350  80420000	lb	r2,(r2)
  441  00001354  a0220000	sb	(r1),r2
  442  00001358  a3c2fff3	sb	-13(r30),r2
  443  0000135c          	L12_LF2:
  444  0000135c  93c1fff3	lbu	r1,-13(r30)
  445  00001360  64220000	snei	r2,r1,#0
  446  00001364  1440000c	bnez	r2,L13_LF2
  447  00001368  54000000	nop; delay slot nop
  448  0000136c  0800000c	j	L11_LF2
  449  00001370  54000000	nop; delay slot nop
  450  00001374          	L13_LF2:
  451  00001374  0bffffc0	j	L10_LF2
  452  00001378  54000000	nop; delay slot nop
  453  0000137c          	L11_LF2:
  454  0000137c  8fc1fff4	lw	r1,-12(r30)
  455  00001380  08000004	j	L9_LF2
  456  00001384  54000000	nop; delay slot nop
  457  00001388          	L9_LF2:
  458  00001388  8fa20000	lw	r2,0(r29)
  459  0000138c  8fa30004	lw	r3,4(r29)
  460  00001390  8fdffff8	lw	r31,-8(r30)
  461  00001394  001ee820	add	r29,r0,r30
  462  00001398  8fdefffc	lw	r30,-4(r30)
  463  0000139c  4be00000	jr	r31
  464  000013a0  54000000	nop
  465  000013a4          	.endproc _dstrcpy
  466  000013a4          	.align 2
  467  000013a4          	.proc _dstrncpy
  468  000013a4          	.global _dstrncpy
  469  000013a4          	_dstrncpy:
  470                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  471  000013a4  afbefffc	sw	-4(r29),r30; push fp
  472  000013a8  001df020	add	r30,r0,r29; fp = sp
  473  000013ac  afbffff8	sw	-8(r29),r31; push ret addr
  474  000013b0  2fbd0018	subui	r29,r29,#24; alloc local storage
  475  000013b4  afa20000	sw	0(r29),r2
  476  000013b8  afa30004	sw	4(r29),r3
  477  000013bc  8fc10000	lw	r1,(r30)
  478  000013c0  afc1fff4	sw	-12(r30),r1
  479  000013c4          	L15_LF2:
  480  000013c4  8fc10008	lw	r1,8(r30)
  481  000013c8  2022ffff	addi	r2,r1,#-1
  482  000013cc  afc20008	sw	8(r30),r2
  483  000013d0  70210000	slei	r1,r1,#0
  484  000013d4  1020000c	beqz	r1,L18_LF2
  485  000013d8  54000000	nop; delay slot nop
  486  000013dc  08000048	j	L16_LF2
  487  000013e0  54000000	nop; delay slot nop
  488  000013e4          	L18_LF2:
  489  000013e4  8fc10000	lw	r1,(r30)
  490  000013e8  20220001	addi	r2,r1,#1
  491  000013ec  afc20000	sw	(r30),r2
  492  000013f0  8fc20004	lw	r2,4(r30)
  493  000013f4  20430001	addi	r3,r2,#1
  494  000013f8  afc30004	sw	4(r30),r3
  495  000013fc  80420000	lb	r2,(r2)
  496  00001400  a0220000	sb	(r1),r2
  497  00001404  a3c2fff3	sb	-13(r30),r2
  498  00001408          	L17_LF2:
  499  00001408  93c1fff3	lbu	r1,-13(r30)
  500  0000140c  64220000	snei	r2,r1,#0
  501  00001410  1440000c	bnez	r2,L19_LF2
  502  00001414  54000000	nop; delay slot nop
  503  00001418  0800000c	j	L16_LF2
  504  0000141c  54000000	nop; delay slot nop
  505  00001420          	L19_LF2:
  506  00001420  0bffffa0	j	L15_LF2
  507  00001424  54000000	nop; delay slot nop
  508  00001428          	L16_LF2:
  509  00001428  8fc1fff4	lw	r1,-12(r30)
  510  0000142c  08000004	j	L14_LF2
  511  00001430  54000000	nop; delay slot nop
  512  00001434          	L14_LF2:
  513  00001434  8fa20000	lw	r2,0(r29)
  514  00001438  8fa30004	lw	r3,4(r29)
  515  0000143c  8fdffff8	lw	r31,-8(r30)
  516  00001440  001ee820	add	r29,r0,r30
  517  00001444  8fdefffc	lw	r30,-4(r30)
  518  00001448  4be00000	jr	r31
  519  0000144c  54000000	nop
  520  00001450          	.endproc _dstrncpy
  521  00001450          	.align 2
  522  00001450          	.proc _dstrcat
  523  00001450          	.global _dstrcat
  524  00001450          	_dstrcat:
  525                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  526  00001450  afbefffc	sw	-4(r29),r30; push fp
  527  00001454  001df020	add	r30,r0,r29; fp = sp
  528  00001458  afbffff8	sw	-8(r29),r31; push ret addr
  529  0000145c  2fbd0018	subui	r29,r29,#24; alloc local storage
  530  00001460  afa20000	sw	0(r29),r2
  531  00001464  8fc10000	lw	r1,(r30)
  532  00001468  afc1fff4	sw	-12(r30),r1
  533  0000146c          	L21_LF2:
  534  0000146c  8fc10000	lw	r1,(r30)
  535  00001470  90220000	lbu	r2,(r1)
  536  00001474  64410000	snei	r1,r2,#0
  537  00001478  1420000c	bnez	r1,L23_LF2
  538  0000147c  54000000	nop; delay slot nop
  539  00001480  0800001c	j	L22_LF2
  540  00001484  54000000	nop; delay slot nop
  541  00001488          	L23_LF2:
  542  00001488  8fc20000	lw	r2,(r30)
  543  0000148c  20410001	addi	r1,r2,#1
  544  00001490  00011020	add	r2,r0,r1
  545  00001494  afc20000	sw	(r30),r2
  546  00001498  0bffffd0	j	L21_LF2
  547  0000149c  54000000	nop; delay slot nop
  548  000014a0          	L22_LF2:
  549  000014a0  23bdfff8	addi	r29,r29,#-8
  550  000014a4  001d0820	add	r1,r0,r29
  551  000014a8  8fc20000	lw	r2,(r30)
  552  000014ac  ac220000	sw	(r1),r2
  553  000014b0  8fc20004	lw	r2,4(r30)
  554  000014b4  ac220004	sw	4(r1),r2
  555  000014b8  0ffffe5c	jal	_dstrcpy
  556  000014bc  54000000	nop; delay slot nop
  557  000014c0  23bd0008	addi	r29,r29,#8
  558  000014c4  8fc1fff4	lw	r1,-12(r30)
  559  000014c8  08000004	j	L20_LF2
  560  000014cc  54000000	nop; delay slot nop
  561  000014d0          	L20_LF2:
  562  000014d0  8fa20000	lw	r2,0(r29)
  563  000014d4  8fdffff8	lw	r31,-8(r30)
  564  000014d8  001ee820	add	r29,r0,r30
  565  000014dc  8fdefffc	lw	r30,-4(r30)
  566  000014e0  4be00000	jr	r31
  567  000014e4  54000000	nop
  568  000014e8          	.endproc _dstrcat
  569  000014e8          	.align 2
  570  000014e8          	.proc _dstrncmp
  571  000014e8          	.global _dstrncmp
  572  000014e8          	_dstrncmp:
  573                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  574  000014e8  afbefffc	sw	-4(r29),r30; push fp
  575  000014ec  001df020	add	r30,r0,r29; fp = sp
  576  000014f0  afbffff8	sw	-8(r29),r31; push ret addr
  577  000014f4  2fbd0018	subui	r29,r29,#24; alloc local storage
  578  000014f8  afa20000	sw	0(r29),r2
  579  000014fc  afa30004	sw	4(r29),r3
  580  00001500  54000000	nop
  581  00001504  20010000	addi	r1,r0,#0
  582  00001508  afc1fff4	sw	-12(r30),r1
  583  0000150c          	L25_LF2:
  584  0000150c  8fc1fff4	lw	r1,-12(r30)
  585  00001510  8fc20008	lw	r2,8(r30)
  586  00001514  0022082a	slt	r1,r1,r2
  587  00001518  1420000c	bnez	r1,L28_LF2
  588  0000151c  54000000	nop; delay slot nop
  589  00001520  08000088	j	L26_LF2
  590  00001524  54000000	nop; delay slot nop
  591  00001528          	L28_LF2:
  592  00001528  8fc10004	lw	r1,4(r30)
  593  0000152c  90220000	lbu	r2,(r1)
  594  00001530  64410000	snei	r1,r2,#0
  595  00001534  14200018	bnez	r1,L29_LF2
  596  00001538  54000000	nop; delay slot nop
  597  0000153c  20010000	addi	r1,r0,#0
  598  00001540  080000d8	j	L24_LF2
  599  00001544  54000000	nop; delay slot nop
  600  00001548  08000028	j	L30_LF2
  601  0000154c  54000000	nop; delay slot nop
  602  00001550          	L29_LF2:
  603  00001550  8fc10000	lw	r1,(r30)
  604  00001554  8fc20004	lw	r2,4(r30)
  605  00001558  90210000	lbu	r1,(r1)
  606  0000155c  90420000	lbu	r2,(r2)
  607  00001560  00220829	sne	r1,r1,r2
  608  00001564  1020000c	beqz	r1,L30_LF2
  609  00001568  54000000	nop; delay slot nop
  610  0000156c  0800003c	j	L26_LF2
  611  00001570  54000000	nop; delay slot nop
  612  00001574          	L31_LF2:
  613  00001574          	L30_LF2:
  614  00001574  8fc20000	lw	r2,(r30)
  615  00001578  20410001	addi	r1,r2,#1
  616  0000157c  00011020	add	r2,r0,r1
  617  00001580  afc20000	sw	(r30),r2
  618  00001584  8fc20004	lw	r2,4(r30)
  619  00001588  20410001	addi	r1,r2,#1
  620  0000158c  00011020	add	r2,r0,r1
  621  00001590  afc20004	sw	4(r30),r2
  622  00001594          	L27_LF2:
  623  00001594  8fc2fff4	lw	r2,-12(r30)
  624  00001598  20410001	addi	r1,r2,#1
  625  0000159c  00011020	add	r2,r0,r1
  626  000015a0  afc2fff4	sw	-12(r30),r2
  627  000015a4  0bffff64	j	L25_LF2
  628  000015a8  54000000	nop; delay slot nop
  629  000015ac          	L26_LF2:
  630  000015ac  8fc1fff4	lw	r1,-12(r30)
  631  000015b0  8fc20008	lw	r2,8(r30)
  632  000015b4  00220828	seq	r1,r1,r2
  633  000015b8  10200018	beqz	r1,L32_LF2
  634  000015bc  54000000	nop; delay slot nop
  635  000015c0  20010000	addi	r1,r0,#0
  636  000015c4  08000054	j	L24_LF2
  637  000015c8  54000000	nop; delay slot nop
  638  000015cc  0800004c	j	L33_LF2
  639  000015d0  54000000	nop; delay slot nop
  640  000015d4          	L32_LF2:
  641  000015d4  8fc20000	lw	r2,(r30)
  642  000015d8  90410000	lbu	r1,(r2)
  643  000015dc  8fc20004	lw	r2,4(r30)
  644  000015e0  90430000	lbu	r3,(r2)
  645  000015e4  00230822	sub	r1,r1,r3
  646  000015e8  74220000	sgei	r2,r1,#0
  647  000015ec  10400020	beqz	r2,L34_LF2
  648  000015f0  54000000	nop; delay slot nop
  649  000015f4  8fc10000	lw	r1,(r30)
  650  000015f8  8fc20004	lw	r2,4(r30)
  651  000015fc  90210000	lbu	r1,(r1)
  652  00001600  90420000	lbu	r2,(r2)
  653  00001604  00220829	sne	r1,r1,r2
  654  00001608  08000008	j	L35_LF2
  655  0000160c  54000000	nop; delay slot nop
  656  00001610          	L34_LF2:
  657  00001610  2001ffff	addi	r1,r0,#-1
  658  00001614          	L35_LF2:
  659  00001614  08000004	j	L24_LF2
  660  00001618  54000000	nop; delay slot nop
  661  0000161c          	L33_LF2:
  662  0000161c          	L24_LF2:
  663  0000161c  8fa20000	lw	r2,0(r29)
  664  00001620  8fa30004	lw	r3,4(r29)
  665  00001624  8fdffff8	lw	r31,-8(r30)
  666  00001628  001ee820	add	r29,r0,r30
  667  0000162c  8fdefffc	lw	r30,-4(r30)
  668  00001630  4be00000	jr	r31
  669  00001634  54000000	nop
  670  00001638          	.endproc _dstrncmp
  671  00001638          	.align 2
  672  00001638          	.proc _dstrlen
  673  00001638          	.global _dstrlen
  674  00001638          	_dstrlen:
  675                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  676  00001638  afbefffc	sw	-4(r29),r30; push fp
  677  0000163c  001df020	add	r30,r0,r29; fp = sp
  678  00001640  afbffff8	sw	-8(r29),r31; push ret addr
  679  00001644  2fbd0018	subui	r29,r29,#24; alloc local storage
  680  00001648  afa20000	sw	0(r29),r2
  681  0000164c  20010000	addi	r1,r0,#0
  682  00001650  afc1fff4	sw	-12(r30),r1
  683  00001654          	L37_LF2:
  684  00001654  8fc10000	lw	r1,(r30)
  685  00001658  20220001	addi	r2,r1,#1
  686  0000165c  afc20000	sw	(r30),r2
  687  00001660  90210000	lbu	r1,(r1)
  688  00001664  64220000	snei	r2,r1,#0
  689  00001668  1440000c	bnez	r2,L39_LF2
  690  0000166c  54000000	nop; delay slot nop
  691  00001670  0800001c	j	L38_LF2
  692  00001674  54000000	nop; delay slot nop
  693  00001678          	L39_LF2:
  694  00001678  8fc2fff4	lw	r2,-12(r30)
  695  0000167c  20410001	addi	r1,r2,#1
  696  00001680  00011020	add	r2,r0,r1
  697  00001684  afc2fff4	sw	-12(r30),r2
  698  00001688  0bffffc8	j	L37_LF2
  699  0000168c  54000000	nop; delay slot nop
  700  00001690          	L38_LF2:
  701  00001690  8fc1fff4	lw	r1,-12(r30)
  702  00001694  08000004	j	L36_LF2
  703  00001698  54000000	nop; delay slot nop
  704  0000169c          	L36_LF2:
  705  0000169c  8fa20000	lw	r2,0(r29)
  706  000016a0  8fdffff8	lw	r31,-8(r30)
  707  000016a4  001ee820	add	r29,r0,r30
  708  000016a8  8fdefffc	lw	r30,-4(r30)
  709  000016ac  4be00000	jr	r31
  710  000016b0  54000000	nop
  711  000016b4          	.endproc _dstrlen
  712  000016b4          	.align 2
  713  000016b4          	.proc _dstrstr
  714  000016b4          	.global _dstrstr
  715  000016b4          	_dstrstr:
  716                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  717  000016b4  afbefffc	sw	-4(r29),r30; push fp
  718  000016b8  001df020	add	r30,r0,r29; fp = sp
  719  000016bc  afbffff8	sw	-8(r29),r31; push ret addr
  720  000016c0  2fbd0018	subui	r29,r29,#24; alloc local storage
  721  000016c4  afa20000	sw	0(r29),r2
  722  000016c8  23bdfff8	addi	r29,r29,#-8
  723  000016cc  001d0820	add	r1,r0,r29
  724  000016d0  8fc20004	lw	r2,4(r30)
  725  000016d4  ac220000	sw	(r1),r2
  726  000016d8  0fffff5c	jal	_dstrlen
  727  000016dc  54000000	nop; delay slot nop
  728  000016e0  23bd0008	addi	r29,r29,#8
  729  000016e4  afc1fff4	sw	-12(r30),r1
  730  000016e8          	L41_LF2:
  731  000016e8  8fc10000	lw	r1,(r30)
  732  000016ec  90220000	lbu	r2,(r1)
  733  000016f0  64410000	snei	r1,r2,#0
  734  000016f4  1420000c	bnez	r1,L43_LF2
  735  000016f8  54000000	nop; delay slot nop
  736  000016fc  08000060	j	L42_LF2
  737  00001700  54000000	nop; delay slot nop
  738  00001704          	L43_LF2:
  739  00001704  23bdfff0	addi	r29,r29,#-16
  740  00001708  001d0820	add	r1,r0,r29
  741  0000170c  8fc20000	lw	r2,(r30)
  742  00001710  ac220000	sw	(r1),r2
  743  00001714  8fc20004	lw	r2,4(r30)
  744  00001718  ac220004	sw	4(r1),r2
  745  0000171c  8fc2fff4	lw	r2,-12(r30)
  746  00001720  ac220008	sw	8(r1),r2
  747  00001724  0ffffdc0	jal	_dstrncmp
  748  00001728  54000000	nop; delay slot nop
  749  0000172c  23bd0010	addi	r29,r29,#16
  750  00001730  64220000	snei	r2,r1,#0
  751  00001734  14400010	bnez	r2,L44_LF2
  752  00001738  54000000	nop; delay slot nop
  753  0000173c  8fc10000	lw	r1,(r30)
  754  00001740  08000028	j	L40_LF2
  755  00001744  54000000	nop; delay slot nop
  756  00001748          	L44_LF2:
  757  00001748  8fc20000	lw	r2,(r30)
  758  0000174c  20410001	addi	r1,r2,#1
  759  00001750  00011020	add	r2,r0,r1
  760  00001754  afc20000	sw	(r30),r2
  761  00001758  0bffff8c	j	L41_LF2
  762  0000175c  54000000	nop; delay slot nop
  763  00001760          	L42_LF2:
  764  00001760  20010000	addi	r1,r0,#0
  765  00001764  08000004	j	L40_LF2
  766  00001768  54000000	nop; delay slot nop
  767  0000176c          	L40_LF2:
  768  0000176c  8fa20000	lw	r2,0(r29)
  769  00001770  8fdffff8	lw	r31,-8(r30)
  770  00001774  001ee820	add	r29,r0,r30
  771  00001778  8fdefffc	lw	r30,-4(r30)
  772  0000177c  4be00000	jr	r31
  773  00001780  54000000	nop
  774  00001784          	.endproc _dstrstr
  775  00001784          	.align 2
  776  00001784          	.proc _dmindex
  777  00001784          	.global _dmindex
  778  00001784          	_dmindex:
  779                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  780  00001784  afbefffc	sw	-4(r29),r30; push fp
  781  00001788  001df020	add	r30,r0,r29; fp = sp
  782  0000178c  afbffff8	sw	-8(r29),r31; push ret addr
  783  00001790  2fbd0018	subui	r29,r29,#24; alloc local storage
  784  00001794  afa20000	sw	0(r29),r2
  785  00001798  54000000	nop
  786  0000179c          	L46_LF2:
  787  0000179c  8fc10000	lw	r1,(r30)
  788  000017a0  90220000	lbu	r2,(r1)
  789  000017a4  64410000	snei	r1,r2,#0
  790  000017a8  1420000c	bnez	r1,L48_LF2
  791  000017ac  54000000	nop; delay slot nop
  792  000017b0  08000070	j	L47_LF2
  793  000017b4  54000000	nop; delay slot nop
  794  000017b8          	L48_LF2:
  795  000017b8  8fc10004	lw	r1,4(r30)
  796  000017bc  afc1fff4	sw	-12(r30),r1
  797  000017c0          	L49_LF2:
  798  000017c0  8fc1fff4	lw	r1,-12(r30)
  799  000017c4  90220000	lbu	r2,(r1)
  800  000017c8  64410000	snei	r1,r2,#0
  801  000017cc  1420000c	bnez	r1,L52_LF2
  802  000017d0  54000000	nop; delay slot nop
  803  000017d4  08000044	j	L50_LF2
  804  000017d8  54000000	nop; delay slot nop
  805  000017dc          	L52_LF2:
  806  000017dc  8fc10000	lw	r1,(r30)
  807  000017e0  8fc2fff4	lw	r2,-12(r30)
  808  000017e4  90210000	lbu	r1,(r1)
  809  000017e8  90420000	lbu	r2,(r2)
  810  000017ec  00220828	seq	r1,r1,r2
  811  000017f0  10200010	beqz	r1,L51_LF2
  812  000017f4  54000000	nop; delay slot nop
  813  000017f8  8fc10000	lw	r1,(r30)
  814  000017fc  08000030	j	L45_LF2
  815  00001800  54000000	nop; delay slot nop
  816  00001804          	L53_LF2:
  817  00001804          	L51_LF2:
  818  00001804  8fc2fff4	lw	r2,-12(r30)
  819  00001808  20410001	addi	r1,r2,#1
  820  0000180c  00011020	add	r2,r0,r1
  821  00001810  afc2fff4	sw	-12(r30),r2
  822  00001814  0bffffa8	j	L49_LF2
  823  00001818  54000000	nop; delay slot nop
  824  0000181c          	L50_LF2:
  825  0000181c  0bffff7c	j	L46_LF2
  826  00001820  54000000	nop; delay slot nop
  827  00001824          	L47_LF2:
  828  00001824  20010000	addi	r1,r0,#0
  829  00001828  08000004	j	L45_LF2
  830  0000182c  54000000	nop; delay slot nop
  831  00001830          	L45_LF2:
  832  00001830  8fa20000	lw	r2,0(r29)
  833  00001834  8fdffff8	lw	r31,-8(r30)
  834  00001838  001ee820	add	r29,r0,r30
  835  0000183c  8fdefffc	lw	r30,-4(r30)
  836  00001840  4be00000	jr	r31
  837  00001844  54000000	nop
  838  00001848          	.endproc _dmindex
  839  00001848          	.align 2
  840  00001848          	.proc _dindex
  841  00001848          	.global _dindex
  842  00001848          	_dindex:
  843                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  844  00001848  afbefffc	sw	-4(r29),r30; push fp
  845  0000184c  001df020	add	r30,r0,r29; fp = sp
  846  00001850  afbffff8	sw	-8(r29),r31; push ret addr
  847  00001854  2fbd0010	subui	r29,r29,#16; alloc local storage
  848  00001858  afa20000	sw	0(r29),r2
  849  0000185c  54000000	nop
  850  00001860          	L55_LF2:
  851  00001860  8fc10000	lw	r1,(r30)
  852  00001864  90220000	lbu	r2,(r1)
  853  00001868  64410000	snei	r1,r2,#0
  854  0000186c  1420000c	bnez	r1,L57_LF2
  855  00001870  54000000	nop; delay slot nop
  856  00001874  08000040	j	L56_LF2
  857  00001878  54000000	nop; delay slot nop
  858  0000187c          	L57_LF2:
  859  0000187c  8fc10000	lw	r1,(r30)
  860  00001880  90220000	lbu	r2,(r1)
  861  00001884  8fc10004	lw	r1,4(r30)
  862  00001888  00411028	seq	r2,r2,r1
  863  0000188c  10400010	beqz	r2,L58_LF2
  864  00001890  54000000	nop; delay slot nop
  865  00001894  8fc10000	lw	r1,(r30)
  866  00001898  08000028	j	L54_LF2
  867  0000189c  54000000	nop; delay slot nop
  868  000018a0          	L58_LF2:
  869  000018a0  8fc20000	lw	r2,(r30)
  870  000018a4  20410001	addi	r1,r2,#1
  871  000018a8  00011020	add	r2,r0,r1
  872  000018ac  afc20000	sw	(r30),r2
  873  000018b0  0bffffac	j	L55_LF2
  874  000018b4  54000000	nop; delay slot nop
  875  000018b8          	L56_LF2:
  876  000018b8  20010000	addi	r1,r0,#0
  877  000018bc  08000004	j	L54_LF2
  878  000018c0  54000000	nop; delay slot nop
  879  000018c4          	L54_LF2:
  880  000018c4  8fa20000	lw	r2,0(r29)
  881  000018c8  8fdffff8	lw	r31,-8(r30)
  882  000018cc  001ee820	add	r29,r0,r30
  883  000018d0  8fdefffc	lw	r30,-4(r30)
  884  000018d4  4be00000	jr	r31
  885  000018d8  54000000	nop
  886  000018dc          	.endproc _dindex
  887  000018dc          	.align 2
  888  000018dc          	.proc _ditoa
  889  000018dc          	.global _ditoa
  890  000018dc          	_ditoa:
  891                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
  892  000018dc  afbefffc	sw	-4(r29),r30; push fp
  893  000018e0  001df020	add	r30,r0,r29; fp = sp
  894  000018e4  afbffff8	sw	-8(r29),r31; push ret addr
  895  000018e8  2fbd0018	subui	r29,r29,#24; alloc local storage
  896  000018ec  afa20000	sw	0(r29),r2
  897  000018f0  afa30004	sw	4(r29),r3
  898  000018f4  8fc10000	lw	r1,(r30)
  899  000018f8  68220000	slti	r2,r1,#0
  900  000018fc  1040002c	beqz	r2,L60_LF2
  901  00001900  54000000	nop; delay slot nop
  902  00001904  8fc10004	lw	r1,4(r30)
  903  00001908  20220001	addi	r2,r1,#1
  904  0000190c  afc20004	sw	4(r30),r2
  905  00001910  2002002d	addi	r2,r0,(#0x2d)&0xff
  906  00001914  a0220000	sb	(r1),r2
  907  00001918  8fc10000	lw	r1,(r30)
  908  0000191c  00011022	sub	r2,r0,r1
  909  00001920  afc20000	sw	(r30),r2
  910  00001924  08000118	j	L61_LF2
  911  00001928  54000000	nop; delay slot nop
  912  0000192c          	L60_LF2:
  913  0000192c  8fc10000	lw	r1,(r30)
  914  00001930  64220000	snei	r2,r1,#0
  915  00001934  14400020	bnez	r2,L62_LF2
  916  00001938  54000000	nop; delay slot nop
  917  0000193c  8fc10004	lw	r1,4(r30)
  918  00001940  20220001	addi	r2,r1,#1
  919  00001944  afc20004	sw	4(r30),r2
  920  00001948  20020030	addi	r2,r0,(#0x30)&0xff
  921  0000194c  a0220000	sb	(r1),r2
  922  00001950  080000ec	j	L61_LF2
  923  00001954  54000000	nop; delay slot nop
  924  00001958          	L62_LF2:
  925  00001958  20010001	addi	r1,r0,#1
  926  0000195c  afc1fff4	sw	-12(r30),r1
  927  00001960          	L64_LF2:
  928  00001960  8fc1fff4	lw	r1,-12(r30)
  929  00001964  8fc20000	lw	r2,(r30)
  930  00001968  0022082c	sle	r1,r1,r2
  931  0000196c  1420000c	bnez	r1,L66_LF2
  932  00001970  54000000	nop; delay slot nop
  933  00001974  08000024	j	L65_LF2
  934  00001978  54000000	nop; delay slot nop
  935  0000197c          	L67_LF2:
  936  0000197c          	L66_LF2:
  937  0000197c  8fc1fff4	lw	r1,-12(r30)
  938  00001980  00011820	add	r3,r0,r1
  939  00001984  50620002	slli	r2,r3,#0x2
  940  00001988  00411020	add	r2,r2,r1
  941  0000198c  50410001	slli	r1,r2,#0x1
  942  00001990  afc1fff4	sw	-12(r30),r1
  943  00001994  0bffffc8	j	L64_LF2
  944  00001998  54000000	nop; delay slot nop
  945  0000199c          	L65_LF2:
  946  0000199c  54000000	nop
  947  000019a0          	L68_LF2:
  948  000019a0  8fc1fff4	lw	r1,-12(r30)
  949  000019a4  2002000a	addi	r2,r0,#10
  950  000019a8  00200035	movi2fp	f0,r1
  951  000019ac  00400835	movi2fp	f1,r2
  952  000019b0  0401000f	div	f0,f0,f1
  953  000019b4  00000834	movfp2i	r1,f0
  954  000019b8  afc1fff4	sw	-12(r30),r1
  955  000019bc  8fc10004	lw	r1,4(r30)
  956  000019c0  20220001	addi	r2,r1,#1
  957  000019c4  afc20004	sw	4(r30),r2
  958  000019c8  8fc20000	lw	r2,(r30)
  959  000019cc  8fc3fff4	lw	r3,-12(r30)
  960  000019d0  00400035	movi2fp	f0,r2
  961  000019d4  00600835	movi2fp	f1,r3
  962  000019d8  0401000f	div	f0,f0,f1
  963  000019dc  00001034	movfp2i	r2,f0
  964  000019e0  00021820	add	r3,r0,r2
  965  000019e4  20620030	addi	r2,r3,#48
  966  000019e8  a0220000	sb	(r1),r2
  967  000019ec  8fc10000	lw	r1,(r30)
  968  000019f0  8fc3fff4	lw	r3,-12(r30)
  969  000019f4  00200035	movi2fp	f0,r1
  970  000019f8  00600835	movi2fp	f1,r3
  971  000019fc  0401000f	div	f0,f0,f1
  972  00001a00  00001034	movfp2i	r2,f0
  973  00001a04  8fc3fff4	lw	r3,-12(r30)
  974  00001a08  00400035	movi2fp	f0,r2
  975  00001a0c  00600835	movi2fp	f1,r3
  976  00001a10  0401000e	mult	f0,f0,f1
  977  00001a14  00001034	movfp2i	r2,f0
  978  00001a18  00220822	sub	r1,r1,r2
  979  00001a1c  afc10000	sw	(r30),r1
  980  00001a20          	L70_LF2:
  981  00001a20  8fc1fff4	lw	r1,-12(r30)
  982  00001a24  6c220001	sgti	r2,r1,#1
  983  00001a28  1440000c	bnez	r2,L71_LF2
  984  00001a2c  54000000	nop; delay slot nop
  985  00001a30  0800000c	j	L61_LF2
  986  00001a34  54000000	nop; delay slot nop
  987  00001a38          	L71_LF2:
  988  00001a38  0bffff64	j	L68_LF2
  989  00001a3c  54000000	nop; delay slot nop
  990  00001a40          	L69_LF2:
  991  00001a40          	L63_LF2:
  992  00001a40          	L61_LF2:
  993  00001a40  8fc10004	lw	r1,4(r30)
  994  00001a44  20020000	addi	r2,r0,(#0x0)&0xff
  995  00001a48  a0220000	sb	(r1),r2
  996  00001a4c          	L59_LF2:
  997  00001a4c  8fa20000	lw	r2,0(r29)
  998  00001a50  8fa30004	lw	r3,4(r29)
  999  00001a54  8fdffff8	lw	r31,-8(r30)
 1000  00001a58  001ee820	add	r29,r0,r30
 1001  00001a5c  8fdefffc	lw	r30,-4(r30)
 1002  00001a60  4be00000	jr	r31
 1003  00001a64  54000000	nop
 1004  00001a68          	.endproc _ditoa
 1005  00001a68          	.align 2
 1006  00001a68          	.proc _dstrtol
 1007  00001a68          	.global _dstrtol
 1008  00001a68          	_dstrtol:
 1009                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1010  00001a68  afbefffc	sw	-4(r29),r30; push fp
 1011  00001a6c  001df020	add	r30,r0,r29; fp = sp
 1012  00001a70  afbffff8	sw	-8(r29),r31; push ret addr
 1013  00001a74  2fbd0020	subui	r29,r29,#32; alloc local storage
 1014  00001a78  afa20000	sw	0(r29),r2
 1015  00001a7c  20010000	addi	r1,r0,#0
 1016  00001a80  afc1fff4	sw	-12(r30),r1
 1017  00001a84          	L73_LF2:
 1018  00001a84  8fc10000	lw	r1,(r30)
 1019  00001a88  90220000	lbu	r2,(r1)
 1020  00001a8c  60410020	seqi	r1,r2,#32
 1021  00001a90  14200034	bnez	r1,L75_LF2
 1022  00001a94  54000000	nop; delay slot nop
 1023  00001a98  8fc10000	lw	r1,(r30)
 1024  00001a9c  90220000	lbu	r2,(r1)
 1025  00001aa0  60410009	seqi	r1,r2,#9
 1026  00001aa4  14200020	bnez	r1,L75_LF2
 1027  00001aa8  54000000	nop; delay slot nop
 1028  00001aac  8fc10000	lw	r1,(r30)
 1029  00001ab0  90220000	lbu	r2,(r1)
 1030  00001ab4  6041000a	seqi	r1,r2,#10
 1031  00001ab8  1420000c	bnez	r1,L75_LF2
 1032  00001abc  54000000	nop; delay slot nop
 1033  00001ac0  0800001c	j	L74_LF2
 1034  00001ac4  54000000	nop; delay slot nop
 1035  00001ac8          	L75_LF2:
 1036  00001ac8  8fc20000	lw	r2,(r30)
 1037  00001acc  20410001	addi	r1,r2,#1
 1038  00001ad0  00011020	add	r2,r0,r1
 1039  00001ad4  afc20000	sw	(r30),r2
 1040  00001ad8  0bffffa8	j	L73_LF2
 1041  00001adc  54000000	nop; delay slot nop
 1042  00001ae0          	L74_LF2:
 1043  00001ae0  8fc10004	lw	r1,4(r30)
 1044  00001ae4  64220000	snei	r2,r1,#0
 1045  00001ae8  10400010	beqz	r2,L76_LF2
 1046  00001aec  54000000	nop; delay slot nop
 1047  00001af0  8fc10004	lw	r1,4(r30)
 1048  00001af4  8fc20000	lw	r2,(r30)
 1049  00001af8  ac220000	sw	(r1),r2
 1050  00001afc          	L76_LF2:
 1051  00001afc  8fc10000	lw	r1,(r30)
 1052  00001b00  90220000	lbu	r2,(r1)
 1053  00001b04  64410000	snei	r1,r2,#0
 1054  00001b08  14200010	bnez	r1,L77_LF2
 1055  00001b0c  54000000	nop; delay slot nop
 1056  00001b10  8fc1fff4	lw	r1,-12(r30)
 1057  00001b14  08000294	j	L72_LF2
 1058  00001b18  54000000	nop; delay slot nop
 1059  00001b1c          	L77_LF2:
 1060  00001b1c  8fc10000	lw	r1,(r30)
 1061  00001b20  90220000	lbu	r2,(r1)
 1062  00001b24  6041002d	seqi	r1,r2,#45
 1063  00001b28  10200024	beqz	r1,L78_LF2
 1064  00001b2c  54000000	nop; delay slot nop
 1065  00001b30  2001ffff	addi	r1,r0,#-1
 1066  00001b34  afc1ffec	sw	-20(r30),r1
 1067  00001b38  8fc20000	lw	r2,(r30)
 1068  00001b3c  20410001	addi	r1,r2,#1
 1069  00001b40  00011020	add	r2,r0,r1
 1070  00001b44  afc20000	sw	(r30),r2
 1071  00001b48  0800000c	j	L79_LF2
 1072  00001b4c  54000000	nop; delay slot nop
 1073  00001b50          	L78_LF2:
 1074  00001b50  20010001	addi	r1,r0,#1
 1075  00001b54  afc1ffec	sw	-20(r30),r1
 1076  00001b58          	L79_LF2:
 1077  00001b58  8fc10008	lw	r1,8(r30)
 1078  00001b5c  64220000	snei	r2,r1,#0
 1079  00001b60  14400090	bnez	r2,L80_LF2
 1080  00001b64  54000000	nop; delay slot nop
 1081  00001b68  8fc10000	lw	r1,(r30)
 1082  00001b6c  90220000	lbu	r2,(r1)
 1083  00001b70  60410030	seqi	r1,r2,#48
 1084  00001b74  10200074	beqz	r1,L81_LF2
 1085  00001b78  54000000	nop; delay slot nop
 1086  00001b7c  8fc20000	lw	r2,(r30)
 1087  00001b80  20410001	addi	r1,r2,#1
 1088  00001b84  00011020	add	r2,r0,r1
 1089  00001b88  afc20000	sw	(r30),r2
 1090  00001b8c  8fc10000	lw	r1,(r30)
 1091  00001b90  90220000	lbu	r2,(r1)
 1092  00001b94  60410078	seqi	r1,r2,#120
 1093  00001b98  14200020	bnez	r1,L83_LF2
 1094  00001b9c  54000000	nop; delay slot nop
 1095  00001ba0  8fc10000	lw	r1,(r30)
 1096  00001ba4  90220000	lbu	r2,(r1)
 1097  00001ba8  60410058	seqi	r1,r2,#88
 1098  00001bac  1420000c	bnez	r1,L83_LF2
 1099  00001bb0  54000000	nop; delay slot nop
 1100  00001bb4  08000024	j	L82_LF2
 1101  00001bb8  54000000	nop; delay slot nop
 1102  00001bbc          	L83_LF2:
 1103  00001bbc  20010010	addi	r1,r0,#16
 1104  00001bc0  afc10008	sw	8(r30),r1
 1105  00001bc4  8fc20000	lw	r2,(r30)
 1106  00001bc8  20410001	addi	r1,r2,#1
 1107  00001bcc  00011020	add	r2,r0,r1
 1108  00001bd0  afc20000	sw	(r30),r2
 1109  00001bd4  0800000c	j	L84_LF2
 1110  00001bd8  54000000	nop; delay slot nop
 1111  00001bdc          	L82_LF2:
 1112  00001bdc  20010008	addi	r1,r0,#8
 1113  00001be0  afc10008	sw	8(r30),r1
 1114  00001be4          	L84_LF2:
 1115  00001be4  0800000c	j	L80_LF2
 1116  00001be8  54000000	nop; delay slot nop
 1117  00001bec          	L81_LF2:
 1118  00001bec  2001000a	addi	r1,r0,#10
 1119  00001bf0  afc10008	sw	8(r30),r1
 1120  00001bf4          	L85_LF2:
 1121  00001bf4          	L80_LF2:
 1122  00001bf4  8fc10008	lw	r1,8(r30)
 1123  00001bf8  70220000	slei	r2,r1,#0
 1124  00001bfc  1440001c	bnez	r2,L87_LF2
 1125  00001c00  54000000	nop; delay slot nop
 1126  00001c04  8fc10008	lw	r1,8(r30)
 1127  00001c08  6c220010	sgti	r2,r1,#16
 1128  00001c0c  1440000c	bnez	r2,L87_LF2
 1129  00001c10  54000000	nop; delay slot nop
 1130  00001c14  08000010	j	L86_LF2
 1131  00001c18  54000000	nop; delay slot nop
 1132  00001c1c          	L87_LF2:
 1133  00001c1c  8fc1fff4	lw	r1,-12(r30)
 1134  00001c20  08000188	j	L72_LF2
 1135  00001c24  54000000	nop; delay slot nop
 1136  00001c28          	L86_LF2:
 1137  00001c28  54000000	nop
 1138  00001c2c          	L88_LF2:
 1139  00001c2c  8fc10000	lw	r1,(r30)
 1140  00001c30  90220000	lbu	r2,(r1)
 1141  00001c34  6c41002f	sgtui	r1,r2,#47
 1142  00001c38  10200030	beqz	r1,L91_LF2
 1143  00001c3c  54000000	nop; delay slot nop
 1144  00001c40  8fc10000	lw	r1,(r30)
 1145  00001c44  90220000	lbu	r2,(r1)
 1146  00001c48  70410039	sleui	r1,r2,#57
 1147  00001c4c  1020001c	beqz	r1,L91_LF2
 1148  00001c50  54000000	nop; delay slot nop
 1149  00001c54  8fc10000	lw	r1,(r30)
 1150  00001c58  90220000	lbu	r2,(r1)
 1151  00001c5c  2041ffd0	addi	r1,r2,#-48
 1152  00001c60  afc1fff0	sw	-16(r30),r1
 1153  00001c64  0800008c	j	L92_LF2
 1154  00001c68  54000000	nop; delay slot nop
 1155  00001c6c          	L91_LF2:
 1156  00001c6c  8fc10000	lw	r1,(r30)
 1157  00001c70  90220000	lbu	r2,(r1)
 1158  00001c74  6c410060	sgtui	r1,r2,#96
 1159  00001c78  10200030	beqz	r1,L93_LF2
 1160  00001c7c  54000000	nop; delay slot nop
 1161  00001c80  8fc10000	lw	r1,(r30)
 1162  00001c84  90220000	lbu	r2,(r1)
 1163  00001c88  7041007a	sleui	r1,r2,#122
 1164  00001c8c  1020001c	beqz	r1,L93_LF2
 1165  00001c90  54000000	nop; delay slot nop
 1166  00001c94  8fc10000	lw	r1,(r30)
 1167  00001c98  90220000	lbu	r2,(r1)
 1168  00001c9c  2041ffa9	addi	r1,r2,#-87
 1169  00001ca0  afc1fff0	sw	-16(r30),r1
 1170  00001ca4  0800004c	j	L92_LF2
 1171  00001ca8  54000000	nop; delay slot nop
 1172  00001cac          	L93_LF2:
 1173  00001cac  8fc10000	lw	r1,(r30)
 1174  00001cb0  90220000	lbu	r2,(r1)
 1175  00001cb4  6c410040	sgtui	r1,r2,#64
 1176  00001cb8  10200030	beqz	r1,L95_LF2
 1177  00001cbc  54000000	nop; delay slot nop
 1178  00001cc0  8fc10000	lw	r1,(r30)
 1179  00001cc4  90220000	lbu	r2,(r1)
 1180  00001cc8  7041005a	sleui	r1,r2,#90
 1181  00001ccc  1020001c	beqz	r1,L95_LF2
 1182  00001cd0  54000000	nop; delay slot nop
 1183  00001cd4  8fc10000	lw	r1,(r30)
 1184  00001cd8  90220000	lbu	r2,(r1)
 1185  00001cdc  2041ffc9	addi	r1,r2,#-55
 1186  00001ce0  afc1fff0	sw	-16(r30),r1
 1187  00001ce4  0800000c	j	L92_LF2
 1188  00001ce8  54000000	nop; delay slot nop
 1189  00001cec          	L95_LF2:
 1190  00001cec  200103e8	addi	r1,r0,#1000
 1191  00001cf0  afc1fff0	sw	-16(r30),r1
 1192  00001cf4          	L96_LF2:
 1193  00001cf4          	L94_LF2:
 1194  00001cf4          	L92_LF2:
 1195  00001cf4  8fc1fff0	lw	r1,-16(r30)
 1196  00001cf8  8fc20008	lw	r2,8(r30)
 1197  00001cfc  0022082a	slt	r1,r1,r2
 1198  00001d00  10200040	beqz	r1,L90_LF2
 1199  00001d04  54000000	nop; delay slot nop
 1200  00001d08  8fc1fff4	lw	r1,-12(r30)
 1201  00001d0c  8fc20008	lw	r2,8(r30)
 1202  00001d10  00200035	movi2fp	f0,r1
 1203  00001d14  00400835	movi2fp	f1,r2
 1204  00001d18  0401000e	mult	f0,f0,f1
 1205  00001d1c  00000834	movfp2i	r1,f0
 1206  00001d20  afc1fff4	sw	-12(r30),r1
 1207  00001d24  8fc1fff4	lw	r1,-12(r30)
 1208  00001d28  8fc2fff0	lw	r2,-16(r30)
 1209  00001d2c  00220820	add	r1,r1,r2
 1210  00001d30  afc1fff4	sw	-12(r30),r1
 1211  00001d34  8fc20000	lw	r2,(r30)
 1212  00001d38  20410001	addi	r1,r2,#1
 1213  00001d3c  00011020	add	r2,r0,r1
 1214  00001d40  afc20000	sw	(r30),r2
 1215  00001d44          	L97_LF2:
 1216  00001d44          	L90_LF2:
 1217  00001d44  8fc1fff0	lw	r1,-16(r30)
 1218  00001d48  8fc20008	lw	r2,8(r30)
 1219  00001d4c  0022082a	slt	r1,r1,r2
 1220  00001d50  1420000c	bnez	r1,L98_LF2
 1221  00001d54  54000000	nop; delay slot nop
 1222  00001d58  0800000c	j	L89_LF2
 1223  00001d5c  54000000	nop; delay slot nop
 1224  00001d60          	L98_LF2:
 1225  00001d60  0bfffec8	j	L88_LF2
 1226  00001d64  54000000	nop; delay slot nop
 1227  00001d68          	L89_LF2:
 1228  00001d68  8fc10004	lw	r1,4(r30)
 1229  00001d6c  64220000	snei	r2,r1,#0
 1230  00001d70  10400010	beqz	r2,L99_LF2
 1231  00001d74  54000000	nop; delay slot nop
 1232  00001d78  8fc10004	lw	r1,4(r30)
 1233  00001d7c  8fc20000	lw	r2,(r30)
 1234  00001d80  ac220000	sw	(r1),r2
 1235  00001d84          	L99_LF2:
 1236  00001d84  8fc1fff4	lw	r1,-12(r30)
 1237  00001d88  8fc2ffec	lw	r2,-20(r30)
 1238  00001d8c  00200035	movi2fp	f0,r1
 1239  00001d90  00400835	movi2fp	f1,r2
 1240  00001d94  0401000e	mult	f0,f0,f1
 1241  00001d98  00000834	movfp2i	r1,f0
 1242  00001d9c  afc1fff4	sw	-12(r30),r1
 1243  00001da0  8fc1fff4	lw	r1,-12(r30)
 1244  00001da4  08000004	j	L72_LF2
 1245  00001da8  54000000	nop; delay slot nop
 1246  00001dac          	L72_LF2:
 1247  00001dac  8fa20000	lw	r2,0(r29)
 1248  00001db0  8fdffff8	lw	r31,-8(r30)
 1249  00001db4  001ee820	add	r29,r0,r30
 1250  00001db8  8fdefffc	lw	r30,-4(r30)
 1251  00001dbc  4be00000	jr	r31
 1252  00001dc0  54000000	nop
 1253  00001dc4          	.endproc _dstrtol
 1254  00001dc4          	.align 2
 1255  00001dc4          	.proc _bcopy
 1256  00001dc4          	.global _bcopy
 1257  00001dc4          	_bcopy:
 1258                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1259  00001dc4  afbefffc	sw	-4(r29),r30; push fp
 1260  00001dc8  001df020	add	r30,r0,r29; fp = sp
 1261  00001dcc  afbffff8	sw	-8(r29),r31; push ret addr
 1262  00001dd0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1263  00001dd4  afa20000	sw	0(r29),r2
 1264  00001dd8  afa30004	sw	4(r29),r3
 1265  00001ddc  54000000	nop
 1266  00001de0          	L101_LF2:
 1267  00001de0  8fc10008	lw	r1,8(r30)
 1268  00001de4  2022ffff	addi	r2,r1,#-1
 1269  00001de8  afc20008	sw	8(r30),r2
 1270  00001dec  6c210000	sgti	r1,r1,#0
 1271  00001df0  1420000c	bnez	r1,L103_LF2
 1272  00001df4  54000000	nop; delay slot nop
 1273  00001df8  0800002c	j	L102_LF2
 1274  00001dfc  54000000	nop; delay slot nop
 1275  00001e00          	L103_LF2:
 1276  00001e00  8fc10004	lw	r1,4(r30)
 1277  00001e04  20220001	addi	r2,r1,#1
 1278  00001e08  afc20004	sw	4(r30),r2
 1279  00001e0c  8fc20000	lw	r2,(r30)
 1280  00001e10  20430001	addi	r3,r2,#1
 1281  00001e14  afc30000	sw	(r30),r3
 1282  00001e18  80420000	lb	r2,(r2)
 1283  00001e1c  a0220000	sb	(r1),r2
 1284  00001e20  0bffffbc	j	L101_LF2
 1285  00001e24  54000000	nop; delay slot nop
 1286  00001e28          	L102_LF2:
 1287  00001e28          	L100_LF2:
 1288  00001e28  8fa20000	lw	r2,0(r29)
 1289  00001e2c  8fa30004	lw	r3,4(r29)
 1290  00001e30  8fdffff8	lw	r31,-8(r30)
 1291  00001e34  001ee820	add	r29,r0,r30
 1292  00001e38  8fdefffc	lw	r30,-4(r30)
 1293  00001e3c  4be00000	jr	r31
 1294  00001e40  54000000	nop
 1295  00001e44          	.endproc _bcopy
 1296  00001e44          	.align 2
 1297  00001e44          	.proc _bzero
 1298  00001e44          	.global _bzero
 1299  00001e44          	_bzero:
 1300                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1301  00001e44  afbefffc	sw	-4(r29),r30; push fp
 1302  00001e48  001df020	add	r30,r0,r29; fp = sp
 1303  00001e4c  afbffff8	sw	-8(r29),r31; push ret addr
 1304  00001e50  2fbd0010	subui	r29,r29,#16; alloc local storage
 1305  00001e54  afa20000	sw	0(r29),r2
 1306  00001e58  54000000	nop
 1307  00001e5c          	L105_LF2:
 1308  00001e5c  8fc10004	lw	r1,4(r30)
 1309  00001e60  2022ffff	addi	r2,r1,#-1
 1310  00001e64  afc20004	sw	4(r30),r2
 1311  00001e68  6c210000	sgti	r1,r1,#0
 1312  00001e6c  1420000c	bnez	r1,L107_LF2
 1313  00001e70  54000000	nop; delay slot nop
 1314  00001e74  08000020	j	L106_LF2
 1315  00001e78  54000000	nop; delay slot nop
 1316  00001e7c          	L107_LF2:
 1317  00001e7c  8fc10000	lw	r1,(r30)
 1318  00001e80  20220001	addi	r2,r1,#1
 1319  00001e84  afc20000	sw	(r30),r2
 1320  00001e88  20020000	addi	r2,r0,(#0x0)&0xff
 1321  00001e8c  a0220000	sb	(r1),r2
 1322  00001e90  0bffffc8	j	L105_LF2
 1323  00001e94  54000000	nop; delay slot nop
 1324  00001e98          	L106_LF2:
 1325  00001e98          	L104_LF2:
 1326  00001e98  8fa20000	lw	r2,0(r29)
 1327  00001e9c  8fdffff8	lw	r31,-8(r30)
 1328  00001ea0  001ee820	add	r29,r0,r30
 1329  00001ea4  8fdefffc	lw	r30,-4(r30)
 1330  00001ea8  4be00000	jr	r31
 1331  00001eac  54000000	nop
 1332  00001eb0          	.endproc _bzero
 1333  00001eb0          	.align 2
 1334  00001eb0          	.proc _min
 1335  00001eb0          	.global _min
 1336  00001eb0          	_min:
 1337                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1338  00001eb0  afbefffc	sw	-4(r29),r30; push fp
 1339  00001eb4  001df020	add	r30,r0,r29; fp = sp
 1340  00001eb8  afbffff8	sw	-8(r29),r31; push ret addr
 1341  00001ebc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1342  00001ec0  afa20000	sw	0(r29),r2
 1343  00001ec4  afa30004	sw	4(r29),r3
 1344  00001ec8  8fc10000	lw	r1,(r30)
 1345  00001ecc  8fc20004	lw	r2,4(r30)
 1346  00001ed0  0022182c	sle	r3,r1,r2
 1347  00001ed4  14600008	bnez	r3,L109_LF2
 1348  00001ed8  54000000	nop; delay slot nop
 1349  00001edc  8fc10004	lw	r1,4(r30)
 1350  00001ee0          	L109_LF2:
 1351  00001ee0  08000004	j	L108_LF2
 1352  00001ee4  54000000	nop; delay slot nop
 1353  00001ee8          	L108_LF2:
 1354  00001ee8  8fa20000	lw	r2,0(r29)
 1355  00001eec  8fa30004	lw	r3,4(r29)
 1356  00001ef0  8fdffff8	lw	r31,-8(r30)
 1357  00001ef4  001ee820	add	r29,r0,r30
 1358  00001ef8  8fdefffc	lw	r30,-4(r30)
 1359  00001efc  4be00000	jr	r31
 1360  00001f00  54000000	nop
 1361  00001f04          	.endproc _min
 1362  00001f04          	.align 2
 1363  00001f04          	.proc _max
 1364  00001f04          	.global _max
 1365  00001f04          	_max:
 1366                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1367  00001f04  afbefffc	sw	-4(r29),r30; push fp
 1368  00001f08  001df020	add	r30,r0,r29; fp = sp
 1369  00001f0c  afbffff8	sw	-8(r29),r31; push ret addr
 1370  00001f10  2fbd0010	subui	r29,r29,#16; alloc local storage
 1371  00001f14  afa20000	sw	0(r29),r2
 1372  00001f18  afa30004	sw	4(r29),r3
 1373  00001f1c  8fc10000	lw	r1,(r30)
 1374  00001f20  8fc20004	lw	r2,4(r30)
 1375  00001f24  0022182d	sge	r3,r1,r2
 1376  00001f28  14600008	bnez	r3,L111_LF2
 1377  00001f2c  54000000	nop; delay slot nop
 1378  00001f30  8fc10004	lw	r1,4(r30)
 1379  00001f34          	L111_LF2:
 1380  00001f34  08000004	j	L110_LF2
 1381  00001f38  54000000	nop; delay slot nop
 1382  00001f3c          	L110_LF2:
 1383  00001f3c  8fa20000	lw	r2,0(r29)
 1384  00001f40  8fa30004	lw	r3,4(r29)
 1385  00001f44  8fdffff8	lw	r31,-8(r30)
 1386  00001f48  001ee820	add	r29,r0,r30
 1387  00001f4c  8fdefffc	lw	r30,-4(r30)
 1388  00001f50  4be00000	jr	r31
 1389  00001f54  54000000	nop
 1390  00001f58          	.endproc _max
 1391                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1392                      ;;;
 1393                      ;;; Most of the traps are called in files from libtraps.
 1396  00001f58          	.align 2
 1397  00001f58          	.proc _exit
 1398  00001f58          	.global _exit
 1399  00001f58          	_exit:
 1400  00001f58  44000300	trap	#0x300
 1401  00001f5c  4be00000	jr	r31
 1402  00001f60  54000000	nop
 1403  00001f64          	.endproc _exit
 1405                      ; for the benefit of gcc.
 1406  00001f64          	.proc ___main
 1407  00001f64          	.global ___main
 1408  00001f64          	___main:
 1409  00001f64  4be00000	jr	r31
 1410  00001f68  54000000	nop
 1411  00001f6c          	.endproc ___main
 1412  00001f6c          	.text
 1413  00001f6c          	.global _etext
 1414  00001f6c          	_etext:
 1415  00001f6c          	.align 3
 1416  00001f70          	.data
 1417  00002034          	.global _edata
 1418  00002034          	_edata:
