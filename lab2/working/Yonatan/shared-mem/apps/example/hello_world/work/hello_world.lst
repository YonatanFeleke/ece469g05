 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 169
    4                      ; Text size: 4372
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f70726f	
   82  00003018  63735f63	
   82  0000301c  6f6d706c	
   82  00003020  65746564	
   82  00003024  5f73656d	
   82  00003028  6170686f	
   82  0000302c  72653e0a	
   82  00003030  00      	
   83  00003031          	.align 2
   84  00003034          	LC1_LF0:
   85  00003034  68656c6c	.ascii "hello_world (%d): Hello world!\n\000"
   85  00003038  6f5f776f	
   85  0000303c  726c6420	
   85  00003040  28256429	
   85  00003044  3a204865	
   85  00003048  6c6c6f20	
   85  0000304c  776f726c	
   85  00003050  64210a00	
   86  00003054          	.align 2
   87  00003054          	LC2_LF0:
   88  00003054  68656c6c	.ascii "hello_world (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   88  00003058  6f5f776f	
   88  0000305c  726c6420	
   88  00003060  28256429	
   88  00003064  3a204261	
   88  00003068  64207365	
   88  0000306c  6d617068	
   88  00003070  6f726520	
   88  00003074  735f7072	
   88  00003078  6f63735f	
   88  0000307c  636f6d70	
   88  00003080  6c657465	
   88  00003084  64202825	
   88  00003088  6429210a	
   88  0000308c  00      	
   89  0000308d          	.align 2
   90  00003090          	LC3_LF0:
   91  00003090  68656c6c	.ascii "hello_world (%d): Done!\n\000"
   91  00003094  6f5f776f	
   91  00003098  726c6420	
   91  0000309c  28256429	
   91  000030a0  3a20446f	
   91  000030a4  6e65210a	
   91  000030a8  00      	
   92  000030a9          	.text
   93  000010d4          	.align 2
   94  000010d4          	.proc _main
   95  000010d4          	.global _main
   96  000010d4          	_main:
   97                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
   98  000010d4  afbefffc	sw	-4(r29),r30; push fp
   99  000010d8  001df020	add	r30,r0,r29; fp = sp
  100  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  101  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  102  000010e4  8fc20000	lw	r2,(r30)
  103  000010e8  8fc30004	lw	r3,4(r30)
  104  000010ec  0c00101c	jal	___main
  105  000010f0  54000000	nop; not filled.
  106  000010f4  64410002	snei	r1,r2,#2
  107  000010f8  10200028	beqz	r1,L17_LF0
  108  000010fc  54000000	nop; not filled.
  109  00001100  23bdfff8	addi	r29,r29,#-8
  110  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  111  00001108  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  112  0000110c  afa40000	sw	(r29),r4
  113  00001110  0c000120	jal	_Printf
  114  00001114  54000000	nop; not filled.
  115  00001118  0c000238	jal	_Exit
  116  0000111c  54000000	nop; not filled.
  117  00001120  23bd0008	addi	r29,r29,#8
  118  00001124          	L17_LF0:
  119  00001124  23bdfff0	addi	r29,r29,#-16
  120  00001128  8c630004	lw	r3,4(r3)
  121  0000112c  afa30000	sw	(r29),r3
  122  00001130  20040000	addi	r4,r0,#0
  123  00001134  afa40004	sw	4(r29),r4
  124  00001138  2004000a	addi	r4,r0,#10
  125  0000113c  afa40008	sw	8(r29),r4
  126  00001140  0c000acc	jal	_dstrtol
  127  00001144  54000000	nop; not filled.
  128  00001148  00011020	add	r2,r0,r1
  129  0000114c  0c0000f0	jal	_getpid
  130  00001150  54000000	nop; not filled.
  131  00001154  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  132  00001158  24843034	addui	r4,r4,(LC1_LF0)&0xffff
  133  0000115c  afa40000	sw	(r29),r4
  134  00001160  afa10004	sw	4(r29),r1
  135  00001164  0c0000cc	jal	_Printf
  136  00001168  54000000	nop; not filled.
  137  0000116c  afa20000	sw	(r29),r2
  138  00001170  0c00012c	jal	_sem_signal
  139  00001174  54000000	nop; not filled.
  140  00001178  23bd0010	addi	r29,r29,#16
  141  0000117c  64210001	snei	r1,r1,#1
  142  00001180  10200038	beqz	r1,L18_LF0
  143  00001184  54000000	nop; not filled.
  144  00001188  0c0000b4	jal	_getpid
  145  0000118c  54000000	nop; not filled.
  146  00001190  23bdfff0	addi	r29,r29,#-16
  147  00001194  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  148  00001198  24843054	addui	r4,r4,(LC2_LF0)&0xffff
  149  0000119c  afa40000	sw	(r29),r4
  150  000011a0  afa10004	sw	4(r29),r1
  151  000011a4  afa20008	sw	8(r29),r2
  152  000011a8  0c000088	jal	_Printf
  153  000011ac  54000000	nop; not filled.
  154  000011b0  0c0001a0	jal	_Exit
  155  000011b4  54000000	nop; not filled.
  156  000011b8  23bd0010	addi	r29,r29,#16
  157  000011bc          	L18_LF0:
  158  000011bc  0c000080	jal	_getpid
  159  000011c0  54000000	nop; not filled.
  160  000011c4  23bdfff8	addi	r29,r29,#-8
  161  000011c8  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  162  000011cc  24843090	addui	r4,r4,(LC3_LF0)&0xffff
  163  000011d0  afa40000	sw	(r29),r4
  164  000011d4  afa10004	sw	4(r29),r1
  165  000011d8  0c000058	jal	_Printf
  166  000011dc  54000000	nop; not filled.
  167  000011e0  23bd0008	addi	r29,r29,#8
  168  000011e4  0c000f18	jal	_exit
  169  000011e8  54000000	nop
  170  000011ec          	.endproc _main
  171                      ;;;
  172                      ;;; Stub functions for DLX traps.
  173                      ;;;
  174                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  175                      ;;;
  176                      ;;; The traps such as Open and Close
  177                      ;;; (note the capital letters) are for use by user programs.  The traps
  178                      ;;; with names such as open and close (lower case) are for use by the OS.
  179                      ;;;
  182  000011ec          	.align 2
  184                      ;;; The following are the traps to be used by user-level programs
  185                      ;;;
  187  000011ec          	.align 2
  188  000011ec          	.proc _Open
  189  000011ec          	.global _Open
  190  000011ec          	_Open:
  191                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  192                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  193                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  194  000011ec  44000213	trap	#0x213
  195  000011f0  4be00000	jr	r31
  196  000011f4  54000000	nop
  197  000011f8          	.endproc _Open
  199  000011f8          	.proc _Close
  200  000011f8          	.global _Close
  201  000011f8          	_Close:
  202  000011f8  44000214	trap	#0x214
  203  000011fc  4be00000	jr	r31
  204  00001200  54000000	nop
  205  00001204          	.endproc _Close
  207  00001204          	.proc _Read
  208  00001204          	.global _Read
  209  00001204          	_Read:
  210  00001204  44000210	trap	#0x210
  211  00001208  4be00000	jr	r31
  212  0000120c  54000000	nop
  213  00001210          	.endproc _Read
  215  00001210          	.proc _Write
  216  00001210          	.global _Write
  217  00001210          	_Write:
  218  00001210  44000211	trap	#0x211
  219  00001214  4be00000	jr	r31
  220  00001218  54000000	nop
  221  0000121c          	.endproc _Write
  223  0000121c          	.proc _Lseek
  224  0000121c          	.global _Lseek
  225  0000121c          	_Lseek:
  226  0000121c  44000212	trap	#0x212
  227  00001220  4be00000	jr	r31
  228  00001224  54000000	nop
  229  00001228          	.endproc _Lseek
  231  00001228          	.proc _Putchar
  232  00001228          	.global _Putchar
  233  00001228          	_Putchar:
  234  00001228  44000280	trap	#0x280
  235  0000122c  4be00000	jr	r31
  236  00001230  54000000	nop
  237  00001234          	.endproc _Putchar
  239  00001234          	.proc _Printf
  240  00001234          	.global _Printf
  241  00001234          	_Printf:
  242  00001234  44000201	trap	#0x201
  243  00001238  4be00000	jr	r31
  244  0000123c  54000000	nop
  245  00001240          	.endproc _Printf
  247  00001240          	.proc _getpid
  248  00001240          	.global _getpid
  249  00001240          	_getpid:
  250  00001240  44000431	trap	#0x431
  251  00001244  4be00000	jr	r31
  252  00001248  54000000	nop
  253  0000124c          	.endproc _getpid
  255  0000124c          	.proc _process_create
  256  0000124c          	.global _process_create
  257  0000124c          	_process_create:
  258  0000124c  44000432	trap	#0x432
  259  00001250  4be00000	jr	r31
  260  00001254  54000000	nop
  261  00001258          	.endproc _process_create
  263  00001258          	.proc _shmget
  264  00001258          	.global _shmget
  265  00001258          	_shmget:
  266  00001258  44000440	trap	#0x440
  267  0000125c  4be00000	jr	r31
  268  00001260  54000000	nop
  269  00001264          	.endproc _shmget
  271  00001264          	.proc _shmat
  272  00001264          	.global _shmat
  273  00001264          	_shmat:
  274  00001264  44000441	trap	#0x441
  275  00001268  4be00000	jr	r31
  276  0000126c  54000000	nop
  277  00001270          	.endproc _shmat
  279  00001270          	.proc _shmdt
  280  00001270          	.global _shmdt
  281  00001270          	_shmdt:
  282  00001270  44000442	trap	#0x442
  283  00001274  4be00000	jr	r31
  284  00001278  54000000	nop
  285  0000127c          	.endproc _shmdt
  287  0000127c          	.proc _shmrm
  288  0000127c          	.global _shmrm
  289  0000127c          	_shmrm:
  290  0000127c  44000443	trap	#0x443
  291  00001280  4be00000	jr	r31
  292  00001284  54000000	nop
  293  00001288          	.endproc _shmrm
  295  00001288          	.proc _sem_create
  296  00001288          	.global _sem_create
  297  00001288          	_sem_create:
  298  00001288  44000450	trap	#0x450
  299  0000128c  4be00000	jr	r31
  300  00001290  54000000	nop
  301  00001294          	.endproc _sem_create
  303  00001294          	.proc _sem_wait
  304  00001294          	.global _sem_wait
  305  00001294          	_sem_wait:
  306  00001294  44000451	trap	#0x451
  307  00001298  4be00000	jr	r31
  308  0000129c  54000000	nop
  309  000012a0          	.endproc _sem_wait
  311  000012a0          	.proc _sem_signal
  312  000012a0          	.global _sem_signal
  313  000012a0          	_sem_signal:
  314  000012a0  44000452	trap	#0x452
  315  000012a4  4be00000	jr	r31
  316  000012a8  54000000	nop
  317  000012ac          	.endproc _sem_signal
  319  000012ac          	.proc _lock_create
  320  000012ac          	.global _lock_create
  321  000012ac          	_lock_create:
  322  000012ac  44000453	trap	#0x453
  323  000012b0  4be00000	jr	r31
  324  000012b4  54000000	nop
  325  000012b8          	.endproc _lock_create
  327  000012b8          	.proc _lock_acquire
  328  000012b8          	.global _lock_acquire
  329  000012b8          	_lock_acquire:
  330  000012b8  44000454	trap	#0x454
  331  000012bc  4be00000	jr	r31
  332  000012c0  54000000	nop
  333  000012c4          	.endproc _lock_acquire
  335  000012c4          	.proc _lock_release
  336  000012c4          	.global _lock_release
  337  000012c4          	_lock_release:
  338  000012c4  44000455	trap	#0x455
  339  000012c8  4be00000	jr	r31
  340  000012cc  54000000	nop
  341  000012d0          	.endproc _lock_release
  343  000012d0          	.proc _cond_create
  344  000012d0          	.global _cond_create
  345  000012d0          	_cond_create:
  346  000012d0  44000456	trap	#0x456
  347  000012d4  4be00000	jr	r31
  348  000012d8  54000000	nop
  349  000012dc          	.endproc _cond_create
  351  000012dc          	.proc _cond_wait
  352  000012dc          	.global _cond_wait
  353  000012dc          	_cond_wait:
  354  000012dc  44000457	trap	#0x457
  355  000012e0  4be00000	jr	r31
  356  000012e4  54000000	nop
  357  000012e8          	.endproc _cond_wait
  359  000012e8          	.proc _cond_signal
  360  000012e8          	.global _cond_signal
  361  000012e8          	_cond_signal:
  362  000012e8  44000458	trap	#0x458
  363  000012ec  4be00000	jr	r31
  364  000012f0  54000000	nop
  365  000012f4          	.endproc _cond_signal
  367  000012f4          	.proc _cond_broadcast
  368  000012f4          	.global _cond_broadcast
  369  000012f4          	_cond_broadcast:
  370  000012f4  44000459	trap	#0x459
  371  000012f8  4be00000	jr	r31
  372  000012fc  54000000	nop
  373  00001300          	.endproc _cond_broadcast
  375  00001300          	.proc _mbox_create
  376  00001300          	.global _mbox_create
  377  00001300          	_mbox_create:
  378  00001300  44000460	trap	#0x460
  379  00001304  4be00000	jr	r31
  380  00001308  54000000	nop
  381  0000130c          	.endproc _mbox_create
  383  0000130c          	.proc _mbox_open
  384  0000130c          	.global _mbox_open
  385  0000130c          	_mbox_open:
  386  0000130c  44000461	trap	#0x461
  387  00001310  4be00000	jr	r31
  388  00001314  54000000	nop
  389  00001318          	.endproc _mbox_open
  391  00001318          	.proc _mbox_close
  392  00001318          	.global _mbox_close
  393  00001318          	_mbox_close:
  394  00001318  44000462	trap	#0x462
  395  0000131c  4be00000	jr	r31
  396  00001320  54000000	nop
  397  00001324          	.endproc _mbox_close
  399  00001324          	.proc _mbox_send
  400  00001324          	.global _mbox_send
  401  00001324          	_mbox_send:
  402  00001324  44000463	trap	#0x463
  403  00001328  4be00000	jr	r31
  404  0000132c  54000000	nop
  405  00001330          	.endproc _mbox_send
  407  00001330          	.proc _mbox_recv
  408  00001330          	.global _mbox_recv
  409  00001330          	_mbox_recv:
  410  00001330  44000464	trap	#0x464
  411  00001334  4be00000	jr	r31
  412  00001338  54000000	nop
  413  0000133c          	.endproc _mbox_recv
  415  0000133c          	.proc _sleep
  416  0000133c          	.global _sleep
  417  0000133c          	_sleep:
  418  0000133c  44000465	trap	#0x465
  419  00001340  4be00000	jr	r31
  420  00001344  54000000	nop
  421  00001348          	.endproc _sleep
  423  00001348          	.proc _yield
  424  00001348          	.global _yield
  425  00001348          	_yield:
  426  00001348  44000466	trap	#0x466
  427  0000134c  4be00000	jr	r31
  428  00001350  54000000	nop
  429  00001354          	.endproc _yield
  432  00001354          	.proc _Exit
  433  00001354          	.global _Exit
  434  00001354          	_Exit:
  435  00001354  44000500	trap	#0x500
  436  00001358  4be00000	jr	r31
  437  0000135c  54000000	nop
  438  00001360          	.endproc _Exit
  441  00001360          	.proc _malloc
  442  00001360          	.global _malloc
  443  00001360          	_malloc:
  444  00001360  44000467	trap	#0x467
  445  00001364  4be00000	jr	r31
  446  00001368          	.endproc _malloc
  449  00001368          	.proc _mfree
  450  00001368          	.global _mfree
  451  00001368          	_mfree:
  452  00001368  44000468	trap	#0x468
  453  0000136c  4be00000	jr	r31
  454  00001370          	.endproc _mfree
  455                      ; Compiled by GCC
  457  00001370          	.align 2
  458  00001370          	.proc _isspace
  459  00001370          	.global _isspace
  460  00001370          	_isspace:
  461                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  462  00001370  afbefffc	sw	-4(r29),r30; push fp
  463  00001374  001df020	add	r30,r0,r29; fp = sp
  464  00001378  afbffff8	sw	-8(r29),r31; push ret addr
  465  0000137c  2fbd0018	subui	r29,r29,#24; alloc local storage
  466  00001380  afa20000	sw	0(r29),r2
  467  00001384  afa30004	sw	4(r29),r3
  468  00001388  afa40008	sw	8(r29),r4
  469  0000138c  83c20003	lb	r2,3(r30)
  470  00001390  20010000	addi	r1,r0,#0
  471  00001394  304300ff	andi	r3,r2,#0x00ff
  472  00001398  60640020	seqi	r4,r3,#32
  473  0000139c  1480002c	bnez	r4,L3_LF2
  474  000013a0  54000000	nop; delay slot nop
  475  000013a4  304300ff	andi	r3,r2,#0x00ff
  476  000013a8  60640009	seqi	r4,r3,#9
  477  000013ac  1480001c	bnez	r4,L3_LF2
  478  000013b0  54000000	nop; delay slot nop
  479  000013b4  304300ff	andi	r3,r2,#0x00ff
  480  000013b8  6064000a	seqi	r4,r3,#10
  481  000013bc  1480000c	bnez	r4,L3_LF2
  482  000013c0  54000000	nop; delay slot nop
  483  000013c4  08000008	j	L2_LF2
  484  000013c8  54000000	nop; delay slot nop
  485  000013cc          	L3_LF2:
  486  000013cc  20010001	addi	r1,r0,#1
  487  000013d0          	L2_LF2:
  488  000013d0  08000004	j	L1_LF2
  489  000013d4  54000000	nop; delay slot nop
  490  000013d8          	L1_LF2:
  491  000013d8  8fa20000	lw	r2,0(r29)
  492  000013dc  8fa30004	lw	r3,4(r29)
  493  000013e0  8fa40008	lw	r4,8(r29)
  494  000013e4  8fdffff8	lw	r31,-8(r30)
  495  000013e8  001ee820	add	r29,r0,r30
  496  000013ec  8fdefffc	lw	r30,-4(r30)
  497  000013f0  4be00000	jr	r31
  498  000013f4  54000000	nop
  499  000013f8          	.endproc _isspace
  500  000013f8          	.align 2
  501  000013f8          	.proc _isxdigit
  502  000013f8          	.global _isxdigit
  503  000013f8          	_isxdigit:
  504                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  505  000013f8  afbefffc	sw	-4(r29),r30; push fp
  506  000013fc  001df020	add	r30,r0,r29; fp = sp
  507  00001400  afbffff8	sw	-8(r29),r31; push ret addr
  508  00001404  2fbd0018	subui	r29,r29,#24; alloc local storage
  509  00001408  afa20000	sw	0(r29),r2
  510  0000140c  afa30004	sw	4(r29),r3
  511  00001410  afa40008	sw	8(r29),r4
  512  00001414  83c20003	lb	r2,3(r30)
  513  00001418  20010000	addi	r1,r0,#0
  514  0000141c  304300ff	andi	r3,r2,#0x00ff
  515  00001420  6c64002f	sgtui	r4,r3,#47
  516  00001424  1080001c	beqz	r4,L7_LF2
  517  00001428  54000000	nop; delay slot nop
  518  0000142c  304300ff	andi	r3,r2,#0x00ff
  519  00001430  70640039	sleui	r4,r3,#57
  520  00001434  1480005c	bnez	r4,L6_LF2
  521  00001438  54000000	nop; delay slot nop
  522  0000143c  08000004	j	L7_LF2
  523  00001440  54000000	nop; delay slot nop
  524  00001444          	L7_LF2:
  525  00001444  304300ff	andi	r3,r2,#0x00ff
  526  00001448  6c640060	sgtui	r4,r3,#96
  527  0000144c  1080001c	beqz	r4,L8_LF2
  528  00001450  54000000	nop; delay slot nop
  529  00001454  304300ff	andi	r3,r2,#0x00ff
  530  00001458  70640066	sleui	r4,r3,#102
  531  0000145c  14800034	bnez	r4,L6_LF2
  532  00001460  54000000	nop; delay slot nop
  533  00001464  08000004	j	L8_LF2
  534  00001468  54000000	nop; delay slot nop
  535  0000146c          	L8_LF2:
  536  0000146c  304300ff	andi	r3,r2,#0x00ff
  537  00001470  6c640040	sgtui	r4,r3,#64
  538  00001474  10800020	beqz	r4,L5_LF2
  539  00001478  54000000	nop; delay slot nop
  540  0000147c  304300ff	andi	r3,r2,#0x00ff
  541  00001480  70640041	sleui	r4,r3,#65
  542  00001484  1480000c	bnez	r4,L6_LF2
  543  00001488  54000000	nop; delay slot nop
  544  0000148c  08000008	j	L5_LF2
  545  00001490  54000000	nop; delay slot nop
  546  00001494          	L6_LF2:
  547  00001494  20010001	addi	r1,r0,#1
  548  00001498          	L5_LF2:
  549  00001498  08000004	j	L4_LF2
  550  0000149c  54000000	nop; delay slot nop
  551  000014a0          	L4_LF2:
  552  000014a0  8fa20000	lw	r2,0(r29)
  553  000014a4  8fa30004	lw	r3,4(r29)
  554  000014a8  8fa40008	lw	r4,8(r29)
  555  000014ac  8fdffff8	lw	r31,-8(r30)
  556  000014b0  001ee820	add	r29,r0,r30
  557  000014b4  8fdefffc	lw	r30,-4(r30)
  558  000014b8  4be00000	jr	r31
  559  000014bc  54000000	nop
  560  000014c0          	.endproc _isxdigit
  561  000014c0          	.align 2
  562  000014c0          	.proc _dstrcpy
  563  000014c0          	.global _dstrcpy
  564  000014c0          	_dstrcpy:
  565                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  566  000014c0  afbefffc	sw	-4(r29),r30; push fp
  567  000014c4  001df020	add	r30,r0,r29; fp = sp
  568  000014c8  afbffff8	sw	-8(r29),r31; push ret addr
  569  000014cc  2fbd0018	subui	r29,r29,#24; alloc local storage
  570  000014d0  afa20000	sw	0(r29),r2
  571  000014d4  afa30004	sw	4(r29),r3
  572  000014d8  8fc10000	lw	r1,(r30)
  573  000014dc  afc1fff4	sw	-12(r30),r1
  574  000014e0          	L10_LF2:
  575  000014e0  8fc10000	lw	r1,(r30)
  576  000014e4  20220001	addi	r2,r1,#1
  577  000014e8  afc20000	sw	(r30),r2
  578  000014ec  8fc20004	lw	r2,4(r30)
  579  000014f0  20430001	addi	r3,r2,#1
  580  000014f4  afc30004	sw	4(r30),r3
  581  000014f8  80420000	lb	r2,(r2)
  582  000014fc  a0220000	sb	(r1),r2
  583  00001500  a3c2fff3	sb	-13(r30),r2
  584  00001504          	L12_LF2:
  585  00001504  93c1fff3	lbu	r1,-13(r30)
  586  00001508  64220000	snei	r2,r1,#0
  587  0000150c  1440000c	bnez	r2,L13_LF2
  588  00001510  54000000	nop; delay slot nop
  589  00001514  0800000c	j	L11_LF2
  590  00001518  54000000	nop; delay slot nop
  591  0000151c          	L13_LF2:
  592  0000151c  0bffffc0	j	L10_LF2
  593  00001520  54000000	nop; delay slot nop
  594  00001524          	L11_LF2:
  595  00001524  8fc1fff4	lw	r1,-12(r30)
  596  00001528  08000004	j	L9_LF2
  597  0000152c  54000000	nop; delay slot nop
  598  00001530          	L9_LF2:
  599  00001530  8fa20000	lw	r2,0(r29)
  600  00001534  8fa30004	lw	r3,4(r29)
  601  00001538  8fdffff8	lw	r31,-8(r30)
  602  0000153c  001ee820	add	r29,r0,r30
  603  00001540  8fdefffc	lw	r30,-4(r30)
  604  00001544  4be00000	jr	r31
  605  00001548  54000000	nop
  606  0000154c          	.endproc _dstrcpy
  607  0000154c          	.align 2
  608  0000154c          	.proc _dstrncpy
  609  0000154c          	.global _dstrncpy
  610  0000154c          	_dstrncpy:
  611                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  612  0000154c  afbefffc	sw	-4(r29),r30; push fp
  613  00001550  001df020	add	r30,r0,r29; fp = sp
  614  00001554  afbffff8	sw	-8(r29),r31; push ret addr
  615  00001558  2fbd0018	subui	r29,r29,#24; alloc local storage
  616  0000155c  afa20000	sw	0(r29),r2
  617  00001560  afa30004	sw	4(r29),r3
  618  00001564  8fc10000	lw	r1,(r30)
  619  00001568  afc1fff4	sw	-12(r30),r1
  620  0000156c          	L15_LF2:
  621  0000156c  8fc10008	lw	r1,8(r30)
  622  00001570  2022ffff	addi	r2,r1,#-1
  623  00001574  afc20008	sw	8(r30),r2
  624  00001578  70210000	slei	r1,r1,#0
  625  0000157c  1020000c	beqz	r1,L18_LF2
  626  00001580  54000000	nop; delay slot nop
  627  00001584  08000048	j	L16_LF2
  628  00001588  54000000	nop; delay slot nop
  629  0000158c          	L18_LF2:
  630  0000158c  8fc10000	lw	r1,(r30)
  631  00001590  20220001	addi	r2,r1,#1
  632  00001594  afc20000	sw	(r30),r2
  633  00001598  8fc20004	lw	r2,4(r30)
  634  0000159c  20430001	addi	r3,r2,#1
  635  000015a0  afc30004	sw	4(r30),r3
  636  000015a4  80420000	lb	r2,(r2)
  637  000015a8  a0220000	sb	(r1),r2
  638  000015ac  a3c2fff3	sb	-13(r30),r2
  639  000015b0          	L17_LF2:
  640  000015b0  93c1fff3	lbu	r1,-13(r30)
  641  000015b4  64220000	snei	r2,r1,#0
  642  000015b8  1440000c	bnez	r2,L19_LF2
  643  000015bc  54000000	nop; delay slot nop
  644  000015c0  0800000c	j	L16_LF2
  645  000015c4  54000000	nop; delay slot nop
  646  000015c8          	L19_LF2:
  647  000015c8  0bffffa0	j	L15_LF2
  648  000015cc  54000000	nop; delay slot nop
  649  000015d0          	L16_LF2:
  650  000015d0  8fc1fff4	lw	r1,-12(r30)
  651  000015d4  08000004	j	L14_LF2
  652  000015d8  54000000	nop; delay slot nop
  653  000015dc          	L14_LF2:
  654  000015dc  8fa20000	lw	r2,0(r29)
  655  000015e0  8fa30004	lw	r3,4(r29)
  656  000015e4  8fdffff8	lw	r31,-8(r30)
  657  000015e8  001ee820	add	r29,r0,r30
  658  000015ec  8fdefffc	lw	r30,-4(r30)
  659  000015f0  4be00000	jr	r31
  660  000015f4  54000000	nop
  661  000015f8          	.endproc _dstrncpy
  662  000015f8          	.align 2
  663  000015f8          	.proc _dstrcat
  664  000015f8          	.global _dstrcat
  665  000015f8          	_dstrcat:
  666                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  667  000015f8  afbefffc	sw	-4(r29),r30; push fp
  668  000015fc  001df020	add	r30,r0,r29; fp = sp
  669  00001600  afbffff8	sw	-8(r29),r31; push ret addr
  670  00001604  2fbd0018	subui	r29,r29,#24; alloc local storage
  671  00001608  afa20000	sw	0(r29),r2
  672  0000160c  8fc10000	lw	r1,(r30)
  673  00001610  afc1fff4	sw	-12(r30),r1
  674  00001614          	L21_LF2:
  675  00001614  8fc10000	lw	r1,(r30)
  676  00001618  90220000	lbu	r2,(r1)
  677  0000161c  64410000	snei	r1,r2,#0
  678  00001620  1420000c	bnez	r1,L23_LF2
  679  00001624  54000000	nop; delay slot nop
  680  00001628  0800001c	j	L22_LF2
  681  0000162c  54000000	nop; delay slot nop
  682  00001630          	L23_LF2:
  683  00001630  8fc20000	lw	r2,(r30)
  684  00001634  20410001	addi	r1,r2,#1
  685  00001638  00011020	add	r2,r0,r1
  686  0000163c  afc20000	sw	(r30),r2
  687  00001640  0bffffd0	j	L21_LF2
  688  00001644  54000000	nop; delay slot nop
  689  00001648          	L22_LF2:
  690  00001648  23bdfff8	addi	r29,r29,#-8
  691  0000164c  001d0820	add	r1,r0,r29
  692  00001650  8fc20000	lw	r2,(r30)
  693  00001654  ac220000	sw	(r1),r2
  694  00001658  8fc20004	lw	r2,4(r30)
  695  0000165c  ac220004	sw	4(r1),r2
  696  00001660  0ffffe5c	jal	_dstrcpy
  697  00001664  54000000	nop; delay slot nop
  698  00001668  23bd0008	addi	r29,r29,#8
  699  0000166c  8fc1fff4	lw	r1,-12(r30)
  700  00001670  08000004	j	L20_LF2
  701  00001674  54000000	nop; delay slot nop
  702  00001678          	L20_LF2:
  703  00001678  8fa20000	lw	r2,0(r29)
  704  0000167c  8fdffff8	lw	r31,-8(r30)
  705  00001680  001ee820	add	r29,r0,r30
  706  00001684  8fdefffc	lw	r30,-4(r30)
  707  00001688  4be00000	jr	r31
  708  0000168c  54000000	nop
  709  00001690          	.endproc _dstrcat
  710  00001690          	.align 2
  711  00001690          	.proc _dstrncmp
  712  00001690          	.global _dstrncmp
  713  00001690          	_dstrncmp:
  714                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  715  00001690  afbefffc	sw	-4(r29),r30; push fp
  716  00001694  001df020	add	r30,r0,r29; fp = sp
  717  00001698  afbffff8	sw	-8(r29),r31; push ret addr
  718  0000169c  2fbd0018	subui	r29,r29,#24; alloc local storage
  719  000016a0  afa20000	sw	0(r29),r2
  720  000016a4  afa30004	sw	4(r29),r3
  721  000016a8  54000000	nop
  722  000016ac  20010000	addi	r1,r0,#0
  723  000016b0  afc1fff4	sw	-12(r30),r1
  724  000016b4          	L25_LF2:
  725  000016b4  8fc1fff4	lw	r1,-12(r30)
  726  000016b8  8fc20008	lw	r2,8(r30)
  727  000016bc  0022082a	slt	r1,r1,r2
  728  000016c0  1420000c	bnez	r1,L28_LF2
  729  000016c4  54000000	nop; delay slot nop
  730  000016c8  08000088	j	L26_LF2
  731  000016cc  54000000	nop; delay slot nop
  732  000016d0          	L28_LF2:
  733  000016d0  8fc10004	lw	r1,4(r30)
  734  000016d4  90220000	lbu	r2,(r1)
  735  000016d8  64410000	snei	r1,r2,#0
  736  000016dc  14200018	bnez	r1,L29_LF2
  737  000016e0  54000000	nop; delay slot nop
  738  000016e4  20010000	addi	r1,r0,#0
  739  000016e8  080000d8	j	L24_LF2
  740  000016ec  54000000	nop; delay slot nop
  741  000016f0  08000028	j	L30_LF2
  742  000016f4  54000000	nop; delay slot nop
  743  000016f8          	L29_LF2:
  744  000016f8  8fc10000	lw	r1,(r30)
  745  000016fc  8fc20004	lw	r2,4(r30)
  746  00001700  90210000	lbu	r1,(r1)
  747  00001704  90420000	lbu	r2,(r2)
  748  00001708  00220829	sne	r1,r1,r2
  749  0000170c  1020000c	beqz	r1,L30_LF2
  750  00001710  54000000	nop; delay slot nop
  751  00001714  0800003c	j	L26_LF2
  752  00001718  54000000	nop; delay slot nop
  753  0000171c          	L31_LF2:
  754  0000171c          	L30_LF2:
  755  0000171c  8fc20000	lw	r2,(r30)
  756  00001720  20410001	addi	r1,r2,#1
  757  00001724  00011020	add	r2,r0,r1
  758  00001728  afc20000	sw	(r30),r2
  759  0000172c  8fc20004	lw	r2,4(r30)
  760  00001730  20410001	addi	r1,r2,#1
  761  00001734  00011020	add	r2,r0,r1
  762  00001738  afc20004	sw	4(r30),r2
  763  0000173c          	L27_LF2:
  764  0000173c  8fc2fff4	lw	r2,-12(r30)
  765  00001740  20410001	addi	r1,r2,#1
  766  00001744  00011020	add	r2,r0,r1
  767  00001748  afc2fff4	sw	-12(r30),r2
  768  0000174c  0bffff64	j	L25_LF2
  769  00001750  54000000	nop; delay slot nop
  770  00001754          	L26_LF2:
  771  00001754  8fc1fff4	lw	r1,-12(r30)
  772  00001758  8fc20008	lw	r2,8(r30)
  773  0000175c  00220828	seq	r1,r1,r2
  774  00001760  10200018	beqz	r1,L32_LF2
  775  00001764  54000000	nop; delay slot nop
  776  00001768  20010000	addi	r1,r0,#0
  777  0000176c  08000054	j	L24_LF2
  778  00001770  54000000	nop; delay slot nop
  779  00001774  0800004c	j	L33_LF2
  780  00001778  54000000	nop; delay slot nop
  781  0000177c          	L32_LF2:
  782  0000177c  8fc20000	lw	r2,(r30)
  783  00001780  90410000	lbu	r1,(r2)
  784  00001784  8fc20004	lw	r2,4(r30)
  785  00001788  90430000	lbu	r3,(r2)
  786  0000178c  00230822	sub	r1,r1,r3
  787  00001790  74220000	sgei	r2,r1,#0
  788  00001794  10400020	beqz	r2,L34_LF2
  789  00001798  54000000	nop; delay slot nop
  790  0000179c  8fc10000	lw	r1,(r30)
  791  000017a0  8fc20004	lw	r2,4(r30)
  792  000017a4  90210000	lbu	r1,(r1)
  793  000017a8  90420000	lbu	r2,(r2)
  794  000017ac  00220829	sne	r1,r1,r2
  795  000017b0  08000008	j	L35_LF2
  796  000017b4  54000000	nop; delay slot nop
  797  000017b8          	L34_LF2:
  798  000017b8  2001ffff	addi	r1,r0,#-1
  799  000017bc          	L35_LF2:
  800  000017bc  08000004	j	L24_LF2
  801  000017c0  54000000	nop; delay slot nop
  802  000017c4          	L33_LF2:
  803  000017c4          	L24_LF2:
  804  000017c4  8fa20000	lw	r2,0(r29)
  805  000017c8  8fa30004	lw	r3,4(r29)
  806  000017cc  8fdffff8	lw	r31,-8(r30)
  807  000017d0  001ee820	add	r29,r0,r30
  808  000017d4  8fdefffc	lw	r30,-4(r30)
  809  000017d8  4be00000	jr	r31
  810  000017dc  54000000	nop
  811  000017e0          	.endproc _dstrncmp
  812  000017e0          	.align 2
  813  000017e0          	.proc _dstrlen
  814  000017e0          	.global _dstrlen
  815  000017e0          	_dstrlen:
  816                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  817  000017e0  afbefffc	sw	-4(r29),r30; push fp
  818  000017e4  001df020	add	r30,r0,r29; fp = sp
  819  000017e8  afbffff8	sw	-8(r29),r31; push ret addr
  820  000017ec  2fbd0018	subui	r29,r29,#24; alloc local storage
  821  000017f0  afa20000	sw	0(r29),r2
  822  000017f4  20010000	addi	r1,r0,#0
  823  000017f8  afc1fff4	sw	-12(r30),r1
  824  000017fc          	L37_LF2:
  825  000017fc  8fc10000	lw	r1,(r30)
  826  00001800  20220001	addi	r2,r1,#1
  827  00001804  afc20000	sw	(r30),r2
  828  00001808  90210000	lbu	r1,(r1)
  829  0000180c  64220000	snei	r2,r1,#0
  830  00001810  1440000c	bnez	r2,L39_LF2
  831  00001814  54000000	nop; delay slot nop
  832  00001818  0800001c	j	L38_LF2
  833  0000181c  54000000	nop; delay slot nop
  834  00001820          	L39_LF2:
  835  00001820  8fc2fff4	lw	r2,-12(r30)
  836  00001824  20410001	addi	r1,r2,#1
  837  00001828  00011020	add	r2,r0,r1
  838  0000182c  afc2fff4	sw	-12(r30),r2
  839  00001830  0bffffc8	j	L37_LF2
  840  00001834  54000000	nop; delay slot nop
  841  00001838          	L38_LF2:
  842  00001838  8fc1fff4	lw	r1,-12(r30)
  843  0000183c  08000004	j	L36_LF2
  844  00001840  54000000	nop; delay slot nop
  845  00001844          	L36_LF2:
  846  00001844  8fa20000	lw	r2,0(r29)
  847  00001848  8fdffff8	lw	r31,-8(r30)
  848  0000184c  001ee820	add	r29,r0,r30
  849  00001850  8fdefffc	lw	r30,-4(r30)
  850  00001854  4be00000	jr	r31
  851  00001858  54000000	nop
  852  0000185c          	.endproc _dstrlen
  853  0000185c          	.align 2
  854  0000185c          	.proc _dstrstr
  855  0000185c          	.global _dstrstr
  856  0000185c          	_dstrstr:
  857                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  858  0000185c  afbefffc	sw	-4(r29),r30; push fp
  859  00001860  001df020	add	r30,r0,r29; fp = sp
  860  00001864  afbffff8	sw	-8(r29),r31; push ret addr
  861  00001868  2fbd0018	subui	r29,r29,#24; alloc local storage
  862  0000186c  afa20000	sw	0(r29),r2
  863  00001870  23bdfff8	addi	r29,r29,#-8
  864  00001874  001d0820	add	r1,r0,r29
  865  00001878  8fc20004	lw	r2,4(r30)
  866  0000187c  ac220000	sw	(r1),r2
  867  00001880  0fffff5c	jal	_dstrlen
  868  00001884  54000000	nop; delay slot nop
  869  00001888  23bd0008	addi	r29,r29,#8
  870  0000188c  afc1fff4	sw	-12(r30),r1
  871  00001890          	L41_LF2:
  872  00001890  8fc10000	lw	r1,(r30)
  873  00001894  90220000	lbu	r2,(r1)
  874  00001898  64410000	snei	r1,r2,#0
  875  0000189c  1420000c	bnez	r1,L43_LF2
  876  000018a0  54000000	nop; delay slot nop
  877  000018a4  08000060	j	L42_LF2
  878  000018a8  54000000	nop; delay slot nop
  879  000018ac          	L43_LF2:
  880  000018ac  23bdfff0	addi	r29,r29,#-16
  881  000018b0  001d0820	add	r1,r0,r29
  882  000018b4  8fc20000	lw	r2,(r30)
  883  000018b8  ac220000	sw	(r1),r2
  884  000018bc  8fc20004	lw	r2,4(r30)
  885  000018c0  ac220004	sw	4(r1),r2
  886  000018c4  8fc2fff4	lw	r2,-12(r30)
  887  000018c8  ac220008	sw	8(r1),r2
  888  000018cc  0ffffdc0	jal	_dstrncmp
  889  000018d0  54000000	nop; delay slot nop
  890  000018d4  23bd0010	addi	r29,r29,#16
  891  000018d8  64220000	snei	r2,r1,#0
  892  000018dc  14400010	bnez	r2,L44_LF2
  893  000018e0  54000000	nop; delay slot nop
  894  000018e4  8fc10000	lw	r1,(r30)
  895  000018e8  08000028	j	L40_LF2
  896  000018ec  54000000	nop; delay slot nop
  897  000018f0          	L44_LF2:
  898  000018f0  8fc20000	lw	r2,(r30)
  899  000018f4  20410001	addi	r1,r2,#1
  900  000018f8  00011020	add	r2,r0,r1
  901  000018fc  afc20000	sw	(r30),r2
  902  00001900  0bffff8c	j	L41_LF2
  903  00001904  54000000	nop; delay slot nop
  904  00001908          	L42_LF2:
  905  00001908  20010000	addi	r1,r0,#0
  906  0000190c  08000004	j	L40_LF2
  907  00001910  54000000	nop; delay slot nop
  908  00001914          	L40_LF2:
  909  00001914  8fa20000	lw	r2,0(r29)
  910  00001918  8fdffff8	lw	r31,-8(r30)
  911  0000191c  001ee820	add	r29,r0,r30
  912  00001920  8fdefffc	lw	r30,-4(r30)
  913  00001924  4be00000	jr	r31
  914  00001928  54000000	nop
  915  0000192c          	.endproc _dstrstr
  916  0000192c          	.align 2
  917  0000192c          	.proc _dmindex
  918  0000192c          	.global _dmindex
  919  0000192c          	_dmindex:
  920                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  921  0000192c  afbefffc	sw	-4(r29),r30; push fp
  922  00001930  001df020	add	r30,r0,r29; fp = sp
  923  00001934  afbffff8	sw	-8(r29),r31; push ret addr
  924  00001938  2fbd0018	subui	r29,r29,#24; alloc local storage
  925  0000193c  afa20000	sw	0(r29),r2
  926  00001940  54000000	nop
  927  00001944          	L46_LF2:
  928  00001944  8fc10000	lw	r1,(r30)
  929  00001948  90220000	lbu	r2,(r1)
  930  0000194c  64410000	snei	r1,r2,#0
  931  00001950  1420000c	bnez	r1,L48_LF2
  932  00001954  54000000	nop; delay slot nop
  933  00001958  08000070	j	L47_LF2
  934  0000195c  54000000	nop; delay slot nop
  935  00001960          	L48_LF2:
  936  00001960  8fc10004	lw	r1,4(r30)
  937  00001964  afc1fff4	sw	-12(r30),r1
  938  00001968          	L49_LF2:
  939  00001968  8fc1fff4	lw	r1,-12(r30)
  940  0000196c  90220000	lbu	r2,(r1)
  941  00001970  64410000	snei	r1,r2,#0
  942  00001974  1420000c	bnez	r1,L52_LF2
  943  00001978  54000000	nop; delay slot nop
  944  0000197c  08000044	j	L50_LF2
  945  00001980  54000000	nop; delay slot nop
  946  00001984          	L52_LF2:
  947  00001984  8fc10000	lw	r1,(r30)
  948  00001988  8fc2fff4	lw	r2,-12(r30)
  949  0000198c  90210000	lbu	r1,(r1)
  950  00001990  90420000	lbu	r2,(r2)
  951  00001994  00220828	seq	r1,r1,r2
  952  00001998  10200010	beqz	r1,L51_LF2
  953  0000199c  54000000	nop; delay slot nop
  954  000019a0  8fc10000	lw	r1,(r30)
  955  000019a4  08000030	j	L45_LF2
  956  000019a8  54000000	nop; delay slot nop
  957  000019ac          	L53_LF2:
  958  000019ac          	L51_LF2:
  959  000019ac  8fc2fff4	lw	r2,-12(r30)
  960  000019b0  20410001	addi	r1,r2,#1
  961  000019b4  00011020	add	r2,r0,r1
  962  000019b8  afc2fff4	sw	-12(r30),r2
  963  000019bc  0bffffa8	j	L49_LF2
  964  000019c0  54000000	nop; delay slot nop
  965  000019c4          	L50_LF2:
  966  000019c4  0bffff7c	j	L46_LF2
  967  000019c8  54000000	nop; delay slot nop
  968  000019cc          	L47_LF2:
  969  000019cc  20010000	addi	r1,r0,#0
  970  000019d0  08000004	j	L45_LF2
  971  000019d4  54000000	nop; delay slot nop
  972  000019d8          	L45_LF2:
  973  000019d8  8fa20000	lw	r2,0(r29)
  974  000019dc  8fdffff8	lw	r31,-8(r30)
  975  000019e0  001ee820	add	r29,r0,r30
  976  000019e4  8fdefffc	lw	r30,-4(r30)
  977  000019e8  4be00000	jr	r31
  978  000019ec  54000000	nop
  979  000019f0          	.endproc _dmindex
  980  000019f0          	.align 2
  981  000019f0          	.proc _dindex
  982  000019f0          	.global _dindex
  983  000019f0          	_dindex:
  984                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  985  000019f0  afbefffc	sw	-4(r29),r30; push fp
  986  000019f4  001df020	add	r30,r0,r29; fp = sp
  987  000019f8  afbffff8	sw	-8(r29),r31; push ret addr
  988  000019fc  2fbd0010	subui	r29,r29,#16; alloc local storage
  989  00001a00  afa20000	sw	0(r29),r2
  990  00001a04  54000000	nop
  991  00001a08          	L55_LF2:
  992  00001a08  8fc10000	lw	r1,(r30)
  993  00001a0c  90220000	lbu	r2,(r1)
  994  00001a10  64410000	snei	r1,r2,#0
  995  00001a14  1420000c	bnez	r1,L57_LF2
  996  00001a18  54000000	nop; delay slot nop
  997  00001a1c  08000040	j	L56_LF2
  998  00001a20  54000000	nop; delay slot nop
  999  00001a24          	L57_LF2:
 1000  00001a24  8fc10000	lw	r1,(r30)
 1001  00001a28  90220000	lbu	r2,(r1)
 1002  00001a2c  8fc10004	lw	r1,4(r30)
 1003  00001a30  00411028	seq	r2,r2,r1
 1004  00001a34  10400010	beqz	r2,L58_LF2
 1005  00001a38  54000000	nop; delay slot nop
 1006  00001a3c  8fc10000	lw	r1,(r30)
 1007  00001a40  08000028	j	L54_LF2
 1008  00001a44  54000000	nop; delay slot nop
 1009  00001a48          	L58_LF2:
 1010  00001a48  8fc20000	lw	r2,(r30)
 1011  00001a4c  20410001	addi	r1,r2,#1
 1012  00001a50  00011020	add	r2,r0,r1
 1013  00001a54  afc20000	sw	(r30),r2
 1014  00001a58  0bffffac	j	L55_LF2
 1015  00001a5c  54000000	nop; delay slot nop
 1016  00001a60          	L56_LF2:
 1017  00001a60  20010000	addi	r1,r0,#0
 1018  00001a64  08000004	j	L54_LF2
 1019  00001a68  54000000	nop; delay slot nop
 1020  00001a6c          	L54_LF2:
 1021  00001a6c  8fa20000	lw	r2,0(r29)
 1022  00001a70  8fdffff8	lw	r31,-8(r30)
 1023  00001a74  001ee820	add	r29,r0,r30
 1024  00001a78  8fdefffc	lw	r30,-4(r30)
 1025  00001a7c  4be00000	jr	r31
 1026  00001a80  54000000	nop
 1027  00001a84          	.endproc _dindex
 1028  00001a84          	.align 2
 1029  00001a84          	.proc _ditoa
 1030  00001a84          	.global _ditoa
 1031  00001a84          	_ditoa:
 1032                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1033  00001a84  afbefffc	sw	-4(r29),r30; push fp
 1034  00001a88  001df020	add	r30,r0,r29; fp = sp
 1035  00001a8c  afbffff8	sw	-8(r29),r31; push ret addr
 1036  00001a90  2fbd0018	subui	r29,r29,#24; alloc local storage
 1037  00001a94  afa20000	sw	0(r29),r2
 1038  00001a98  afa30004	sw	4(r29),r3
 1039  00001a9c  8fc10000	lw	r1,(r30)
 1040  00001aa0  68220000	slti	r2,r1,#0
 1041  00001aa4  1040002c	beqz	r2,L60_LF2
 1042  00001aa8  54000000	nop; delay slot nop
 1043  00001aac  8fc10004	lw	r1,4(r30)
 1044  00001ab0  20220001	addi	r2,r1,#1
 1045  00001ab4  afc20004	sw	4(r30),r2
 1046  00001ab8  2002002d	addi	r2,r0,(#0x2d)&0xff
 1047  00001abc  a0220000	sb	(r1),r2
 1048  00001ac0  8fc10000	lw	r1,(r30)
 1049  00001ac4  00011022	sub	r2,r0,r1
 1050  00001ac8  afc20000	sw	(r30),r2
 1051  00001acc  08000118	j	L61_LF2
 1052  00001ad0  54000000	nop; delay slot nop
 1053  00001ad4          	L60_LF2:
 1054  00001ad4  8fc10000	lw	r1,(r30)
 1055  00001ad8  64220000	snei	r2,r1,#0
 1056  00001adc  14400020	bnez	r2,L62_LF2
 1057  00001ae0  54000000	nop; delay slot nop
 1058  00001ae4  8fc10004	lw	r1,4(r30)
 1059  00001ae8  20220001	addi	r2,r1,#1
 1060  00001aec  afc20004	sw	4(r30),r2
 1061  00001af0  20020030	addi	r2,r0,(#0x30)&0xff
 1062  00001af4  a0220000	sb	(r1),r2
 1063  00001af8  080000ec	j	L61_LF2
 1064  00001afc  54000000	nop; delay slot nop
 1065  00001b00          	L62_LF2:
 1066  00001b00  20010001	addi	r1,r0,#1
 1067  00001b04  afc1fff4	sw	-12(r30),r1
 1068  00001b08          	L64_LF2:
 1069  00001b08  8fc1fff4	lw	r1,-12(r30)
 1070  00001b0c  8fc20000	lw	r2,(r30)
 1071  00001b10  0022082c	sle	r1,r1,r2
 1072  00001b14  1420000c	bnez	r1,L66_LF2
 1073  00001b18  54000000	nop; delay slot nop
 1074  00001b1c  08000024	j	L65_LF2
 1075  00001b20  54000000	nop; delay slot nop
 1076  00001b24          	L67_LF2:
 1077  00001b24          	L66_LF2:
 1078  00001b24  8fc1fff4	lw	r1,-12(r30)
 1079  00001b28  00011820	add	r3,r0,r1
 1080  00001b2c  50620002	slli	r2,r3,#0x2
 1081  00001b30  00411020	add	r2,r2,r1
 1082  00001b34  50410001	slli	r1,r2,#0x1
 1083  00001b38  afc1fff4	sw	-12(r30),r1
 1084  00001b3c  0bffffc8	j	L64_LF2
 1085  00001b40  54000000	nop; delay slot nop
 1086  00001b44          	L65_LF2:
 1087  00001b44  54000000	nop
 1088  00001b48          	L68_LF2:
 1089  00001b48  8fc1fff4	lw	r1,-12(r30)
 1090  00001b4c  2002000a	addi	r2,r0,#10
 1091  00001b50  00200035	movi2fp	f0,r1
 1092  00001b54  00400835	movi2fp	f1,r2
 1093  00001b58  0401000f	div	f0,f0,f1
 1094  00001b5c  00000834	movfp2i	r1,f0
 1095  00001b60  afc1fff4	sw	-12(r30),r1
 1096  00001b64  8fc10004	lw	r1,4(r30)
 1097  00001b68  20220001	addi	r2,r1,#1
 1098  00001b6c  afc20004	sw	4(r30),r2
 1099  00001b70  8fc20000	lw	r2,(r30)
 1100  00001b74  8fc3fff4	lw	r3,-12(r30)
 1101  00001b78  00400035	movi2fp	f0,r2
 1102  00001b7c  00600835	movi2fp	f1,r3
 1103  00001b80  0401000f	div	f0,f0,f1
 1104  00001b84  00001034	movfp2i	r2,f0
 1105  00001b88  00021820	add	r3,r0,r2
 1106  00001b8c  20620030	addi	r2,r3,#48
 1107  00001b90  a0220000	sb	(r1),r2
 1108  00001b94  8fc10000	lw	r1,(r30)
 1109  00001b98  8fc3fff4	lw	r3,-12(r30)
 1110  00001b9c  00200035	movi2fp	f0,r1
 1111  00001ba0  00600835	movi2fp	f1,r3
 1112  00001ba4  0401000f	div	f0,f0,f1
 1113  00001ba8  00001034	movfp2i	r2,f0
 1114  00001bac  8fc3fff4	lw	r3,-12(r30)
 1115  00001bb0  00400035	movi2fp	f0,r2
 1116  00001bb4  00600835	movi2fp	f1,r3
 1117  00001bb8  0401000e	mult	f0,f0,f1
 1118  00001bbc  00001034	movfp2i	r2,f0
 1119  00001bc0  00220822	sub	r1,r1,r2
 1120  00001bc4  afc10000	sw	(r30),r1
 1121  00001bc8          	L70_LF2:
 1122  00001bc8  8fc1fff4	lw	r1,-12(r30)
 1123  00001bcc  6c220001	sgti	r2,r1,#1
 1124  00001bd0  1440000c	bnez	r2,L71_LF2
 1125  00001bd4  54000000	nop; delay slot nop
 1126  00001bd8  0800000c	j	L61_LF2
 1127  00001bdc  54000000	nop; delay slot nop
 1128  00001be0          	L71_LF2:
 1129  00001be0  0bffff64	j	L68_LF2
 1130  00001be4  54000000	nop; delay slot nop
 1131  00001be8          	L69_LF2:
 1132  00001be8          	L63_LF2:
 1133  00001be8          	L61_LF2:
 1134  00001be8  8fc10004	lw	r1,4(r30)
 1135  00001bec  20020000	addi	r2,r0,(#0x0)&0xff
 1136  00001bf0  a0220000	sb	(r1),r2
 1137  00001bf4          	L59_LF2:
 1138  00001bf4  8fa20000	lw	r2,0(r29)
 1139  00001bf8  8fa30004	lw	r3,4(r29)
 1140  00001bfc  8fdffff8	lw	r31,-8(r30)
 1141  00001c00  001ee820	add	r29,r0,r30
 1142  00001c04  8fdefffc	lw	r30,-4(r30)
 1143  00001c08  4be00000	jr	r31
 1144  00001c0c  54000000	nop
 1145  00001c10          	.endproc _ditoa
 1146  00001c10          	.align 2
 1147  00001c10          	.proc _dstrtol
 1148  00001c10          	.global _dstrtol
 1149  00001c10          	_dstrtol:
 1150                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1151  00001c10  afbefffc	sw	-4(r29),r30; push fp
 1152  00001c14  001df020	add	r30,r0,r29; fp = sp
 1153  00001c18  afbffff8	sw	-8(r29),r31; push ret addr
 1154  00001c1c  2fbd0020	subui	r29,r29,#32; alloc local storage
 1155  00001c20  afa20000	sw	0(r29),r2
 1156  00001c24  20010000	addi	r1,r0,#0
 1157  00001c28  afc1fff4	sw	-12(r30),r1
 1158  00001c2c          	L73_LF2:
 1159  00001c2c  8fc10000	lw	r1,(r30)
 1160  00001c30  90220000	lbu	r2,(r1)
 1161  00001c34  60410020	seqi	r1,r2,#32
 1162  00001c38  14200034	bnez	r1,L75_LF2
 1163  00001c3c  54000000	nop; delay slot nop
 1164  00001c40  8fc10000	lw	r1,(r30)
 1165  00001c44  90220000	lbu	r2,(r1)
 1166  00001c48  60410009	seqi	r1,r2,#9
 1167  00001c4c  14200020	bnez	r1,L75_LF2
 1168  00001c50  54000000	nop; delay slot nop
 1169  00001c54  8fc10000	lw	r1,(r30)
 1170  00001c58  90220000	lbu	r2,(r1)
 1171  00001c5c  6041000a	seqi	r1,r2,#10
 1172  00001c60  1420000c	bnez	r1,L75_LF2
 1173  00001c64  54000000	nop; delay slot nop
 1174  00001c68  0800001c	j	L74_LF2
 1175  00001c6c  54000000	nop; delay slot nop
 1176  00001c70          	L75_LF2:
 1177  00001c70  8fc20000	lw	r2,(r30)
 1178  00001c74  20410001	addi	r1,r2,#1
 1179  00001c78  00011020	add	r2,r0,r1
 1180  00001c7c  afc20000	sw	(r30),r2
 1181  00001c80  0bffffa8	j	L73_LF2
 1182  00001c84  54000000	nop; delay slot nop
 1183  00001c88          	L74_LF2:
 1184  00001c88  8fc10004	lw	r1,4(r30)
 1185  00001c8c  64220000	snei	r2,r1,#0
 1186  00001c90  10400010	beqz	r2,L76_LF2
 1187  00001c94  54000000	nop; delay slot nop
 1188  00001c98  8fc10004	lw	r1,4(r30)
 1189  00001c9c  8fc20000	lw	r2,(r30)
 1190  00001ca0  ac220000	sw	(r1),r2
 1191  00001ca4          	L76_LF2:
 1192  00001ca4  8fc10000	lw	r1,(r30)
 1193  00001ca8  90220000	lbu	r2,(r1)
 1194  00001cac  64410000	snei	r1,r2,#0
 1195  00001cb0  14200010	bnez	r1,L77_LF2
 1196  00001cb4  54000000	nop; delay slot nop
 1197  00001cb8  8fc1fff4	lw	r1,-12(r30)
 1198  00001cbc  08000294	j	L72_LF2
 1199  00001cc0  54000000	nop; delay slot nop
 1200  00001cc4          	L77_LF2:
 1201  00001cc4  8fc10000	lw	r1,(r30)
 1202  00001cc8  90220000	lbu	r2,(r1)
 1203  00001ccc  6041002d	seqi	r1,r2,#45
 1204  00001cd0  10200024	beqz	r1,L78_LF2
 1205  00001cd4  54000000	nop; delay slot nop
 1206  00001cd8  2001ffff	addi	r1,r0,#-1
 1207  00001cdc  afc1ffec	sw	-20(r30),r1
 1208  00001ce0  8fc20000	lw	r2,(r30)
 1209  00001ce4  20410001	addi	r1,r2,#1
 1210  00001ce8  00011020	add	r2,r0,r1
 1211  00001cec  afc20000	sw	(r30),r2
 1212  00001cf0  0800000c	j	L79_LF2
 1213  00001cf4  54000000	nop; delay slot nop
 1214  00001cf8          	L78_LF2:
 1215  00001cf8  20010001	addi	r1,r0,#1
 1216  00001cfc  afc1ffec	sw	-20(r30),r1
 1217  00001d00          	L79_LF2:
 1218  00001d00  8fc10008	lw	r1,8(r30)
 1219  00001d04  64220000	snei	r2,r1,#0
 1220  00001d08  14400090	bnez	r2,L80_LF2
 1221  00001d0c  54000000	nop; delay slot nop
 1222  00001d10  8fc10000	lw	r1,(r30)
 1223  00001d14  90220000	lbu	r2,(r1)
 1224  00001d18  60410030	seqi	r1,r2,#48
 1225  00001d1c  10200074	beqz	r1,L81_LF2
 1226  00001d20  54000000	nop; delay slot nop
 1227  00001d24  8fc20000	lw	r2,(r30)
 1228  00001d28  20410001	addi	r1,r2,#1
 1229  00001d2c  00011020	add	r2,r0,r1
 1230  00001d30  afc20000	sw	(r30),r2
 1231  00001d34  8fc10000	lw	r1,(r30)
 1232  00001d38  90220000	lbu	r2,(r1)
 1233  00001d3c  60410078	seqi	r1,r2,#120
 1234  00001d40  14200020	bnez	r1,L83_LF2
 1235  00001d44  54000000	nop; delay slot nop
 1236  00001d48  8fc10000	lw	r1,(r30)
 1237  00001d4c  90220000	lbu	r2,(r1)
 1238  00001d50  60410058	seqi	r1,r2,#88
 1239  00001d54  1420000c	bnez	r1,L83_LF2
 1240  00001d58  54000000	nop; delay slot nop
 1241  00001d5c  08000024	j	L82_LF2
 1242  00001d60  54000000	nop; delay slot nop
 1243  00001d64          	L83_LF2:
 1244  00001d64  20010010	addi	r1,r0,#16
 1245  00001d68  afc10008	sw	8(r30),r1
 1246  00001d6c  8fc20000	lw	r2,(r30)
 1247  00001d70  20410001	addi	r1,r2,#1
 1248  00001d74  00011020	add	r2,r0,r1
 1249  00001d78  afc20000	sw	(r30),r2
 1250  00001d7c  0800000c	j	L84_LF2
 1251  00001d80  54000000	nop; delay slot nop
 1252  00001d84          	L82_LF2:
 1253  00001d84  20010008	addi	r1,r0,#8
 1254  00001d88  afc10008	sw	8(r30),r1
 1255  00001d8c          	L84_LF2:
 1256  00001d8c  0800000c	j	L80_LF2
 1257  00001d90  54000000	nop; delay slot nop
 1258  00001d94          	L81_LF2:
 1259  00001d94  2001000a	addi	r1,r0,#10
 1260  00001d98  afc10008	sw	8(r30),r1
 1261  00001d9c          	L85_LF2:
 1262  00001d9c          	L80_LF2:
 1263  00001d9c  8fc10008	lw	r1,8(r30)
 1264  00001da0  70220000	slei	r2,r1,#0
 1265  00001da4  1440001c	bnez	r2,L87_LF2
 1266  00001da8  54000000	nop; delay slot nop
 1267  00001dac  8fc10008	lw	r1,8(r30)
 1268  00001db0  6c220010	sgti	r2,r1,#16
 1269  00001db4  1440000c	bnez	r2,L87_LF2
 1270  00001db8  54000000	nop; delay slot nop
 1271  00001dbc  08000010	j	L86_LF2
 1272  00001dc0  54000000	nop; delay slot nop
 1273  00001dc4          	L87_LF2:
 1274  00001dc4  8fc1fff4	lw	r1,-12(r30)
 1275  00001dc8  08000188	j	L72_LF2
 1276  00001dcc  54000000	nop; delay slot nop
 1277  00001dd0          	L86_LF2:
 1278  00001dd0  54000000	nop
 1279  00001dd4          	L88_LF2:
 1280  00001dd4  8fc10000	lw	r1,(r30)
 1281  00001dd8  90220000	lbu	r2,(r1)
 1282  00001ddc  6c41002f	sgtui	r1,r2,#47
 1283  00001de0  10200030	beqz	r1,L91_LF2
 1284  00001de4  54000000	nop; delay slot nop
 1285  00001de8  8fc10000	lw	r1,(r30)
 1286  00001dec  90220000	lbu	r2,(r1)
 1287  00001df0  70410039	sleui	r1,r2,#57
 1288  00001df4  1020001c	beqz	r1,L91_LF2
 1289  00001df8  54000000	nop; delay slot nop
 1290  00001dfc  8fc10000	lw	r1,(r30)
 1291  00001e00  90220000	lbu	r2,(r1)
 1292  00001e04  2041ffd0	addi	r1,r2,#-48
 1293  00001e08  afc1fff0	sw	-16(r30),r1
 1294  00001e0c  0800008c	j	L92_LF2
 1295  00001e10  54000000	nop; delay slot nop
 1296  00001e14          	L91_LF2:
 1297  00001e14  8fc10000	lw	r1,(r30)
 1298  00001e18  90220000	lbu	r2,(r1)
 1299  00001e1c  6c410060	sgtui	r1,r2,#96
 1300  00001e20  10200030	beqz	r1,L93_LF2
 1301  00001e24  54000000	nop; delay slot nop
 1302  00001e28  8fc10000	lw	r1,(r30)
 1303  00001e2c  90220000	lbu	r2,(r1)
 1304  00001e30  7041007a	sleui	r1,r2,#122
 1305  00001e34  1020001c	beqz	r1,L93_LF2
 1306  00001e38  54000000	nop; delay slot nop
 1307  00001e3c  8fc10000	lw	r1,(r30)
 1308  00001e40  90220000	lbu	r2,(r1)
 1309  00001e44  2041ffa9	addi	r1,r2,#-87
 1310  00001e48  afc1fff0	sw	-16(r30),r1
 1311  00001e4c  0800004c	j	L92_LF2
 1312  00001e50  54000000	nop; delay slot nop
 1313  00001e54          	L93_LF2:
 1314  00001e54  8fc10000	lw	r1,(r30)
 1315  00001e58  90220000	lbu	r2,(r1)
 1316  00001e5c  6c410040	sgtui	r1,r2,#64
 1317  00001e60  10200030	beqz	r1,L95_LF2
 1318  00001e64  54000000	nop; delay slot nop
 1319  00001e68  8fc10000	lw	r1,(r30)
 1320  00001e6c  90220000	lbu	r2,(r1)
 1321  00001e70  7041005a	sleui	r1,r2,#90
 1322  00001e74  1020001c	beqz	r1,L95_LF2
 1323  00001e78  54000000	nop; delay slot nop
 1324  00001e7c  8fc10000	lw	r1,(r30)
 1325  00001e80  90220000	lbu	r2,(r1)
 1326  00001e84  2041ffc9	addi	r1,r2,#-55
 1327  00001e88  afc1fff0	sw	-16(r30),r1
 1328  00001e8c  0800000c	j	L92_LF2
 1329  00001e90  54000000	nop; delay slot nop
 1330  00001e94          	L95_LF2:
 1331  00001e94  200103e8	addi	r1,r0,#1000
 1332  00001e98  afc1fff0	sw	-16(r30),r1
 1333  00001e9c          	L96_LF2:
 1334  00001e9c          	L94_LF2:
 1335  00001e9c          	L92_LF2:
 1336  00001e9c  8fc1fff0	lw	r1,-16(r30)
 1337  00001ea0  8fc20008	lw	r2,8(r30)
 1338  00001ea4  0022082a	slt	r1,r1,r2
 1339  00001ea8  10200040	beqz	r1,L90_LF2
 1340  00001eac  54000000	nop; delay slot nop
 1341  00001eb0  8fc1fff4	lw	r1,-12(r30)
 1342  00001eb4  8fc20008	lw	r2,8(r30)
 1343  00001eb8  00200035	movi2fp	f0,r1
 1344  00001ebc  00400835	movi2fp	f1,r2
 1345  00001ec0  0401000e	mult	f0,f0,f1
 1346  00001ec4  00000834	movfp2i	r1,f0
 1347  00001ec8  afc1fff4	sw	-12(r30),r1
 1348  00001ecc  8fc1fff4	lw	r1,-12(r30)
 1349  00001ed0  8fc2fff0	lw	r2,-16(r30)
 1350  00001ed4  00220820	add	r1,r1,r2
 1351  00001ed8  afc1fff4	sw	-12(r30),r1
 1352  00001edc  8fc20000	lw	r2,(r30)
 1353  00001ee0  20410001	addi	r1,r2,#1
 1354  00001ee4  00011020	add	r2,r0,r1
 1355  00001ee8  afc20000	sw	(r30),r2
 1356  00001eec          	L97_LF2:
 1357  00001eec          	L90_LF2:
 1358  00001eec  8fc1fff0	lw	r1,-16(r30)
 1359  00001ef0  8fc20008	lw	r2,8(r30)
 1360  00001ef4  0022082a	slt	r1,r1,r2
 1361  00001ef8  1420000c	bnez	r1,L98_LF2
 1362  00001efc  54000000	nop; delay slot nop
 1363  00001f00  0800000c	j	L89_LF2
 1364  00001f04  54000000	nop; delay slot nop
 1365  00001f08          	L98_LF2:
 1366  00001f08  0bfffec8	j	L88_LF2
 1367  00001f0c  54000000	nop; delay slot nop
 1368  00001f10          	L89_LF2:
 1369  00001f10  8fc10004	lw	r1,4(r30)
 1370  00001f14  64220000	snei	r2,r1,#0
 1371  00001f18  10400010	beqz	r2,L99_LF2
 1372  00001f1c  54000000	nop; delay slot nop
 1373  00001f20  8fc10004	lw	r1,4(r30)
 1374  00001f24  8fc20000	lw	r2,(r30)
 1375  00001f28  ac220000	sw	(r1),r2
 1376  00001f2c          	L99_LF2:
 1377  00001f2c  8fc1fff4	lw	r1,-12(r30)
 1378  00001f30  8fc2ffec	lw	r2,-20(r30)
 1379  00001f34  00200035	movi2fp	f0,r1
 1380  00001f38  00400835	movi2fp	f1,r2
 1381  00001f3c  0401000e	mult	f0,f0,f1
 1382  00001f40  00000834	movfp2i	r1,f0
 1383  00001f44  afc1fff4	sw	-12(r30),r1
 1384  00001f48  8fc1fff4	lw	r1,-12(r30)
 1385  00001f4c  08000004	j	L72_LF2
 1386  00001f50  54000000	nop; delay slot nop
 1387  00001f54          	L72_LF2:
 1388  00001f54  8fa20000	lw	r2,0(r29)
 1389  00001f58  8fdffff8	lw	r31,-8(r30)
 1390  00001f5c  001ee820	add	r29,r0,r30
 1391  00001f60  8fdefffc	lw	r30,-4(r30)
 1392  00001f64  4be00000	jr	r31
 1393  00001f68  54000000	nop
 1394  00001f6c          	.endproc _dstrtol
 1395  00001f6c          	.align 2
 1396  00001f6c          	.proc _bcopy
 1397  00001f6c          	.global _bcopy
 1398  00001f6c          	_bcopy:
 1399                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1400  00001f6c  afbefffc	sw	-4(r29),r30; push fp
 1401  00001f70  001df020	add	r30,r0,r29; fp = sp
 1402  00001f74  afbffff8	sw	-8(r29),r31; push ret addr
 1403  00001f78  2fbd0010	subui	r29,r29,#16; alloc local storage
 1404  00001f7c  afa20000	sw	0(r29),r2
 1405  00001f80  afa30004	sw	4(r29),r3
 1406  00001f84  54000000	nop
 1407  00001f88          	L101_LF2:
 1408  00001f88  8fc10008	lw	r1,8(r30)
 1409  00001f8c  2022ffff	addi	r2,r1,#-1
 1410  00001f90  afc20008	sw	8(r30),r2
 1411  00001f94  6c210000	sgti	r1,r1,#0
 1412  00001f98  1420000c	bnez	r1,L103_LF2
 1413  00001f9c  54000000	nop; delay slot nop
 1414  00001fa0  0800002c	j	L102_LF2
 1415  00001fa4  54000000	nop; delay slot nop
 1416  00001fa8          	L103_LF2:
 1417  00001fa8  8fc10004	lw	r1,4(r30)
 1418  00001fac  20220001	addi	r2,r1,#1
 1419  00001fb0  afc20004	sw	4(r30),r2
 1420  00001fb4  8fc20000	lw	r2,(r30)
 1421  00001fb8  20430001	addi	r3,r2,#1
 1422  00001fbc  afc30000	sw	(r30),r3
 1423  00001fc0  80420000	lb	r2,(r2)
 1424  00001fc4  a0220000	sb	(r1),r2
 1425  00001fc8  0bffffbc	j	L101_LF2
 1426  00001fcc  54000000	nop; delay slot nop
 1427  00001fd0          	L102_LF2:
 1428  00001fd0          	L100_LF2:
 1429  00001fd0  8fa20000	lw	r2,0(r29)
 1430  00001fd4  8fa30004	lw	r3,4(r29)
 1431  00001fd8  8fdffff8	lw	r31,-8(r30)
 1432  00001fdc  001ee820	add	r29,r0,r30
 1433  00001fe0  8fdefffc	lw	r30,-4(r30)
 1434  00001fe4  4be00000	jr	r31
 1435  00001fe8  54000000	nop
 1436  00001fec          	.endproc _bcopy
 1437  00001fec          	.align 2
 1438  00001fec          	.proc _bzero
 1439  00001fec          	.global _bzero
 1440  00001fec          	_bzero:
 1441                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1442  00001fec  afbefffc	sw	-4(r29),r30; push fp
 1443  00001ff0  001df020	add	r30,r0,r29; fp = sp
 1444  00001ff4  afbffff8	sw	-8(r29),r31; push ret addr
 1445  00001ff8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1446  00001ffc  afa20000	sw	0(r29),r2
 1447  00002000  54000000	nop
 1448  00002004          	L105_LF2:
 1449  00002004  8fc10004	lw	r1,4(r30)
 1450  00002008  2022ffff	addi	r2,r1,#-1
 1451  0000200c  afc20004	sw	4(r30),r2
 1452  00002010  6c210000	sgti	r1,r1,#0
 1453  00002014  1420000c	bnez	r1,L107_LF2
 1454  00002018  54000000	nop; delay slot nop
 1455  0000201c  08000020	j	L106_LF2
 1456  00002020  54000000	nop; delay slot nop
 1457  00002024          	L107_LF2:
 1458  00002024  8fc10000	lw	r1,(r30)
 1459  00002028  20220001	addi	r2,r1,#1
 1460  0000202c  afc20000	sw	(r30),r2
 1461  00002030  20020000	addi	r2,r0,(#0x0)&0xff
 1462  00002034  a0220000	sb	(r1),r2
 1463  00002038  0bffffc8	j	L105_LF2
 1464  0000203c  54000000	nop; delay slot nop
 1465  00002040          	L106_LF2:
 1466  00002040          	L104_LF2:
 1467  00002040  8fa20000	lw	r2,0(r29)
 1468  00002044  8fdffff8	lw	r31,-8(r30)
 1469  00002048  001ee820	add	r29,r0,r30
 1470  0000204c  8fdefffc	lw	r30,-4(r30)
 1471  00002050  4be00000	jr	r31
 1472  00002054  54000000	nop
 1473  00002058          	.endproc _bzero
 1474  00002058          	.align 2
 1475  00002058          	.proc _min
 1476  00002058          	.global _min
 1477  00002058          	_min:
 1478                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1479  00002058  afbefffc	sw	-4(r29),r30; push fp
 1480  0000205c  001df020	add	r30,r0,r29; fp = sp
 1481  00002060  afbffff8	sw	-8(r29),r31; push ret addr
 1482  00002064  2fbd0010	subui	r29,r29,#16; alloc local storage
 1483  00002068  afa20000	sw	0(r29),r2
 1484  0000206c  afa30004	sw	4(r29),r3
 1485  00002070  8fc10000	lw	r1,(r30)
 1486  00002074  8fc20004	lw	r2,4(r30)
 1487  00002078  0022182c	sle	r3,r1,r2
 1488  0000207c  14600008	bnez	r3,L109_LF2
 1489  00002080  54000000	nop; delay slot nop
 1490  00002084  8fc10004	lw	r1,4(r30)
 1491  00002088          	L109_LF2:
 1492  00002088  08000004	j	L108_LF2
 1493  0000208c  54000000	nop; delay slot nop
 1494  00002090          	L108_LF2:
 1495  00002090  8fa20000	lw	r2,0(r29)
 1496  00002094  8fa30004	lw	r3,4(r29)
 1497  00002098  8fdffff8	lw	r31,-8(r30)
 1498  0000209c  001ee820	add	r29,r0,r30
 1499  000020a0  8fdefffc	lw	r30,-4(r30)
 1500  000020a4  4be00000	jr	r31
 1501  000020a8  54000000	nop
 1502  000020ac          	.endproc _min
 1503  000020ac          	.align 2
 1504  000020ac          	.proc _max
 1505  000020ac          	.global _max
 1506  000020ac          	_max:
 1507                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1508  000020ac  afbefffc	sw	-4(r29),r30; push fp
 1509  000020b0  001df020	add	r30,r0,r29; fp = sp
 1510  000020b4  afbffff8	sw	-8(r29),r31; push ret addr
 1511  000020b8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1512  000020bc  afa20000	sw	0(r29),r2
 1513  000020c0  afa30004	sw	4(r29),r3
 1514  000020c4  8fc10000	lw	r1,(r30)
 1515  000020c8  8fc20004	lw	r2,4(r30)
 1516  000020cc  0022182d	sge	r3,r1,r2
 1517  000020d0  14600008	bnez	r3,L111_LF2
 1518  000020d4  54000000	nop; delay slot nop
 1519  000020d8  8fc10004	lw	r1,4(r30)
 1520  000020dc          	L111_LF2:
 1521  000020dc  08000004	j	L110_LF2
 1522  000020e0  54000000	nop; delay slot nop
 1523  000020e4          	L110_LF2:
 1524  000020e4  8fa20000	lw	r2,0(r29)
 1525  000020e8  8fa30004	lw	r3,4(r29)
 1526  000020ec  8fdffff8	lw	r31,-8(r30)
 1527  000020f0  001ee820	add	r29,r0,r30
 1528  000020f4  8fdefffc	lw	r30,-4(r30)
 1529  000020f8  4be00000	jr	r31
 1530  000020fc  54000000	nop
 1531  00002100          	.endproc _max
 1532                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1533                      ;;;
 1534                      ;;; Most of the traps are called in files from libtraps.
 1537  00002100          	.align 2
 1538  00002100          	.proc _exit
 1539  00002100          	.global _exit
 1540  00002100          	_exit:
 1541  00002100  44000300	trap	#0x300
 1542  00002104  4be00000	jr	r31
 1543  00002108  54000000	nop
 1544  0000210c          	.endproc _exit
 1546                      ; for the benefit of gcc.
 1547  0000210c          	.proc ___main
 1548  0000210c          	.global ___main
 1549  0000210c          	___main:
 1550  0000210c  4be00000	jr	r31
 1551  00002110  54000000	nop
 1552  00002114          	.endproc ___main
 1553  00002114          	.text
 1554  00002114          	.global _etext
 1555  00002114          	_etext:
 1556  00002114          	.align 3
 1557  00002118          	.data
 1558  000030a9          	.global _edata
 1559  000030a9          	_edata:
