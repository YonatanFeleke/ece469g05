 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 212
    4                      ; Text size: 4440
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f70726f	
   82  00003018  63735f63	
   82  0000301c  6f6d706c	
   82  00003020  65746564	
   82  00003024  5f73656d	
   82  00003028  6170686f	
   82  0000302c  72653e0a	
   82  00003030  00      	
   83  00003031          	.align 2
   84  00003034          	LC1_LF0:
   85  00003034  73746163	.ascii "stack_grow (%d): Initializing array of size 10000 (stack larger than o"
   85  00003038  6b5f6772	
   85  0000303c  6f772028	
   85  00003040  2564293a	
   85  00003044  20496e69	
   85  00003048  7469616c	
   85  0000304c  697a696e	
   85  00003050  67206172	
   85  00003054  72617920	
   85  00003058  6f662073	
   85  0000305c  697a6520	
   85  00003060  31303030	
   85  00003064  30202873	
   85  00003068  7461636b	
   85  0000306c  206c6172	
   85  00003070  67657220	
   85  00003074  7468616e	
   85  00003078  206f    	
   86  0000307a  6e652070	.ascii "ne page)\n\000"
   86  0000307e  61676529	
   86  00003082  0a00    	
   87  00003084          	.align 2
   88  00003084          	LC2_LF0:
   89  00003084  73746163	.ascii "stack_grow (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   89  00003088  6b5f6772	
   89  0000308c  6f772028	
   89  00003090  2564293a	
   89  00003094  20426164	
   89  00003098  2073656d	
   89  0000309c  6170686f	
   89  000030a0  72652073	
   89  000030a4  5f70726f	
   89  000030a8  63735f63	
   89  000030ac  6f6d706c	
   89  000030b0  65746564	
   89  000030b4  20282564	
   89  000030b8  29210a00	
   90  000030bc          	.align 2
   91  000030bc          	LC3_LF0:
   92  000030bc  73746163	.ascii "stack_grow (%d): Done!\n\000"
   92  000030c0  6b5f6772	
   92  000030c4  6f772028	
   92  000030c8  2564293a	
   92  000030cc  20446f6e	
   92  000030d0  65210a00	
   93  000030d4          	.text
   94  000010d4          	.align 2
   95  000010d4          	.proc _main
   96  000010d4          	.global _main
   97  000010d4          	_main:
   98                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
   99  000010d4  afbefffc	sw	-4(r29),r30; push fp
  100  000010d8  001df020	add	r30,r0,r29; fp = sp
  101  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  102  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  103  000010e4  8fc20000	lw	r2,(r30)
  104  000010e8  8fc30004	lw	r3,4(r30)
  105  000010ec  0c001060	jal	___main
  106  000010f0  54000000	nop; not filled.
  107  000010f4  64410002	snei	r1,r2,#2
  108  000010f8  10200028	beqz	r1,L17_LF0
  109  000010fc  54000000	nop; not filled.
  110  00001100  23bdfff8	addi	r29,r29,#-8
  111  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  112  00001108  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  113  0000110c  afa40000	sw	(r29),r4
  114  00001110  0c00017c	jal	_Printf
  115  00001114  54000000	nop; not filled.
  116  00001118  0c00027c	jal	_Exit
  117  0000111c  54000000	nop; not filled.
  118  00001120  23bd0008	addi	r29,r29,#8
  119  00001124          	L17_LF0:
  120  00001124  23bdfff0	addi	r29,r29,#-16
  121  00001128  8c630004	lw	r3,4(r3)
  122  0000112c  afa30000	sw	(r29),r3
  123  00001130  20040000	addi	r4,r0,#0
  124  00001134  afa40004	sw	4(r29),r4
  125  00001138  2004000a	addi	r4,r0,#10
  126  0000113c  afa40008	sw	8(r29),r4
  127  00001140  0c000b10	jal	_dstrtol
  128  00001144  54000000	nop; not filled.
  129  00001148  00011020	add	r2,r0,r1
  130  0000114c  0c00014c	jal	_getpid
  131  00001150  54000000	nop; not filled.
  132  00001154  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  133  00001158  24843034	addui	r4,r4,(LC1_LF0)&0xffff
  134  0000115c  afa40000	sw	(r29),r4
  135  00001160  afa10004	sw	4(r29),r1
  136  00001164  0c000128	jal	_Printf
  137  00001168  54000000	nop; not filled.
  138  0000116c  0c000084	jal	_grow
  139  00001170  54000000	nop; not filled.
  140  00001174  afa20000	sw	(r29),r2
  141  00001178  0c000168	jal	_sem_signal
  142  0000117c  54000000	nop; not filled.
  143  00001180  23bd0010	addi	r29,r29,#16
  144  00001184  64210001	snei	r1,r1,#1
  145  00001188  10200038	beqz	r1,L18_LF0
  146  0000118c  54000000	nop; not filled.
  147  00001190  0c000108	jal	_getpid
  148  00001194  54000000	nop; not filled.
  149  00001198  23bdfff0	addi	r29,r29,#-16
  150  0000119c  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  151  000011a0  24843084	addui	r4,r4,(LC2_LF0)&0xffff
  152  000011a4  afa40000	sw	(r29),r4
  153  000011a8  afa10004	sw	4(r29),r1
  154  000011ac  afa20008	sw	8(r29),r2
  155  000011b0  0c0000dc	jal	_Printf
  156  000011b4  54000000	nop; not filled.
  157  000011b8  0c0001dc	jal	_Exit
  158  000011bc  54000000	nop; not filled.
  159  000011c0  23bd0010	addi	r29,r29,#16
  160  000011c4          	L18_LF0:
  161  000011c4  0c0000d4	jal	_getpid
  162  000011c8  54000000	nop; not filled.
  163  000011cc  23bdfff8	addi	r29,r29,#-8
  164  000011d0  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  165  000011d4  248430bc	addui	r4,r4,(LC3_LF0)&0xffff
  166  000011d8  afa40000	sw	(r29),r4
  167  000011dc  afa10004	sw	4(r29),r1
  168  000011e0  0c0000ac	jal	_Printf
  169  000011e4  54000000	nop; not filled.
  170  000011e8  23bd0008	addi	r29,r29,#8
  171  000011ec  0c000f54	jal	_exit
  172  000011f0  54000000	nop
  173  000011f4          	.endproc _main
  174  000011f4          	.align 2
  175  000011f4          	.proc _grow
  176  000011f4          	.global _grow
  177  000011f4          	_grow:
  178                      ;  Function 'grow'; 10000 bytes of locals, 2 regs to save.
  179  000011f4  afbefffc	sw	-4(r29),r30; push fp
  180  000011f8  001df020	add	r30,r0,r29; fp = sp
  181  000011fc  afbffff8	sw	-8(r29),r31; push ret addr
  182  00001200  2fbd2720	subui	r29,r29,#10016; alloc local storage
  183  00001204  afa20000	sw	0(r29),r2
  184  00001208  afa30004	sw	4(r29),r3
  185  0000120c  23dfd8e8	addi	r31,r30,#-10008
  186  00001210  23c2fff7	addi	r2,r30,#-9
  187  00001214          	L29_LF0:
  188  00001214  20030000	addi	r3,r0,(#0x0)&0xff
  189  00001218  a3e30000	sb	(r31),r3
  190  0000121c  23ff0001	addi	r31,r31,#1
  191  00001220  03e2082c	sle	r1,r31,r2
  192  00001224  1420ffec	bnez	r1,L29_LF0
  193  00001228  54000000	nop; not filled.
  194  0000122c  8fa20000	lw	r2,0(r29)
  195  00001230  8fa30004	lw	r3,4(r29)
  196  00001234  8fdffff8	lw	r31,-8(r30)
  197  00001238  001ee820	add	r29,r0,r30
  198  0000123c  8fdefffc	lw	r30,-4(r30)
  199  00001240  4be00000	jr	r31
  200  00001244  54000000	nop
  201  00001248          	.endproc _grow
  202                      ;;;
  203                      ;;; Stub functions for DLX traps.
  204                      ;;;
  205                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  206                      ;;;
  207                      ;;; The traps such as Open and Close
  208                      ;;; (note the capital letters) are for use by user programs.  The traps
  209                      ;;; with names such as open and close (lower case) are for use by the OS.
  210                      ;;;
  213  00001248          	.align 2
  215                      ;;; The following are the traps to be used by user-level programs
  216                      ;;;
  218  00001248          	.align 2
  219  00001248          	.proc _Open
  220  00001248          	.global _Open
  221  00001248          	_Open:
  222                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  223                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  224                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  225  00001248  44000213	trap	#0x213
  226  0000124c  4be00000	jr	r31
  227  00001250  54000000	nop
  228  00001254          	.endproc _Open
  230  00001254          	.proc _Close
  231  00001254          	.global _Close
  232  00001254          	_Close:
  233  00001254  44000214	trap	#0x214
  234  00001258  4be00000	jr	r31
  235  0000125c  54000000	nop
  236  00001260          	.endproc _Close
  238  00001260          	.proc _Read
  239  00001260          	.global _Read
  240  00001260          	_Read:
  241  00001260  44000210	trap	#0x210
  242  00001264  4be00000	jr	r31
  243  00001268  54000000	nop
  244  0000126c          	.endproc _Read
  246  0000126c          	.proc _Write
  247  0000126c          	.global _Write
  248  0000126c          	_Write:
  249  0000126c  44000211	trap	#0x211
  250  00001270  4be00000	jr	r31
  251  00001274  54000000	nop
  252  00001278          	.endproc _Write
  254  00001278          	.proc _Lseek
  255  00001278          	.global _Lseek
  256  00001278          	_Lseek:
  257  00001278  44000212	trap	#0x212
  258  0000127c  4be00000	jr	r31
  259  00001280  54000000	nop
  260  00001284          	.endproc _Lseek
  262  00001284          	.proc _Putchar
  263  00001284          	.global _Putchar
  264  00001284          	_Putchar:
  265  00001284  44000280	trap	#0x280
  266  00001288  4be00000	jr	r31
  267  0000128c  54000000	nop
  268  00001290          	.endproc _Putchar
  270  00001290          	.proc _Printf
  271  00001290          	.global _Printf
  272  00001290          	_Printf:
  273  00001290  44000201	trap	#0x201
  274  00001294  4be00000	jr	r31
  275  00001298  54000000	nop
  276  0000129c          	.endproc _Printf
  278  0000129c          	.proc _getpid
  279  0000129c          	.global _getpid
  280  0000129c          	_getpid:
  281  0000129c  44000431	trap	#0x431
  282  000012a0  4be00000	jr	r31
  283  000012a4  54000000	nop
  284  000012a8          	.endproc _getpid
  286  000012a8          	.proc _process_create
  287  000012a8          	.global _process_create
  288  000012a8          	_process_create:
  289  000012a8  44000432	trap	#0x432
  290  000012ac  4be00000	jr	r31
  291  000012b0  54000000	nop
  292  000012b4          	.endproc _process_create
  294  000012b4          	.proc _shmget
  295  000012b4          	.global _shmget
  296  000012b4          	_shmget:
  297  000012b4  44000440	trap	#0x440
  298  000012b8  4be00000	jr	r31
  299  000012bc  54000000	nop
  300  000012c0          	.endproc _shmget
  302  000012c0          	.proc _shmat
  303  000012c0          	.global _shmat
  304  000012c0          	_shmat:
  305  000012c0  44000441	trap	#0x441
  306  000012c4  4be00000	jr	r31
  307  000012c8  54000000	nop
  308  000012cc          	.endproc _shmat
  310  000012cc          	.proc _sem_create
  311  000012cc          	.global _sem_create
  312  000012cc          	_sem_create:
  313  000012cc  44000450	trap	#0x450
  314  000012d0  4be00000	jr	r31
  315  000012d4  54000000	nop
  316  000012d8          	.endproc _sem_create
  318  000012d8          	.proc _sem_wait
  319  000012d8          	.global _sem_wait
  320  000012d8          	_sem_wait:
  321  000012d8  44000451	trap	#0x451
  322  000012dc  4be00000	jr	r31
  323  000012e0  54000000	nop
  324  000012e4          	.endproc _sem_wait
  326  000012e4          	.proc _sem_signal
  327  000012e4          	.global _sem_signal
  328  000012e4          	_sem_signal:
  329  000012e4  44000452	trap	#0x452
  330  000012e8  4be00000	jr	r31
  331  000012ec  54000000	nop
  332  000012f0          	.endproc _sem_signal
  334  000012f0          	.proc _lock_create
  335  000012f0          	.global _lock_create
  336  000012f0          	_lock_create:
  337  000012f0  44000453	trap	#0x453
  338  000012f4  4be00000	jr	r31
  339  000012f8  54000000	nop
  340  000012fc          	.endproc _lock_create
  342  000012fc          	.proc _lock_acquire
  343  000012fc          	.global _lock_acquire
  344  000012fc          	_lock_acquire:
  345  000012fc  44000454	trap	#0x454
  346  00001300  4be00000	jr	r31
  347  00001304  54000000	nop
  348  00001308          	.endproc _lock_acquire
  350  00001308          	.proc _lock_release
  351  00001308          	.global _lock_release
  352  00001308          	_lock_release:
  353  00001308  44000455	trap	#0x455
  354  0000130c  4be00000	jr	r31
  355  00001310  54000000	nop
  356  00001314          	.endproc _lock_release
  358  00001314          	.proc _cond_create
  359  00001314          	.global _cond_create
  360  00001314          	_cond_create:
  361  00001314  44000456	trap	#0x456
  362  00001318  4be00000	jr	r31
  363  0000131c  54000000	nop
  364  00001320          	.endproc _cond_create
  366  00001320          	.proc _cond_wait
  367  00001320          	.global _cond_wait
  368  00001320          	_cond_wait:
  369  00001320  44000457	trap	#0x457
  370  00001324  4be00000	jr	r31
  371  00001328  54000000	nop
  372  0000132c          	.endproc _cond_wait
  374  0000132c          	.proc _cond_signal
  375  0000132c          	.global _cond_signal
  376  0000132c          	_cond_signal:
  377  0000132c  44000458	trap	#0x458
  378  00001330  4be00000	jr	r31
  379  00001334  54000000	nop
  380  00001338          	.endproc _cond_signal
  382  00001338          	.proc _cond_broadcast
  383  00001338          	.global _cond_broadcast
  384  00001338          	_cond_broadcast:
  385  00001338  44000459	trap	#0x459
  386  0000133c  4be00000	jr	r31
  387  00001340  54000000	nop
  388  00001344          	.endproc _cond_broadcast
  390  00001344          	.proc _mbox_create
  391  00001344          	.global _mbox_create
  392  00001344          	_mbox_create:
  393  00001344  44000460	trap	#0x460
  394  00001348  4be00000	jr	r31
  395  0000134c  54000000	nop
  396  00001350          	.endproc _mbox_create
  398  00001350          	.proc _mbox_open
  399  00001350          	.global _mbox_open
  400  00001350          	_mbox_open:
  401  00001350  44000461	trap	#0x461
  402  00001354  4be00000	jr	r31
  403  00001358  54000000	nop
  404  0000135c          	.endproc _mbox_open
  406  0000135c          	.proc _mbox_close
  407  0000135c          	.global _mbox_close
  408  0000135c          	_mbox_close:
  409  0000135c  44000462	trap	#0x462
  410  00001360  4be00000	jr	r31
  411  00001364  54000000	nop
  412  00001368          	.endproc _mbox_close
  414  00001368          	.proc _mbox_send
  415  00001368          	.global _mbox_send
  416  00001368          	_mbox_send:
  417  00001368  44000463	trap	#0x463
  418  0000136c  4be00000	jr	r31
  419  00001370  54000000	nop
  420  00001374          	.endproc _mbox_send
  422  00001374          	.proc _mbox_recv
  423  00001374          	.global _mbox_recv
  424  00001374          	_mbox_recv:
  425  00001374  44000464	trap	#0x464
  426  00001378  4be00000	jr	r31
  427  0000137c  54000000	nop
  428  00001380          	.endproc _mbox_recv
  430  00001380          	.proc _sleep
  431  00001380          	.global _sleep
  432  00001380          	_sleep:
  433  00001380  44000465	trap	#0x465
  434  00001384  4be00000	jr	r31
  435  00001388  54000000	nop
  436  0000138c          	.endproc _sleep
  438  0000138c          	.proc _yield
  439  0000138c          	.global _yield
  440  0000138c          	_yield:
  441  0000138c  44000466	trap	#0x466
  442  00001390  4be00000	jr	r31
  443  00001394  54000000	nop
  444  00001398          	.endproc _yield
  447  00001398          	.proc _Exit
  448  00001398          	.global _Exit
  449  00001398          	_Exit:
  450  00001398  44000500	trap	#0x500
  451  0000139c  4be00000	jr	r31
  452  000013a0  54000000	nop
  453  000013a4          	.endproc _Exit
  456  000013a4          	.proc _malloc
  457  000013a4          	.global _malloc
  458  000013a4          	_malloc:
  459  000013a4  44000467	trap	#0x467
  460  000013a8  4be00000	jr	r31
  461  000013ac          	.endproc _malloc
  464  000013ac          	.proc _mfree
  465  000013ac          	.global _mfree
  466  000013ac          	_mfree:
  467  000013ac  44000468	trap	#0x468
  468  000013b0  4be00000	jr	r31
  469  000013b4          	.endproc _mfree
  470                      ; Compiled by GCC
  472  000013b4          	.align 2
  473  000013b4          	.proc _isspace
  474  000013b4          	.global _isspace
  475  000013b4          	_isspace:
  476                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  477  000013b4  afbefffc	sw	-4(r29),r30; push fp
  478  000013b8  001df020	add	r30,r0,r29; fp = sp
  479  000013bc  afbffff8	sw	-8(r29),r31; push ret addr
  480  000013c0  2fbd0018	subui	r29,r29,#24; alloc local storage
  481  000013c4  afa20000	sw	0(r29),r2
  482  000013c8  afa30004	sw	4(r29),r3
  483  000013cc  afa40008	sw	8(r29),r4
  484  000013d0  83c20003	lb	r2,3(r30)
  485  000013d4  20010000	addi	r1,r0,#0
  486  000013d8  304300ff	andi	r3,r2,#0x00ff
  487  000013dc  60640020	seqi	r4,r3,#32
  488  000013e0  1480002c	bnez	r4,L3_LF2
  489  000013e4  54000000	nop; delay slot nop
  490  000013e8  304300ff	andi	r3,r2,#0x00ff
  491  000013ec  60640009	seqi	r4,r3,#9
  492  000013f0  1480001c	bnez	r4,L3_LF2
  493  000013f4  54000000	nop; delay slot nop
  494  000013f8  304300ff	andi	r3,r2,#0x00ff
  495  000013fc  6064000a	seqi	r4,r3,#10
  496  00001400  1480000c	bnez	r4,L3_LF2
  497  00001404  54000000	nop; delay slot nop
  498  00001408  08000008	j	L2_LF2
  499  0000140c  54000000	nop; delay slot nop
  500  00001410          	L3_LF2:
  501  00001410  20010001	addi	r1,r0,#1
  502  00001414          	L2_LF2:
  503  00001414  08000004	j	L1_LF2
  504  00001418  54000000	nop; delay slot nop
  505  0000141c          	L1_LF2:
  506  0000141c  8fa20000	lw	r2,0(r29)
  507  00001420  8fa30004	lw	r3,4(r29)
  508  00001424  8fa40008	lw	r4,8(r29)
  509  00001428  8fdffff8	lw	r31,-8(r30)
  510  0000142c  001ee820	add	r29,r0,r30
  511  00001430  8fdefffc	lw	r30,-4(r30)
  512  00001434  4be00000	jr	r31
  513  00001438  54000000	nop
  514  0000143c          	.endproc _isspace
  515  0000143c          	.align 2
  516  0000143c          	.proc _isxdigit
  517  0000143c          	.global _isxdigit
  518  0000143c          	_isxdigit:
  519                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  520  0000143c  afbefffc	sw	-4(r29),r30; push fp
  521  00001440  001df020	add	r30,r0,r29; fp = sp
  522  00001444  afbffff8	sw	-8(r29),r31; push ret addr
  523  00001448  2fbd0018	subui	r29,r29,#24; alloc local storage
  524  0000144c  afa20000	sw	0(r29),r2
  525  00001450  afa30004	sw	4(r29),r3
  526  00001454  afa40008	sw	8(r29),r4
  527  00001458  83c20003	lb	r2,3(r30)
  528  0000145c  20010000	addi	r1,r0,#0
  529  00001460  304300ff	andi	r3,r2,#0x00ff
  530  00001464  6c64002f	sgtui	r4,r3,#47
  531  00001468  1080001c	beqz	r4,L7_LF2
  532  0000146c  54000000	nop; delay slot nop
  533  00001470  304300ff	andi	r3,r2,#0x00ff
  534  00001474  70640039	sleui	r4,r3,#57
  535  00001478  1480005c	bnez	r4,L6_LF2
  536  0000147c  54000000	nop; delay slot nop
  537  00001480  08000004	j	L7_LF2
  538  00001484  54000000	nop; delay slot nop
  539  00001488          	L7_LF2:
  540  00001488  304300ff	andi	r3,r2,#0x00ff
  541  0000148c  6c640060	sgtui	r4,r3,#96
  542  00001490  1080001c	beqz	r4,L8_LF2
  543  00001494  54000000	nop; delay slot nop
  544  00001498  304300ff	andi	r3,r2,#0x00ff
  545  0000149c  70640066	sleui	r4,r3,#102
  546  000014a0  14800034	bnez	r4,L6_LF2
  547  000014a4  54000000	nop; delay slot nop
  548  000014a8  08000004	j	L8_LF2
  549  000014ac  54000000	nop; delay slot nop
  550  000014b0          	L8_LF2:
  551  000014b0  304300ff	andi	r3,r2,#0x00ff
  552  000014b4  6c640040	sgtui	r4,r3,#64
  553  000014b8  10800020	beqz	r4,L5_LF2
  554  000014bc  54000000	nop; delay slot nop
  555  000014c0  304300ff	andi	r3,r2,#0x00ff
  556  000014c4  70640041	sleui	r4,r3,#65
  557  000014c8  1480000c	bnez	r4,L6_LF2
  558  000014cc  54000000	nop; delay slot nop
  559  000014d0  08000008	j	L5_LF2
  560  000014d4  54000000	nop; delay slot nop
  561  000014d8          	L6_LF2:
  562  000014d8  20010001	addi	r1,r0,#1
  563  000014dc          	L5_LF2:
  564  000014dc  08000004	j	L4_LF2
  565  000014e0  54000000	nop; delay slot nop
  566  000014e4          	L4_LF2:
  567  000014e4  8fa20000	lw	r2,0(r29)
  568  000014e8  8fa30004	lw	r3,4(r29)
  569  000014ec  8fa40008	lw	r4,8(r29)
  570  000014f0  8fdffff8	lw	r31,-8(r30)
  571  000014f4  001ee820	add	r29,r0,r30
  572  000014f8  8fdefffc	lw	r30,-4(r30)
  573  000014fc  4be00000	jr	r31
  574  00001500  54000000	nop
  575  00001504          	.endproc _isxdigit
  576  00001504          	.align 2
  577  00001504          	.proc _dstrcpy
  578  00001504          	.global _dstrcpy
  579  00001504          	_dstrcpy:
  580                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  581  00001504  afbefffc	sw	-4(r29),r30; push fp
  582  00001508  001df020	add	r30,r0,r29; fp = sp
  583  0000150c  afbffff8	sw	-8(r29),r31; push ret addr
  584  00001510  2fbd0018	subui	r29,r29,#24; alloc local storage
  585  00001514  afa20000	sw	0(r29),r2
  586  00001518  afa30004	sw	4(r29),r3
  587  0000151c  8fc10000	lw	r1,(r30)
  588  00001520  afc1fff4	sw	-12(r30),r1
  589  00001524          	L10_LF2:
  590  00001524  8fc10000	lw	r1,(r30)
  591  00001528  20220001	addi	r2,r1,#1
  592  0000152c  afc20000	sw	(r30),r2
  593  00001530  8fc20004	lw	r2,4(r30)
  594  00001534  20430001	addi	r3,r2,#1
  595  00001538  afc30004	sw	4(r30),r3
  596  0000153c  80420000	lb	r2,(r2)
  597  00001540  a0220000	sb	(r1),r2
  598  00001544  a3c2fff3	sb	-13(r30),r2
  599  00001548          	L12_LF2:
  600  00001548  93c1fff3	lbu	r1,-13(r30)
  601  0000154c  64220000	snei	r2,r1,#0
  602  00001550  1440000c	bnez	r2,L13_LF2
  603  00001554  54000000	nop; delay slot nop
  604  00001558  0800000c	j	L11_LF2
  605  0000155c  54000000	nop; delay slot nop
  606  00001560          	L13_LF2:
  607  00001560  0bffffc0	j	L10_LF2
  608  00001564  54000000	nop; delay slot nop
  609  00001568          	L11_LF2:
  610  00001568  8fc1fff4	lw	r1,-12(r30)
  611  0000156c  08000004	j	L9_LF2
  612  00001570  54000000	nop; delay slot nop
  613  00001574          	L9_LF2:
  614  00001574  8fa20000	lw	r2,0(r29)
  615  00001578  8fa30004	lw	r3,4(r29)
  616  0000157c  8fdffff8	lw	r31,-8(r30)
  617  00001580  001ee820	add	r29,r0,r30
  618  00001584  8fdefffc	lw	r30,-4(r30)
  619  00001588  4be00000	jr	r31
  620  0000158c  54000000	nop
  621  00001590          	.endproc _dstrcpy
  622  00001590          	.align 2
  623  00001590          	.proc _dstrncpy
  624  00001590          	.global _dstrncpy
  625  00001590          	_dstrncpy:
  626                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  627  00001590  afbefffc	sw	-4(r29),r30; push fp
  628  00001594  001df020	add	r30,r0,r29; fp = sp
  629  00001598  afbffff8	sw	-8(r29),r31; push ret addr
  630  0000159c  2fbd0018	subui	r29,r29,#24; alloc local storage
  631  000015a0  afa20000	sw	0(r29),r2
  632  000015a4  afa30004	sw	4(r29),r3
  633  000015a8  8fc10000	lw	r1,(r30)
  634  000015ac  afc1fff4	sw	-12(r30),r1
  635  000015b0          	L15_LF2:
  636  000015b0  8fc10008	lw	r1,8(r30)
  637  000015b4  2022ffff	addi	r2,r1,#-1
  638  000015b8  afc20008	sw	8(r30),r2
  639  000015bc  70210000	slei	r1,r1,#0
  640  000015c0  1020000c	beqz	r1,L18_LF2
  641  000015c4  54000000	nop; delay slot nop
  642  000015c8  08000048	j	L16_LF2
  643  000015cc  54000000	nop; delay slot nop
  644  000015d0          	L18_LF2:
  645  000015d0  8fc10000	lw	r1,(r30)
  646  000015d4  20220001	addi	r2,r1,#1
  647  000015d8  afc20000	sw	(r30),r2
  648  000015dc  8fc20004	lw	r2,4(r30)
  649  000015e0  20430001	addi	r3,r2,#1
  650  000015e4  afc30004	sw	4(r30),r3
  651  000015e8  80420000	lb	r2,(r2)
  652  000015ec  a0220000	sb	(r1),r2
  653  000015f0  a3c2fff3	sb	-13(r30),r2
  654  000015f4          	L17_LF2:
  655  000015f4  93c1fff3	lbu	r1,-13(r30)
  656  000015f8  64220000	snei	r2,r1,#0
  657  000015fc  1440000c	bnez	r2,L19_LF2
  658  00001600  54000000	nop; delay slot nop
  659  00001604  0800000c	j	L16_LF2
  660  00001608  54000000	nop; delay slot nop
  661  0000160c          	L19_LF2:
  662  0000160c  0bffffa0	j	L15_LF2
  663  00001610  54000000	nop; delay slot nop
  664  00001614          	L16_LF2:
  665  00001614  8fc1fff4	lw	r1,-12(r30)
  666  00001618  08000004	j	L14_LF2
  667  0000161c  54000000	nop; delay slot nop
  668  00001620          	L14_LF2:
  669  00001620  8fa20000	lw	r2,0(r29)
  670  00001624  8fa30004	lw	r3,4(r29)
  671  00001628  8fdffff8	lw	r31,-8(r30)
  672  0000162c  001ee820	add	r29,r0,r30
  673  00001630  8fdefffc	lw	r30,-4(r30)
  674  00001634  4be00000	jr	r31
  675  00001638  54000000	nop
  676  0000163c          	.endproc _dstrncpy
  677  0000163c          	.align 2
  678  0000163c          	.proc _dstrcat
  679  0000163c          	.global _dstrcat
  680  0000163c          	_dstrcat:
  681                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  682  0000163c  afbefffc	sw	-4(r29),r30; push fp
  683  00001640  001df020	add	r30,r0,r29; fp = sp
  684  00001644  afbffff8	sw	-8(r29),r31; push ret addr
  685  00001648  2fbd0018	subui	r29,r29,#24; alloc local storage
  686  0000164c  afa20000	sw	0(r29),r2
  687  00001650  8fc10000	lw	r1,(r30)
  688  00001654  afc1fff4	sw	-12(r30),r1
  689  00001658          	L21_LF2:
  690  00001658  8fc10000	lw	r1,(r30)
  691  0000165c  90220000	lbu	r2,(r1)
  692  00001660  64410000	snei	r1,r2,#0
  693  00001664  1420000c	bnez	r1,L23_LF2
  694  00001668  54000000	nop; delay slot nop
  695  0000166c  0800001c	j	L22_LF2
  696  00001670  54000000	nop; delay slot nop
  697  00001674          	L23_LF2:
  698  00001674  8fc20000	lw	r2,(r30)
  699  00001678  20410001	addi	r1,r2,#1
  700  0000167c  00011020	add	r2,r0,r1
  701  00001680  afc20000	sw	(r30),r2
  702  00001684  0bffffd0	j	L21_LF2
  703  00001688  54000000	nop; delay slot nop
  704  0000168c          	L22_LF2:
  705  0000168c  23bdfff8	addi	r29,r29,#-8
  706  00001690  001d0820	add	r1,r0,r29
  707  00001694  8fc20000	lw	r2,(r30)
  708  00001698  ac220000	sw	(r1),r2
  709  0000169c  8fc20004	lw	r2,4(r30)
  710  000016a0  ac220004	sw	4(r1),r2
  711  000016a4  0ffffe5c	jal	_dstrcpy
  712  000016a8  54000000	nop; delay slot nop
  713  000016ac  23bd0008	addi	r29,r29,#8
  714  000016b0  8fc1fff4	lw	r1,-12(r30)
  715  000016b4  08000004	j	L20_LF2
  716  000016b8  54000000	nop; delay slot nop
  717  000016bc          	L20_LF2:
  718  000016bc  8fa20000	lw	r2,0(r29)
  719  000016c0  8fdffff8	lw	r31,-8(r30)
  720  000016c4  001ee820	add	r29,r0,r30
  721  000016c8  8fdefffc	lw	r30,-4(r30)
  722  000016cc  4be00000	jr	r31
  723  000016d0  54000000	nop
  724  000016d4          	.endproc _dstrcat
  725  000016d4          	.align 2
  726  000016d4          	.proc _dstrncmp
  727  000016d4          	.global _dstrncmp
  728  000016d4          	_dstrncmp:
  729                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  730  000016d4  afbefffc	sw	-4(r29),r30; push fp
  731  000016d8  001df020	add	r30,r0,r29; fp = sp
  732  000016dc  afbffff8	sw	-8(r29),r31; push ret addr
  733  000016e0  2fbd0018	subui	r29,r29,#24; alloc local storage
  734  000016e4  afa20000	sw	0(r29),r2
  735  000016e8  afa30004	sw	4(r29),r3
  736  000016ec  54000000	nop
  737  000016f0  20010000	addi	r1,r0,#0
  738  000016f4  afc1fff4	sw	-12(r30),r1
  739  000016f8          	L25_LF2:
  740  000016f8  8fc1fff4	lw	r1,-12(r30)
  741  000016fc  8fc20008	lw	r2,8(r30)
  742  00001700  0022082a	slt	r1,r1,r2
  743  00001704  1420000c	bnez	r1,L28_LF2
  744  00001708  54000000	nop; delay slot nop
  745  0000170c  08000088	j	L26_LF2
  746  00001710  54000000	nop; delay slot nop
  747  00001714          	L28_LF2:
  748  00001714  8fc10004	lw	r1,4(r30)
  749  00001718  90220000	lbu	r2,(r1)
  750  0000171c  64410000	snei	r1,r2,#0
  751  00001720  14200018	bnez	r1,L29_LF2
  752  00001724  54000000	nop; delay slot nop
  753  00001728  20010000	addi	r1,r0,#0
  754  0000172c  080000d8	j	L24_LF2
  755  00001730  54000000	nop; delay slot nop
  756  00001734  08000028	j	L30_LF2
  757  00001738  54000000	nop; delay slot nop
  758  0000173c          	L29_LF2:
  759  0000173c  8fc10000	lw	r1,(r30)
  760  00001740  8fc20004	lw	r2,4(r30)
  761  00001744  90210000	lbu	r1,(r1)
  762  00001748  90420000	lbu	r2,(r2)
  763  0000174c  00220829	sne	r1,r1,r2
  764  00001750  1020000c	beqz	r1,L30_LF2
  765  00001754  54000000	nop; delay slot nop
  766  00001758  0800003c	j	L26_LF2
  767  0000175c  54000000	nop; delay slot nop
  768  00001760          	L31_LF2:
  769  00001760          	L30_LF2:
  770  00001760  8fc20000	lw	r2,(r30)
  771  00001764  20410001	addi	r1,r2,#1
  772  00001768  00011020	add	r2,r0,r1
  773  0000176c  afc20000	sw	(r30),r2
  774  00001770  8fc20004	lw	r2,4(r30)
  775  00001774  20410001	addi	r1,r2,#1
  776  00001778  00011020	add	r2,r0,r1
  777  0000177c  afc20004	sw	4(r30),r2
  778  00001780          	L27_LF2:
  779  00001780  8fc2fff4	lw	r2,-12(r30)
  780  00001784  20410001	addi	r1,r2,#1
  781  00001788  00011020	add	r2,r0,r1
  782  0000178c  afc2fff4	sw	-12(r30),r2
  783  00001790  0bffff64	j	L25_LF2
  784  00001794  54000000	nop; delay slot nop
  785  00001798          	L26_LF2:
  786  00001798  8fc1fff4	lw	r1,-12(r30)
  787  0000179c  8fc20008	lw	r2,8(r30)
  788  000017a0  00220828	seq	r1,r1,r2
  789  000017a4  10200018	beqz	r1,L32_LF2
  790  000017a8  54000000	nop; delay slot nop
  791  000017ac  20010000	addi	r1,r0,#0
  792  000017b0  08000054	j	L24_LF2
  793  000017b4  54000000	nop; delay slot nop
  794  000017b8  0800004c	j	L33_LF2
  795  000017bc  54000000	nop; delay slot nop
  796  000017c0          	L32_LF2:
  797  000017c0  8fc20000	lw	r2,(r30)
  798  000017c4  90410000	lbu	r1,(r2)
  799  000017c8  8fc20004	lw	r2,4(r30)
  800  000017cc  90430000	lbu	r3,(r2)
  801  000017d0  00230822	sub	r1,r1,r3
  802  000017d4  74220000	sgei	r2,r1,#0
  803  000017d8  10400020	beqz	r2,L34_LF2
  804  000017dc  54000000	nop; delay slot nop
  805  000017e0  8fc10000	lw	r1,(r30)
  806  000017e4  8fc20004	lw	r2,4(r30)
  807  000017e8  90210000	lbu	r1,(r1)
  808  000017ec  90420000	lbu	r2,(r2)
  809  000017f0  00220829	sne	r1,r1,r2
  810  000017f4  08000008	j	L35_LF2
  811  000017f8  54000000	nop; delay slot nop
  812  000017fc          	L34_LF2:
  813  000017fc  2001ffff	addi	r1,r0,#-1
  814  00001800          	L35_LF2:
  815  00001800  08000004	j	L24_LF2
  816  00001804  54000000	nop; delay slot nop
  817  00001808          	L33_LF2:
  818  00001808          	L24_LF2:
  819  00001808  8fa20000	lw	r2,0(r29)
  820  0000180c  8fa30004	lw	r3,4(r29)
  821  00001810  8fdffff8	lw	r31,-8(r30)
  822  00001814  001ee820	add	r29,r0,r30
  823  00001818  8fdefffc	lw	r30,-4(r30)
  824  0000181c  4be00000	jr	r31
  825  00001820  54000000	nop
  826  00001824          	.endproc _dstrncmp
  827  00001824          	.align 2
  828  00001824          	.proc _dstrlen
  829  00001824          	.global _dstrlen
  830  00001824          	_dstrlen:
  831                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  832  00001824  afbefffc	sw	-4(r29),r30; push fp
  833  00001828  001df020	add	r30,r0,r29; fp = sp
  834  0000182c  afbffff8	sw	-8(r29),r31; push ret addr
  835  00001830  2fbd0018	subui	r29,r29,#24; alloc local storage
  836  00001834  afa20000	sw	0(r29),r2
  837  00001838  20010000	addi	r1,r0,#0
  838  0000183c  afc1fff4	sw	-12(r30),r1
  839  00001840          	L37_LF2:
  840  00001840  8fc10000	lw	r1,(r30)
  841  00001844  20220001	addi	r2,r1,#1
  842  00001848  afc20000	sw	(r30),r2
  843  0000184c  90210000	lbu	r1,(r1)
  844  00001850  64220000	snei	r2,r1,#0
  845  00001854  1440000c	bnez	r2,L39_LF2
  846  00001858  54000000	nop; delay slot nop
  847  0000185c  0800001c	j	L38_LF2
  848  00001860  54000000	nop; delay slot nop
  849  00001864          	L39_LF2:
  850  00001864  8fc2fff4	lw	r2,-12(r30)
  851  00001868  20410001	addi	r1,r2,#1
  852  0000186c  00011020	add	r2,r0,r1
  853  00001870  afc2fff4	sw	-12(r30),r2
  854  00001874  0bffffc8	j	L37_LF2
  855  00001878  54000000	nop; delay slot nop
  856  0000187c          	L38_LF2:
  857  0000187c  8fc1fff4	lw	r1,-12(r30)
  858  00001880  08000004	j	L36_LF2
  859  00001884  54000000	nop; delay slot nop
  860  00001888          	L36_LF2:
  861  00001888  8fa20000	lw	r2,0(r29)
  862  0000188c  8fdffff8	lw	r31,-8(r30)
  863  00001890  001ee820	add	r29,r0,r30
  864  00001894  8fdefffc	lw	r30,-4(r30)
  865  00001898  4be00000	jr	r31
  866  0000189c  54000000	nop
  867  000018a0          	.endproc _dstrlen
  868  000018a0          	.align 2
  869  000018a0          	.proc _dstrstr
  870  000018a0          	.global _dstrstr
  871  000018a0          	_dstrstr:
  872                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  873  000018a0  afbefffc	sw	-4(r29),r30; push fp
  874  000018a4  001df020	add	r30,r0,r29; fp = sp
  875  000018a8  afbffff8	sw	-8(r29),r31; push ret addr
  876  000018ac  2fbd0018	subui	r29,r29,#24; alloc local storage
  877  000018b0  afa20000	sw	0(r29),r2
  878  000018b4  23bdfff8	addi	r29,r29,#-8
  879  000018b8  001d0820	add	r1,r0,r29
  880  000018bc  8fc20004	lw	r2,4(r30)
  881  000018c0  ac220000	sw	(r1),r2
  882  000018c4  0fffff5c	jal	_dstrlen
  883  000018c8  54000000	nop; delay slot nop
  884  000018cc  23bd0008	addi	r29,r29,#8
  885  000018d0  afc1fff4	sw	-12(r30),r1
  886  000018d4          	L41_LF2:
  887  000018d4  8fc10000	lw	r1,(r30)
  888  000018d8  90220000	lbu	r2,(r1)
  889  000018dc  64410000	snei	r1,r2,#0
  890  000018e0  1420000c	bnez	r1,L43_LF2
  891  000018e4  54000000	nop; delay slot nop
  892  000018e8  08000060	j	L42_LF2
  893  000018ec  54000000	nop; delay slot nop
  894  000018f0          	L43_LF2:
  895  000018f0  23bdfff0	addi	r29,r29,#-16
  896  000018f4  001d0820	add	r1,r0,r29
  897  000018f8  8fc20000	lw	r2,(r30)
  898  000018fc  ac220000	sw	(r1),r2
  899  00001900  8fc20004	lw	r2,4(r30)
  900  00001904  ac220004	sw	4(r1),r2
  901  00001908  8fc2fff4	lw	r2,-12(r30)
  902  0000190c  ac220008	sw	8(r1),r2
  903  00001910  0ffffdc0	jal	_dstrncmp
  904  00001914  54000000	nop; delay slot nop
  905  00001918  23bd0010	addi	r29,r29,#16
  906  0000191c  64220000	snei	r2,r1,#0
  907  00001920  14400010	bnez	r2,L44_LF2
  908  00001924  54000000	nop; delay slot nop
  909  00001928  8fc10000	lw	r1,(r30)
  910  0000192c  08000028	j	L40_LF2
  911  00001930  54000000	nop; delay slot nop
  912  00001934          	L44_LF2:
  913  00001934  8fc20000	lw	r2,(r30)
  914  00001938  20410001	addi	r1,r2,#1
  915  0000193c  00011020	add	r2,r0,r1
  916  00001940  afc20000	sw	(r30),r2
  917  00001944  0bffff8c	j	L41_LF2
  918  00001948  54000000	nop; delay slot nop
  919  0000194c          	L42_LF2:
  920  0000194c  20010000	addi	r1,r0,#0
  921  00001950  08000004	j	L40_LF2
  922  00001954  54000000	nop; delay slot nop
  923  00001958          	L40_LF2:
  924  00001958  8fa20000	lw	r2,0(r29)
  925  0000195c  8fdffff8	lw	r31,-8(r30)
  926  00001960  001ee820	add	r29,r0,r30
  927  00001964  8fdefffc	lw	r30,-4(r30)
  928  00001968  4be00000	jr	r31
  929  0000196c  54000000	nop
  930  00001970          	.endproc _dstrstr
  931  00001970          	.align 2
  932  00001970          	.proc _dmindex
  933  00001970          	.global _dmindex
  934  00001970          	_dmindex:
  935                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  936  00001970  afbefffc	sw	-4(r29),r30; push fp
  937  00001974  001df020	add	r30,r0,r29; fp = sp
  938  00001978  afbffff8	sw	-8(r29),r31; push ret addr
  939  0000197c  2fbd0018	subui	r29,r29,#24; alloc local storage
  940  00001980  afa20000	sw	0(r29),r2
  941  00001984  54000000	nop
  942  00001988          	L46_LF2:
  943  00001988  8fc10000	lw	r1,(r30)
  944  0000198c  90220000	lbu	r2,(r1)
  945  00001990  64410000	snei	r1,r2,#0
  946  00001994  1420000c	bnez	r1,L48_LF2
  947  00001998  54000000	nop; delay slot nop
  948  0000199c  08000070	j	L47_LF2
  949  000019a0  54000000	nop; delay slot nop
  950  000019a4          	L48_LF2:
  951  000019a4  8fc10004	lw	r1,4(r30)
  952  000019a8  afc1fff4	sw	-12(r30),r1
  953  000019ac          	L49_LF2:
  954  000019ac  8fc1fff4	lw	r1,-12(r30)
  955  000019b0  90220000	lbu	r2,(r1)
  956  000019b4  64410000	snei	r1,r2,#0
  957  000019b8  1420000c	bnez	r1,L52_LF2
  958  000019bc  54000000	nop; delay slot nop
  959  000019c0  08000044	j	L50_LF2
  960  000019c4  54000000	nop; delay slot nop
  961  000019c8          	L52_LF2:
  962  000019c8  8fc10000	lw	r1,(r30)
  963  000019cc  8fc2fff4	lw	r2,-12(r30)
  964  000019d0  90210000	lbu	r1,(r1)
  965  000019d4  90420000	lbu	r2,(r2)
  966  000019d8  00220828	seq	r1,r1,r2
  967  000019dc  10200010	beqz	r1,L51_LF2
  968  000019e0  54000000	nop; delay slot nop
  969  000019e4  8fc10000	lw	r1,(r30)
  970  000019e8  08000030	j	L45_LF2
  971  000019ec  54000000	nop; delay slot nop
  972  000019f0          	L53_LF2:
  973  000019f0          	L51_LF2:
  974  000019f0  8fc2fff4	lw	r2,-12(r30)
  975  000019f4  20410001	addi	r1,r2,#1
  976  000019f8  00011020	add	r2,r0,r1
  977  000019fc  afc2fff4	sw	-12(r30),r2
  978  00001a00  0bffffa8	j	L49_LF2
  979  00001a04  54000000	nop; delay slot nop
  980  00001a08          	L50_LF2:
  981  00001a08  0bffff7c	j	L46_LF2
  982  00001a0c  54000000	nop; delay slot nop
  983  00001a10          	L47_LF2:
  984  00001a10  20010000	addi	r1,r0,#0
  985  00001a14  08000004	j	L45_LF2
  986  00001a18  54000000	nop; delay slot nop
  987  00001a1c          	L45_LF2:
  988  00001a1c  8fa20000	lw	r2,0(r29)
  989  00001a20  8fdffff8	lw	r31,-8(r30)
  990  00001a24  001ee820	add	r29,r0,r30
  991  00001a28  8fdefffc	lw	r30,-4(r30)
  992  00001a2c  4be00000	jr	r31
  993  00001a30  54000000	nop
  994  00001a34          	.endproc _dmindex
  995  00001a34          	.align 2
  996  00001a34          	.proc _dindex
  997  00001a34          	.global _dindex
  998  00001a34          	_dindex:
  999                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1000  00001a34  afbefffc	sw	-4(r29),r30; push fp
 1001  00001a38  001df020	add	r30,r0,r29; fp = sp
 1002  00001a3c  afbffff8	sw	-8(r29),r31; push ret addr
 1003  00001a40  2fbd0010	subui	r29,r29,#16; alloc local storage
 1004  00001a44  afa20000	sw	0(r29),r2
 1005  00001a48  54000000	nop
 1006  00001a4c          	L55_LF2:
 1007  00001a4c  8fc10000	lw	r1,(r30)
 1008  00001a50  90220000	lbu	r2,(r1)
 1009  00001a54  64410000	snei	r1,r2,#0
 1010  00001a58  1420000c	bnez	r1,L57_LF2
 1011  00001a5c  54000000	nop; delay slot nop
 1012  00001a60  08000040	j	L56_LF2
 1013  00001a64  54000000	nop; delay slot nop
 1014  00001a68          	L57_LF2:
 1015  00001a68  8fc10000	lw	r1,(r30)
 1016  00001a6c  90220000	lbu	r2,(r1)
 1017  00001a70  8fc10004	lw	r1,4(r30)
 1018  00001a74  00411028	seq	r2,r2,r1
 1019  00001a78  10400010	beqz	r2,L58_LF2
 1020  00001a7c  54000000	nop; delay slot nop
 1021  00001a80  8fc10000	lw	r1,(r30)
 1022  00001a84  08000028	j	L54_LF2
 1023  00001a88  54000000	nop; delay slot nop
 1024  00001a8c          	L58_LF2:
 1025  00001a8c  8fc20000	lw	r2,(r30)
 1026  00001a90  20410001	addi	r1,r2,#1
 1027  00001a94  00011020	add	r2,r0,r1
 1028  00001a98  afc20000	sw	(r30),r2
 1029  00001a9c  0bffffac	j	L55_LF2
 1030  00001aa0  54000000	nop; delay slot nop
 1031  00001aa4          	L56_LF2:
 1032  00001aa4  20010000	addi	r1,r0,#0
 1033  00001aa8  08000004	j	L54_LF2
 1034  00001aac  54000000	nop; delay slot nop
 1035  00001ab0          	L54_LF2:
 1036  00001ab0  8fa20000	lw	r2,0(r29)
 1037  00001ab4  8fdffff8	lw	r31,-8(r30)
 1038  00001ab8  001ee820	add	r29,r0,r30
 1039  00001abc  8fdefffc	lw	r30,-4(r30)
 1040  00001ac0  4be00000	jr	r31
 1041  00001ac4  54000000	nop
 1042  00001ac8          	.endproc _dindex
 1043  00001ac8          	.align 2
 1044  00001ac8          	.proc _ditoa
 1045  00001ac8          	.global _ditoa
 1046  00001ac8          	_ditoa:
 1047                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1048  00001ac8  afbefffc	sw	-4(r29),r30; push fp
 1049  00001acc  001df020	add	r30,r0,r29; fp = sp
 1050  00001ad0  afbffff8	sw	-8(r29),r31; push ret addr
 1051  00001ad4  2fbd0018	subui	r29,r29,#24; alloc local storage
 1052  00001ad8  afa20000	sw	0(r29),r2
 1053  00001adc  afa30004	sw	4(r29),r3
 1054  00001ae0  8fc10000	lw	r1,(r30)
 1055  00001ae4  68220000	slti	r2,r1,#0
 1056  00001ae8  1040002c	beqz	r2,L60_LF2
 1057  00001aec  54000000	nop; delay slot nop
 1058  00001af0  8fc10004	lw	r1,4(r30)
 1059  00001af4  20220001	addi	r2,r1,#1
 1060  00001af8  afc20004	sw	4(r30),r2
 1061  00001afc  2002002d	addi	r2,r0,(#0x2d)&0xff
 1062  00001b00  a0220000	sb	(r1),r2
 1063  00001b04  8fc10000	lw	r1,(r30)
 1064  00001b08  00011022	sub	r2,r0,r1
 1065  00001b0c  afc20000	sw	(r30),r2
 1066  00001b10  08000118	j	L61_LF2
 1067  00001b14  54000000	nop; delay slot nop
 1068  00001b18          	L60_LF2:
 1069  00001b18  8fc10000	lw	r1,(r30)
 1070  00001b1c  64220000	snei	r2,r1,#0
 1071  00001b20  14400020	bnez	r2,L62_LF2
 1072  00001b24  54000000	nop; delay slot nop
 1073  00001b28  8fc10004	lw	r1,4(r30)
 1074  00001b2c  20220001	addi	r2,r1,#1
 1075  00001b30  afc20004	sw	4(r30),r2
 1076  00001b34  20020030	addi	r2,r0,(#0x30)&0xff
 1077  00001b38  a0220000	sb	(r1),r2
 1078  00001b3c  080000ec	j	L61_LF2
 1079  00001b40  54000000	nop; delay slot nop
 1080  00001b44          	L62_LF2:
 1081  00001b44  20010001	addi	r1,r0,#1
 1082  00001b48  afc1fff4	sw	-12(r30),r1
 1083  00001b4c          	L64_LF2:
 1084  00001b4c  8fc1fff4	lw	r1,-12(r30)
 1085  00001b50  8fc20000	lw	r2,(r30)
 1086  00001b54  0022082c	sle	r1,r1,r2
 1087  00001b58  1420000c	bnez	r1,L66_LF2
 1088  00001b5c  54000000	nop; delay slot nop
 1089  00001b60  08000024	j	L65_LF2
 1090  00001b64  54000000	nop; delay slot nop
 1091  00001b68          	L67_LF2:
 1092  00001b68          	L66_LF2:
 1093  00001b68  8fc1fff4	lw	r1,-12(r30)
 1094  00001b6c  00011820	add	r3,r0,r1
 1095  00001b70  50620002	slli	r2,r3,#0x2
 1096  00001b74  00411020	add	r2,r2,r1
 1097  00001b78  50410001	slli	r1,r2,#0x1
 1098  00001b7c  afc1fff4	sw	-12(r30),r1
 1099  00001b80  0bffffc8	j	L64_LF2
 1100  00001b84  54000000	nop; delay slot nop
 1101  00001b88          	L65_LF2:
 1102  00001b88  54000000	nop
 1103  00001b8c          	L68_LF2:
 1104  00001b8c  8fc1fff4	lw	r1,-12(r30)
 1105  00001b90  2002000a	addi	r2,r0,#10
 1106  00001b94  00200035	movi2fp	f0,r1
 1107  00001b98  00400835	movi2fp	f1,r2
 1108  00001b9c  0401000f	div	f0,f0,f1
 1109  00001ba0  00000834	movfp2i	r1,f0
 1110  00001ba4  afc1fff4	sw	-12(r30),r1
 1111  00001ba8  8fc10004	lw	r1,4(r30)
 1112  00001bac  20220001	addi	r2,r1,#1
 1113  00001bb0  afc20004	sw	4(r30),r2
 1114  00001bb4  8fc20000	lw	r2,(r30)
 1115  00001bb8  8fc3fff4	lw	r3,-12(r30)
 1116  00001bbc  00400035	movi2fp	f0,r2
 1117  00001bc0  00600835	movi2fp	f1,r3
 1118  00001bc4  0401000f	div	f0,f0,f1
 1119  00001bc8  00001034	movfp2i	r2,f0
 1120  00001bcc  00021820	add	r3,r0,r2
 1121  00001bd0  20620030	addi	r2,r3,#48
 1122  00001bd4  a0220000	sb	(r1),r2
 1123  00001bd8  8fc10000	lw	r1,(r30)
 1124  00001bdc  8fc3fff4	lw	r3,-12(r30)
 1125  00001be0  00200035	movi2fp	f0,r1
 1126  00001be4  00600835	movi2fp	f1,r3
 1127  00001be8  0401000f	div	f0,f0,f1
 1128  00001bec  00001034	movfp2i	r2,f0
 1129  00001bf0  8fc3fff4	lw	r3,-12(r30)
 1130  00001bf4  00400035	movi2fp	f0,r2
 1131  00001bf8  00600835	movi2fp	f1,r3
 1132  00001bfc  0401000e	mult	f0,f0,f1
 1133  00001c00  00001034	movfp2i	r2,f0
 1134  00001c04  00220822	sub	r1,r1,r2
 1135  00001c08  afc10000	sw	(r30),r1
 1136  00001c0c          	L70_LF2:
 1137  00001c0c  8fc1fff4	lw	r1,-12(r30)
 1138  00001c10  6c220001	sgti	r2,r1,#1
 1139  00001c14  1440000c	bnez	r2,L71_LF2
 1140  00001c18  54000000	nop; delay slot nop
 1141  00001c1c  0800000c	j	L61_LF2
 1142  00001c20  54000000	nop; delay slot nop
 1143  00001c24          	L71_LF2:
 1144  00001c24  0bffff64	j	L68_LF2
 1145  00001c28  54000000	nop; delay slot nop
 1146  00001c2c          	L69_LF2:
 1147  00001c2c          	L63_LF2:
 1148  00001c2c          	L61_LF2:
 1149  00001c2c  8fc10004	lw	r1,4(r30)
 1150  00001c30  20020000	addi	r2,r0,(#0x0)&0xff
 1151  00001c34  a0220000	sb	(r1),r2
 1152  00001c38          	L59_LF2:
 1153  00001c38  8fa20000	lw	r2,0(r29)
 1154  00001c3c  8fa30004	lw	r3,4(r29)
 1155  00001c40  8fdffff8	lw	r31,-8(r30)
 1156  00001c44  001ee820	add	r29,r0,r30
 1157  00001c48  8fdefffc	lw	r30,-4(r30)
 1158  00001c4c  4be00000	jr	r31
 1159  00001c50  54000000	nop
 1160  00001c54          	.endproc _ditoa
 1161  00001c54          	.align 2
 1162  00001c54          	.proc _dstrtol
 1163  00001c54          	.global _dstrtol
 1164  00001c54          	_dstrtol:
 1165                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1166  00001c54  afbefffc	sw	-4(r29),r30; push fp
 1167  00001c58  001df020	add	r30,r0,r29; fp = sp
 1168  00001c5c  afbffff8	sw	-8(r29),r31; push ret addr
 1169  00001c60  2fbd0020	subui	r29,r29,#32; alloc local storage
 1170  00001c64  afa20000	sw	0(r29),r2
 1171  00001c68  20010000	addi	r1,r0,#0
 1172  00001c6c  afc1fff4	sw	-12(r30),r1
 1173  00001c70          	L73_LF2:
 1174  00001c70  8fc10000	lw	r1,(r30)
 1175  00001c74  90220000	lbu	r2,(r1)
 1176  00001c78  60410020	seqi	r1,r2,#32
 1177  00001c7c  14200034	bnez	r1,L75_LF2
 1178  00001c80  54000000	nop; delay slot nop
 1179  00001c84  8fc10000	lw	r1,(r30)
 1180  00001c88  90220000	lbu	r2,(r1)
 1181  00001c8c  60410009	seqi	r1,r2,#9
 1182  00001c90  14200020	bnez	r1,L75_LF2
 1183  00001c94  54000000	nop; delay slot nop
 1184  00001c98  8fc10000	lw	r1,(r30)
 1185  00001c9c  90220000	lbu	r2,(r1)
 1186  00001ca0  6041000a	seqi	r1,r2,#10
 1187  00001ca4  1420000c	bnez	r1,L75_LF2
 1188  00001ca8  54000000	nop; delay slot nop
 1189  00001cac  0800001c	j	L74_LF2
 1190  00001cb0  54000000	nop; delay slot nop
 1191  00001cb4          	L75_LF2:
 1192  00001cb4  8fc20000	lw	r2,(r30)
 1193  00001cb8  20410001	addi	r1,r2,#1
 1194  00001cbc  00011020	add	r2,r0,r1
 1195  00001cc0  afc20000	sw	(r30),r2
 1196  00001cc4  0bffffa8	j	L73_LF2
 1197  00001cc8  54000000	nop; delay slot nop
 1198  00001ccc          	L74_LF2:
 1199  00001ccc  8fc10004	lw	r1,4(r30)
 1200  00001cd0  64220000	snei	r2,r1,#0
 1201  00001cd4  10400010	beqz	r2,L76_LF2
 1202  00001cd8  54000000	nop; delay slot nop
 1203  00001cdc  8fc10004	lw	r1,4(r30)
 1204  00001ce0  8fc20000	lw	r2,(r30)
 1205  00001ce4  ac220000	sw	(r1),r2
 1206  00001ce8          	L76_LF2:
 1207  00001ce8  8fc10000	lw	r1,(r30)
 1208  00001cec  90220000	lbu	r2,(r1)
 1209  00001cf0  64410000	snei	r1,r2,#0
 1210  00001cf4  14200010	bnez	r1,L77_LF2
 1211  00001cf8  54000000	nop; delay slot nop
 1212  00001cfc  8fc1fff4	lw	r1,-12(r30)
 1213  00001d00  08000294	j	L72_LF2
 1214  00001d04  54000000	nop; delay slot nop
 1215  00001d08          	L77_LF2:
 1216  00001d08  8fc10000	lw	r1,(r30)
 1217  00001d0c  90220000	lbu	r2,(r1)
 1218  00001d10  6041002d	seqi	r1,r2,#45
 1219  00001d14  10200024	beqz	r1,L78_LF2
 1220  00001d18  54000000	nop; delay slot nop
 1221  00001d1c  2001ffff	addi	r1,r0,#-1
 1222  00001d20  afc1ffec	sw	-20(r30),r1
 1223  00001d24  8fc20000	lw	r2,(r30)
 1224  00001d28  20410001	addi	r1,r2,#1
 1225  00001d2c  00011020	add	r2,r0,r1
 1226  00001d30  afc20000	sw	(r30),r2
 1227  00001d34  0800000c	j	L79_LF2
 1228  00001d38  54000000	nop; delay slot nop
 1229  00001d3c          	L78_LF2:
 1230  00001d3c  20010001	addi	r1,r0,#1
 1231  00001d40  afc1ffec	sw	-20(r30),r1
 1232  00001d44          	L79_LF2:
 1233  00001d44  8fc10008	lw	r1,8(r30)
 1234  00001d48  64220000	snei	r2,r1,#0
 1235  00001d4c  14400090	bnez	r2,L80_LF2
 1236  00001d50  54000000	nop; delay slot nop
 1237  00001d54  8fc10000	lw	r1,(r30)
 1238  00001d58  90220000	lbu	r2,(r1)
 1239  00001d5c  60410030	seqi	r1,r2,#48
 1240  00001d60  10200074	beqz	r1,L81_LF2
 1241  00001d64  54000000	nop; delay slot nop
 1242  00001d68  8fc20000	lw	r2,(r30)
 1243  00001d6c  20410001	addi	r1,r2,#1
 1244  00001d70  00011020	add	r2,r0,r1
 1245  00001d74  afc20000	sw	(r30),r2
 1246  00001d78  8fc10000	lw	r1,(r30)
 1247  00001d7c  90220000	lbu	r2,(r1)
 1248  00001d80  60410078	seqi	r1,r2,#120
 1249  00001d84  14200020	bnez	r1,L83_LF2
 1250  00001d88  54000000	nop; delay slot nop
 1251  00001d8c  8fc10000	lw	r1,(r30)
 1252  00001d90  90220000	lbu	r2,(r1)
 1253  00001d94  60410058	seqi	r1,r2,#88
 1254  00001d98  1420000c	bnez	r1,L83_LF2
 1255  00001d9c  54000000	nop; delay slot nop
 1256  00001da0  08000024	j	L82_LF2
 1257  00001da4  54000000	nop; delay slot nop
 1258  00001da8          	L83_LF2:
 1259  00001da8  20010010	addi	r1,r0,#16
 1260  00001dac  afc10008	sw	8(r30),r1
 1261  00001db0  8fc20000	lw	r2,(r30)
 1262  00001db4  20410001	addi	r1,r2,#1
 1263  00001db8  00011020	add	r2,r0,r1
 1264  00001dbc  afc20000	sw	(r30),r2
 1265  00001dc0  0800000c	j	L84_LF2
 1266  00001dc4  54000000	nop; delay slot nop
 1267  00001dc8          	L82_LF2:
 1268  00001dc8  20010008	addi	r1,r0,#8
 1269  00001dcc  afc10008	sw	8(r30),r1
 1270  00001dd0          	L84_LF2:
 1271  00001dd0  0800000c	j	L80_LF2
 1272  00001dd4  54000000	nop; delay slot nop
 1273  00001dd8          	L81_LF2:
 1274  00001dd8  2001000a	addi	r1,r0,#10
 1275  00001ddc  afc10008	sw	8(r30),r1
 1276  00001de0          	L85_LF2:
 1277  00001de0          	L80_LF2:
 1278  00001de0  8fc10008	lw	r1,8(r30)
 1279  00001de4  70220000	slei	r2,r1,#0
 1280  00001de8  1440001c	bnez	r2,L87_LF2
 1281  00001dec  54000000	nop; delay slot nop
 1282  00001df0  8fc10008	lw	r1,8(r30)
 1283  00001df4  6c220010	sgti	r2,r1,#16
 1284  00001df8  1440000c	bnez	r2,L87_LF2
 1285  00001dfc  54000000	nop; delay slot nop
 1286  00001e00  08000010	j	L86_LF2
 1287  00001e04  54000000	nop; delay slot nop
 1288  00001e08          	L87_LF2:
 1289  00001e08  8fc1fff4	lw	r1,-12(r30)
 1290  00001e0c  08000188	j	L72_LF2
 1291  00001e10  54000000	nop; delay slot nop
 1292  00001e14          	L86_LF2:
 1293  00001e14  54000000	nop
 1294  00001e18          	L88_LF2:
 1295  00001e18  8fc10000	lw	r1,(r30)
 1296  00001e1c  90220000	lbu	r2,(r1)
 1297  00001e20  6c41002f	sgtui	r1,r2,#47
 1298  00001e24  10200030	beqz	r1,L91_LF2
 1299  00001e28  54000000	nop; delay slot nop
 1300  00001e2c  8fc10000	lw	r1,(r30)
 1301  00001e30  90220000	lbu	r2,(r1)
 1302  00001e34  70410039	sleui	r1,r2,#57
 1303  00001e38  1020001c	beqz	r1,L91_LF2
 1304  00001e3c  54000000	nop; delay slot nop
 1305  00001e40  8fc10000	lw	r1,(r30)
 1306  00001e44  90220000	lbu	r2,(r1)
 1307  00001e48  2041ffd0	addi	r1,r2,#-48
 1308  00001e4c  afc1fff0	sw	-16(r30),r1
 1309  00001e50  0800008c	j	L92_LF2
 1310  00001e54  54000000	nop; delay slot nop
 1311  00001e58          	L91_LF2:
 1312  00001e58  8fc10000	lw	r1,(r30)
 1313  00001e5c  90220000	lbu	r2,(r1)
 1314  00001e60  6c410060	sgtui	r1,r2,#96
 1315  00001e64  10200030	beqz	r1,L93_LF2
 1316  00001e68  54000000	nop; delay slot nop
 1317  00001e6c  8fc10000	lw	r1,(r30)
 1318  00001e70  90220000	lbu	r2,(r1)
 1319  00001e74  7041007a	sleui	r1,r2,#122
 1320  00001e78  1020001c	beqz	r1,L93_LF2
 1321  00001e7c  54000000	nop; delay slot nop
 1322  00001e80  8fc10000	lw	r1,(r30)
 1323  00001e84  90220000	lbu	r2,(r1)
 1324  00001e88  2041ffa9	addi	r1,r2,#-87
 1325  00001e8c  afc1fff0	sw	-16(r30),r1
 1326  00001e90  0800004c	j	L92_LF2
 1327  00001e94  54000000	nop; delay slot nop
 1328  00001e98          	L93_LF2:
 1329  00001e98  8fc10000	lw	r1,(r30)
 1330  00001e9c  90220000	lbu	r2,(r1)
 1331  00001ea0  6c410040	sgtui	r1,r2,#64
 1332  00001ea4  10200030	beqz	r1,L95_LF2
 1333  00001ea8  54000000	nop; delay slot nop
 1334  00001eac  8fc10000	lw	r1,(r30)
 1335  00001eb0  90220000	lbu	r2,(r1)
 1336  00001eb4  7041005a	sleui	r1,r2,#90
 1337  00001eb8  1020001c	beqz	r1,L95_LF2
 1338  00001ebc  54000000	nop; delay slot nop
 1339  00001ec0  8fc10000	lw	r1,(r30)
 1340  00001ec4  90220000	lbu	r2,(r1)
 1341  00001ec8  2041ffc9	addi	r1,r2,#-55
 1342  00001ecc  afc1fff0	sw	-16(r30),r1
 1343  00001ed0  0800000c	j	L92_LF2
 1344  00001ed4  54000000	nop; delay slot nop
 1345  00001ed8          	L95_LF2:
 1346  00001ed8  200103e8	addi	r1,r0,#1000
 1347  00001edc  afc1fff0	sw	-16(r30),r1
 1348  00001ee0          	L96_LF2:
 1349  00001ee0          	L94_LF2:
 1350  00001ee0          	L92_LF2:
 1351  00001ee0  8fc1fff0	lw	r1,-16(r30)
 1352  00001ee4  8fc20008	lw	r2,8(r30)
 1353  00001ee8  0022082a	slt	r1,r1,r2
 1354  00001eec  10200040	beqz	r1,L90_LF2
 1355  00001ef0  54000000	nop; delay slot nop
 1356  00001ef4  8fc1fff4	lw	r1,-12(r30)
 1357  00001ef8  8fc20008	lw	r2,8(r30)
 1358  00001efc  00200035	movi2fp	f0,r1
 1359  00001f00  00400835	movi2fp	f1,r2
 1360  00001f04  0401000e	mult	f0,f0,f1
 1361  00001f08  00000834	movfp2i	r1,f0
 1362  00001f0c  afc1fff4	sw	-12(r30),r1
 1363  00001f10  8fc1fff4	lw	r1,-12(r30)
 1364  00001f14  8fc2fff0	lw	r2,-16(r30)
 1365  00001f18  00220820	add	r1,r1,r2
 1366  00001f1c  afc1fff4	sw	-12(r30),r1
 1367  00001f20  8fc20000	lw	r2,(r30)
 1368  00001f24  20410001	addi	r1,r2,#1
 1369  00001f28  00011020	add	r2,r0,r1
 1370  00001f2c  afc20000	sw	(r30),r2
 1371  00001f30          	L97_LF2:
 1372  00001f30          	L90_LF2:
 1373  00001f30  8fc1fff0	lw	r1,-16(r30)
 1374  00001f34  8fc20008	lw	r2,8(r30)
 1375  00001f38  0022082a	slt	r1,r1,r2
 1376  00001f3c  1420000c	bnez	r1,L98_LF2
 1377  00001f40  54000000	nop; delay slot nop
 1378  00001f44  0800000c	j	L89_LF2
 1379  00001f48  54000000	nop; delay slot nop
 1380  00001f4c          	L98_LF2:
 1381  00001f4c  0bfffec8	j	L88_LF2
 1382  00001f50  54000000	nop; delay slot nop
 1383  00001f54          	L89_LF2:
 1384  00001f54  8fc10004	lw	r1,4(r30)
 1385  00001f58  64220000	snei	r2,r1,#0
 1386  00001f5c  10400010	beqz	r2,L99_LF2
 1387  00001f60  54000000	nop; delay slot nop
 1388  00001f64  8fc10004	lw	r1,4(r30)
 1389  00001f68  8fc20000	lw	r2,(r30)
 1390  00001f6c  ac220000	sw	(r1),r2
 1391  00001f70          	L99_LF2:
 1392  00001f70  8fc1fff4	lw	r1,-12(r30)
 1393  00001f74  8fc2ffec	lw	r2,-20(r30)
 1394  00001f78  00200035	movi2fp	f0,r1
 1395  00001f7c  00400835	movi2fp	f1,r2
 1396  00001f80  0401000e	mult	f0,f0,f1
 1397  00001f84  00000834	movfp2i	r1,f0
 1398  00001f88  afc1fff4	sw	-12(r30),r1
 1399  00001f8c  8fc1fff4	lw	r1,-12(r30)
 1400  00001f90  08000004	j	L72_LF2
 1401  00001f94  54000000	nop; delay slot nop
 1402  00001f98          	L72_LF2:
 1403  00001f98  8fa20000	lw	r2,0(r29)
 1404  00001f9c  8fdffff8	lw	r31,-8(r30)
 1405  00001fa0  001ee820	add	r29,r0,r30
 1406  00001fa4  8fdefffc	lw	r30,-4(r30)
 1407  00001fa8  4be00000	jr	r31
 1408  00001fac  54000000	nop
 1409  00001fb0          	.endproc _dstrtol
 1410  00001fb0          	.align 2
 1411  00001fb0          	.proc _bcopy
 1412  00001fb0          	.global _bcopy
 1413  00001fb0          	_bcopy:
 1414                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1415  00001fb0  afbefffc	sw	-4(r29),r30; push fp
 1416  00001fb4  001df020	add	r30,r0,r29; fp = sp
 1417  00001fb8  afbffff8	sw	-8(r29),r31; push ret addr
 1418  00001fbc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1419  00001fc0  afa20000	sw	0(r29),r2
 1420  00001fc4  afa30004	sw	4(r29),r3
 1421  00001fc8  54000000	nop
 1422  00001fcc          	L101_LF2:
 1423  00001fcc  8fc10008	lw	r1,8(r30)
 1424  00001fd0  2022ffff	addi	r2,r1,#-1
 1425  00001fd4  afc20008	sw	8(r30),r2
 1426  00001fd8  6c210000	sgti	r1,r1,#0
 1427  00001fdc  1420000c	bnez	r1,L103_LF2
 1428  00001fe0  54000000	nop; delay slot nop
 1429  00001fe4  0800002c	j	L102_LF2
 1430  00001fe8  54000000	nop; delay slot nop
 1431  00001fec          	L103_LF2:
 1432  00001fec  8fc10004	lw	r1,4(r30)
 1433  00001ff0  20220001	addi	r2,r1,#1
 1434  00001ff4  afc20004	sw	4(r30),r2
 1435  00001ff8  8fc20000	lw	r2,(r30)
 1436  00001ffc  20430001	addi	r3,r2,#1
 1437  00002000  afc30000	sw	(r30),r3
 1438  00002004  80420000	lb	r2,(r2)
 1439  00002008  a0220000	sb	(r1),r2
 1440  0000200c  0bffffbc	j	L101_LF2
 1441  00002010  54000000	nop; delay slot nop
 1442  00002014          	L102_LF2:
 1443  00002014          	L100_LF2:
 1444  00002014  8fa20000	lw	r2,0(r29)
 1445  00002018  8fa30004	lw	r3,4(r29)
 1446  0000201c  8fdffff8	lw	r31,-8(r30)
 1447  00002020  001ee820	add	r29,r0,r30
 1448  00002024  8fdefffc	lw	r30,-4(r30)
 1449  00002028  4be00000	jr	r31
 1450  0000202c  54000000	nop
 1451  00002030          	.endproc _bcopy
 1452  00002030          	.align 2
 1453  00002030          	.proc _bzero
 1454  00002030          	.global _bzero
 1455  00002030          	_bzero:
 1456                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1457  00002030  afbefffc	sw	-4(r29),r30; push fp
 1458  00002034  001df020	add	r30,r0,r29; fp = sp
 1459  00002038  afbffff8	sw	-8(r29),r31; push ret addr
 1460  0000203c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1461  00002040  afa20000	sw	0(r29),r2
 1462  00002044  54000000	nop
 1463  00002048          	L105_LF2:
 1464  00002048  8fc10004	lw	r1,4(r30)
 1465  0000204c  2022ffff	addi	r2,r1,#-1
 1466  00002050  afc20004	sw	4(r30),r2
 1467  00002054  6c210000	sgti	r1,r1,#0
 1468  00002058  1420000c	bnez	r1,L107_LF2
 1469  0000205c  54000000	nop; delay slot nop
 1470  00002060  08000020	j	L106_LF2
 1471  00002064  54000000	nop; delay slot nop
 1472  00002068          	L107_LF2:
 1473  00002068  8fc10000	lw	r1,(r30)
 1474  0000206c  20220001	addi	r2,r1,#1
 1475  00002070  afc20000	sw	(r30),r2
 1476  00002074  20020000	addi	r2,r0,(#0x0)&0xff
 1477  00002078  a0220000	sb	(r1),r2
 1478  0000207c  0bffffc8	j	L105_LF2
 1479  00002080  54000000	nop; delay slot nop
 1480  00002084          	L106_LF2:
 1481  00002084          	L104_LF2:
 1482  00002084  8fa20000	lw	r2,0(r29)
 1483  00002088  8fdffff8	lw	r31,-8(r30)
 1484  0000208c  001ee820	add	r29,r0,r30
 1485  00002090  8fdefffc	lw	r30,-4(r30)
 1486  00002094  4be00000	jr	r31
 1487  00002098  54000000	nop
 1488  0000209c          	.endproc _bzero
 1489  0000209c          	.align 2
 1490  0000209c          	.proc _min
 1491  0000209c          	.global _min
 1492  0000209c          	_min:
 1493                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1494  0000209c  afbefffc	sw	-4(r29),r30; push fp
 1495  000020a0  001df020	add	r30,r0,r29; fp = sp
 1496  000020a4  afbffff8	sw	-8(r29),r31; push ret addr
 1497  000020a8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1498  000020ac  afa20000	sw	0(r29),r2
 1499  000020b0  afa30004	sw	4(r29),r3
 1500  000020b4  8fc10000	lw	r1,(r30)
 1501  000020b8  8fc20004	lw	r2,4(r30)
 1502  000020bc  0022182c	sle	r3,r1,r2
 1503  000020c0  14600008	bnez	r3,L109_LF2
 1504  000020c4  54000000	nop; delay slot nop
 1505  000020c8  8fc10004	lw	r1,4(r30)
 1506  000020cc          	L109_LF2:
 1507  000020cc  08000004	j	L108_LF2
 1508  000020d0  54000000	nop; delay slot nop
 1509  000020d4          	L108_LF2:
 1510  000020d4  8fa20000	lw	r2,0(r29)
 1511  000020d8  8fa30004	lw	r3,4(r29)
 1512  000020dc  8fdffff8	lw	r31,-8(r30)
 1513  000020e0  001ee820	add	r29,r0,r30
 1514  000020e4  8fdefffc	lw	r30,-4(r30)
 1515  000020e8  4be00000	jr	r31
 1516  000020ec  54000000	nop
 1517  000020f0          	.endproc _min
 1518  000020f0          	.align 2
 1519  000020f0          	.proc _max
 1520  000020f0          	.global _max
 1521  000020f0          	_max:
 1522                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1523  000020f0  afbefffc	sw	-4(r29),r30; push fp
 1524  000020f4  001df020	add	r30,r0,r29; fp = sp
 1525  000020f8  afbffff8	sw	-8(r29),r31; push ret addr
 1526  000020fc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1527  00002100  afa20000	sw	0(r29),r2
 1528  00002104  afa30004	sw	4(r29),r3
 1529  00002108  8fc10000	lw	r1,(r30)
 1530  0000210c  8fc20004	lw	r2,4(r30)
 1531  00002110  0022182d	sge	r3,r1,r2
 1532  00002114  14600008	bnez	r3,L111_LF2
 1533  00002118  54000000	nop; delay slot nop
 1534  0000211c  8fc10004	lw	r1,4(r30)
 1535  00002120          	L111_LF2:
 1536  00002120  08000004	j	L110_LF2
 1537  00002124  54000000	nop; delay slot nop
 1538  00002128          	L110_LF2:
 1539  00002128  8fa20000	lw	r2,0(r29)
 1540  0000212c  8fa30004	lw	r3,4(r29)
 1541  00002130  8fdffff8	lw	r31,-8(r30)
 1542  00002134  001ee820	add	r29,r0,r30
 1543  00002138  8fdefffc	lw	r30,-4(r30)
 1544  0000213c  4be00000	jr	r31
 1545  00002140  54000000	nop
 1546  00002144          	.endproc _max
 1547                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1548                      ;;;
 1549                      ;;; Most of the traps are called in files from libtraps.
 1552  00002144          	.align 2
 1553  00002144          	.proc _exit
 1554  00002144          	.global _exit
 1555  00002144          	_exit:
 1556  00002144  44000300	trap	#0x300
 1557  00002148  4be00000	jr	r31
 1558  0000214c  54000000	nop
 1559  00002150          	.endproc _exit
 1561                      ; for the benefit of gcc.
 1562  00002150          	.proc ___main
 1563  00002150          	.global ___main
 1564  00002150          	___main:
 1565  00002150  4be00000	jr	r31
 1566  00002154  54000000	nop
 1567  00002158          	.endproc ___main
 1568  00002158          	.text
 1569  00002158          	.global _etext
 1570  00002158          	_etext:
 1571  00002158          	.align 3
 1572  00002158          	.data
 1573  000030d4          	.global _edata
 1574  000030d4          	_edata:
